### YamlMime:ManagedReference
items:
- uid: OpenTK.Mathematics.Vector4i
  commentId: T:OpenTK.Mathematics.Vector4i
  id: Vector4i
  parent: OpenTK.Mathematics
  children:
  - OpenTK.Mathematics.Vector4i.#ctor(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  - OpenTK.Mathematics.Vector4i.#ctor(OpenTK.Mathematics.Vector2i)
  - OpenTK.Mathematics.Vector4i.#ctor(OpenTK.Mathematics.Vector3i,System.Int32)
  - OpenTK.Mathematics.Vector4i.#ctor(OpenTK.Mathematics.Vector3i)
  - OpenTK.Mathematics.Vector4i.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  - OpenTK.Mathematics.Vector4i.#ctor(System.Int32)
  - OpenTK.Mathematics.Vector4i.Abs
  - OpenTK.Mathematics.Vector4i.Abs(OpenTK.Mathematics.Vector4i)
  - OpenTK.Mathematics.Vector4i.Abs(OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@)
  - OpenTK.Mathematics.Vector4i.Add(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  - OpenTK.Mathematics.Vector4i.Add(OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@)
  - OpenTK.Mathematics.Vector4i.Clamp(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  - OpenTK.Mathematics.Vector4i.Clamp(OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@)
  - OpenTK.Mathematics.Vector4i.ComponentMax(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  - OpenTK.Mathematics.Vector4i.ComponentMax(OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@)
  - OpenTK.Mathematics.Vector4i.ComponentMin(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  - OpenTK.Mathematics.Vector4i.ComponentMin(OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@)
  - OpenTK.Mathematics.Vector4i.Deconstruct(System.Int32@,System.Int32@,System.Int32@,System.Int32@)
  - OpenTK.Mathematics.Vector4i.Divide(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  - OpenTK.Mathematics.Vector4i.Divide(OpenTK.Mathematics.Vector4i,System.Int32)
  - OpenTK.Mathematics.Vector4i.Divide(OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@)
  - OpenTK.Mathematics.Vector4i.Divide(OpenTK.Mathematics.Vector4i@,System.Int32,OpenTK.Mathematics.Vector4i@)
  - OpenTK.Mathematics.Vector4i.Equals(OpenTK.Mathematics.Vector4i)
  - OpenTK.Mathematics.Vector4i.Equals(System.Object)
  - OpenTK.Mathematics.Vector4i.EuclideanLength
  - OpenTK.Mathematics.Vector4i.EuclideanLengthSquared
  - OpenTK.Mathematics.Vector4i.GetHashCode
  - OpenTK.Mathematics.Vector4i.Item(System.Int32)
  - OpenTK.Mathematics.Vector4i.ManhattanLength
  - OpenTK.Mathematics.Vector4i.Multiply(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  - OpenTK.Mathematics.Vector4i.Multiply(OpenTK.Mathematics.Vector4i,System.Int32)
  - OpenTK.Mathematics.Vector4i.Multiply(OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@)
  - OpenTK.Mathematics.Vector4i.Multiply(OpenTK.Mathematics.Vector4i@,System.Int32,OpenTK.Mathematics.Vector4i@)
  - OpenTK.Mathematics.Vector4i.One
  - OpenTK.Mathematics.Vector4i.op_Addition(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  - OpenTK.Mathematics.Vector4i.op_Division(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  - OpenTK.Mathematics.Vector4i.op_Division(OpenTK.Mathematics.Vector4i,System.Int32)
  - OpenTK.Mathematics.Vector4i.op_Equality(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  - OpenTK.Mathematics.Vector4i.op_Explicit(OpenTK.Mathematics.Vector4i)~OpenTK.Mathematics.Vector4h
  - OpenTK.Mathematics.Vector4i.op_Explicit(OpenTK.Mathematics.Vector4i)~System.Int32*
  - OpenTK.Mathematics.Vector4i.op_Explicit(OpenTK.Mathematics.Vector4i)~System.IntPtr
  - OpenTK.Mathematics.Vector4i.op_Implicit(OpenTK.Mathematics.Vector4i)~OpenTK.Mathematics.Vector4
  - OpenTK.Mathematics.Vector4i.op_Implicit(OpenTK.Mathematics.Vector4i)~OpenTK.Mathematics.Vector4d
  - OpenTK.Mathematics.Vector4i.op_Implicit(System.ValueTuple{System.Int32,System.Int32,System.Int32,System.Int32})~OpenTK.Mathematics.Vector4i
  - OpenTK.Mathematics.Vector4i.op_Inequality(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  - OpenTK.Mathematics.Vector4i.op_Multiply(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  - OpenTK.Mathematics.Vector4i.op_Multiply(OpenTK.Mathematics.Vector4i,System.Int32)
  - OpenTK.Mathematics.Vector4i.op_Multiply(System.Int32,OpenTK.Mathematics.Vector4i)
  - OpenTK.Mathematics.Vector4i.op_Subtraction(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  - OpenTK.Mathematics.Vector4i.op_UnaryNegation(OpenTK.Mathematics.Vector4i)
  - OpenTK.Mathematics.Vector4i.SizeInBytes
  - OpenTK.Mathematics.Vector4i.Subtract(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  - OpenTK.Mathematics.Vector4i.Subtract(OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@)
  - OpenTK.Mathematics.Vector4i.ToString
  - OpenTK.Mathematics.Vector4i.ToString(System.IFormatProvider)
  - OpenTK.Mathematics.Vector4i.ToString(System.String,System.IFormatProvider)
  - OpenTK.Mathematics.Vector4i.ToString(System.String)
  - OpenTK.Mathematics.Vector4i.ToVector4
  - OpenTK.Mathematics.Vector4i.ToVector4(OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4@)
  - OpenTK.Mathematics.Vector4i.UnitW
  - OpenTK.Mathematics.Vector4i.UnitX
  - OpenTK.Mathematics.Vector4i.UnitY
  - OpenTK.Mathematics.Vector4i.UnitZ
  - OpenTK.Mathematics.Vector4i.W
  - OpenTK.Mathematics.Vector4i.Wx
  - OpenTK.Mathematics.Vector4i.Wxy
  - OpenTK.Mathematics.Vector4i.Wxyz
  - OpenTK.Mathematics.Vector4i.Wxz
  - OpenTK.Mathematics.Vector4i.Wxzy
  - OpenTK.Mathematics.Vector4i.Wy
  - OpenTK.Mathematics.Vector4i.Wyx
  - OpenTK.Mathematics.Vector4i.Wyxz
  - OpenTK.Mathematics.Vector4i.Wyz
  - OpenTK.Mathematics.Vector4i.Wyzx
  - OpenTK.Mathematics.Vector4i.Wz
  - OpenTK.Mathematics.Vector4i.Wzx
  - OpenTK.Mathematics.Vector4i.Wzxy
  - OpenTK.Mathematics.Vector4i.Wzy
  - OpenTK.Mathematics.Vector4i.Wzyw
  - OpenTK.Mathematics.Vector4i.Wzyx
  - OpenTK.Mathematics.Vector4i.X
  - OpenTK.Mathematics.Vector4i.Xw
  - OpenTK.Mathematics.Vector4i.Xwy
  - OpenTK.Mathematics.Vector4i.Xwyz
  - OpenTK.Mathematics.Vector4i.Xwz
  - OpenTK.Mathematics.Vector4i.Xwzy
  - OpenTK.Mathematics.Vector4i.Xy
  - OpenTK.Mathematics.Vector4i.Xyw
  - OpenTK.Mathematics.Vector4i.Xywz
  - OpenTK.Mathematics.Vector4i.Xyz
  - OpenTK.Mathematics.Vector4i.Xz
  - OpenTK.Mathematics.Vector4i.Xzw
  - OpenTK.Mathematics.Vector4i.Xzwy
  - OpenTK.Mathematics.Vector4i.Xzy
  - OpenTK.Mathematics.Vector4i.Xzyw
  - OpenTK.Mathematics.Vector4i.Y
  - OpenTK.Mathematics.Vector4i.Yw
  - OpenTK.Mathematics.Vector4i.Ywx
  - OpenTK.Mathematics.Vector4i.Ywxz
  - OpenTK.Mathematics.Vector4i.Ywz
  - OpenTK.Mathematics.Vector4i.Ywzx
  - OpenTK.Mathematics.Vector4i.Yx
  - OpenTK.Mathematics.Vector4i.Yxw
  - OpenTK.Mathematics.Vector4i.Yxwz
  - OpenTK.Mathematics.Vector4i.Yxz
  - OpenTK.Mathematics.Vector4i.Yxzw
  - OpenTK.Mathematics.Vector4i.Yywz
  - OpenTK.Mathematics.Vector4i.Yyzw
  - OpenTK.Mathematics.Vector4i.Yz
  - OpenTK.Mathematics.Vector4i.Yzw
  - OpenTK.Mathematics.Vector4i.Yzwx
  - OpenTK.Mathematics.Vector4i.Yzx
  - OpenTK.Mathematics.Vector4i.Yzxw
  - OpenTK.Mathematics.Vector4i.Z
  - OpenTK.Mathematics.Vector4i.Zero
  - OpenTK.Mathematics.Vector4i.Zw
  - OpenTK.Mathematics.Vector4i.Zwx
  - OpenTK.Mathematics.Vector4i.Zwxy
  - OpenTK.Mathematics.Vector4i.Zwy
  - OpenTK.Mathematics.Vector4i.Zwyx
  - OpenTK.Mathematics.Vector4i.Zwzy
  - OpenTK.Mathematics.Vector4i.Zx
  - OpenTK.Mathematics.Vector4i.Zxw
  - OpenTK.Mathematics.Vector4i.Zxwy
  - OpenTK.Mathematics.Vector4i.Zxy
  - OpenTK.Mathematics.Vector4i.Zxyw
  - OpenTK.Mathematics.Vector4i.Zy
  - OpenTK.Mathematics.Vector4i.Zyw
  - OpenTK.Mathematics.Vector4i.Zywx
  - OpenTK.Mathematics.Vector4i.Zyx
  - OpenTK.Mathematics.Vector4i.Zyxw
  langs:
  - csharp
  - vb
  name: Vector4i
  nameWithType: Vector4i
  fullName: OpenTK.Mathematics.Vector4i
  type: Struct
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Vector4i
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 24
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Represents a 4D vector using four 32-bit integer numbers.
  remarks: The Vector4i structure is suitable for interoperation with unmanaged code requiring four consecutive integers.
  example: []
  syntax:
    content: >-
      [Serializable]

      public struct Vector4i : IEquatable<Vector4i>, IFormattable
    content.vb: >-
      <Serializable>

      Public Structure Vector4i Implements IEquatable(Of Vector4i), IFormattable
  implements:
  - System.IEquatable{OpenTK.Mathematics.Vector4i}
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4i.X
  commentId: F:OpenTK.Mathematics.Vector4i.X
  id: X
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: X
  nameWithType: Vector4i.X
  fullName: OpenTK.Mathematics.Vector4i.X
  type: Field
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: X
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 31
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: The X component of the Vector4i.
  example: []
  syntax:
    content: public int X
    return:
      type: System.Int32
    content.vb: Public X As Integer
- uid: OpenTK.Mathematics.Vector4i.Y
  commentId: F:OpenTK.Mathematics.Vector4i.Y
  id: Y
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: Vector4i.Y
  fullName: OpenTK.Mathematics.Vector4i.Y
  type: Field
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Y
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 36
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: The Y component of the Vector4i.
  example: []
  syntax:
    content: public int Y
    return:
      type: System.Int32
    content.vb: Public Y As Integer
- uid: OpenTK.Mathematics.Vector4i.Z
  commentId: F:OpenTK.Mathematics.Vector4i.Z
  id: Z
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Z
  nameWithType: Vector4i.Z
  fullName: OpenTK.Mathematics.Vector4i.Z
  type: Field
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Z
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 41
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: The Z component of the Vector4i.
  example: []
  syntax:
    content: public int Z
    return:
      type: System.Int32
    content.vb: Public Z As Integer
- uid: OpenTK.Mathematics.Vector4i.W
  commentId: F:OpenTK.Mathematics.Vector4i.W
  id: W
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: W
  nameWithType: Vector4i.W
  fullName: OpenTK.Mathematics.Vector4i.W
  type: Field
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: W
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 46
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: The W component of the Vector4i.
  example: []
  syntax:
    content: public int W
    return:
      type: System.Int32
    content.vb: Public W As Integer
- uid: OpenTK.Mathematics.Vector4i.#ctor(System.Int32)
  commentId: M:OpenTK.Mathematics.Vector4i.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Vector4i(int)
  nameWithType: Vector4i.Vector4i(int)
  fullName: OpenTK.Mathematics.Vector4i.Vector4i(int)
  type: Constructor
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: .ctor
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 52
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector4i(int value)
    parameters:
    - id: value
      type: System.Int32
      description: The value that will initialize this instance.
    content.vb: Public Sub New(value As Integer)
  overload: OpenTK.Mathematics.Vector4i.#ctor*
  nameWithType.vb: Vector4i.New(Integer)
  fullName.vb: OpenTK.Mathematics.Vector4i.New(Integer)
  name.vb: New(Integer)
- uid: OpenTK.Mathematics.Vector4i.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:OpenTK.Mathematics.Vector4i.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Vector4i(int, int, int, int)
  nameWithType: Vector4i.Vector4i(int, int, int, int)
  fullName: OpenTK.Mathematics.Vector4i.Vector4i(int, int, int, int)
  type: Constructor
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: .ctor
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 67
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector4i(int x, int y, int z, int w)
    parameters:
    - id: x
      type: System.Int32
      description: The X component of the Vector4i.
    - id: y
      type: System.Int32
      description: The Y component of the Vector4i.
    - id: z
      type: System.Int32
      description: The Z component of the Vector4i.
    - id: w
      type: System.Int32
      description: The W component of the Vector4i.
    content.vb: Public Sub New(x As Integer, y As Integer, z As Integer, w As Integer)
  overload: OpenTK.Mathematics.Vector4i.#ctor*
  nameWithType.vb: Vector4i.New(Integer, Integer, Integer, Integer)
  fullName.vb: OpenTK.Mathematics.Vector4i.New(Integer, Integer, Integer, Integer)
  name.vb: New(Integer, Integer, Integer, Integer)
- uid: OpenTK.Mathematics.Vector4i.#ctor(OpenTK.Mathematics.Vector2i)
  commentId: M:OpenTK.Mathematics.Vector4i.#ctor(OpenTK.Mathematics.Vector2i)
  id: '#ctor(OpenTK.Mathematics.Vector2i)'
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Vector4i(Vector2i)
  nameWithType: Vector4i.Vector4i(Vector2i)
  fullName: OpenTK.Mathematics.Vector4i.Vector4i(OpenTK.Mathematics.Vector2i)
  type: Constructor
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: .ctor
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 79
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector4i(Vector2i v)
    parameters:
    - id: v
      type: OpenTK.Mathematics.Vector2i
      description: The <xref href="OpenTK.Mathematics.Vector2i" data-throw-if-not-resolved="false"></xref> to copy components from.
    content.vb: Public Sub New(v As Vector2i)
  overload: OpenTK.Mathematics.Vector4i.#ctor*
  nameWithType.vb: Vector4i.New(Vector2i)
  fullName.vb: OpenTK.Mathematics.Vector4i.New(OpenTK.Mathematics.Vector2i)
  name.vb: New(Vector2i)
- uid: OpenTK.Mathematics.Vector4i.#ctor(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  commentId: M:OpenTK.Mathematics.Vector4i.#ctor(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  id: '#ctor(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)'
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Vector4i(Vector2i, Vector2i)
  nameWithType: Vector4i.Vector4i(Vector2i, Vector2i)
  fullName: OpenTK.Mathematics.Vector4i.Vector4i(OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i)
  type: Constructor
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: .ctor
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 92
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector4i(Vector2i v1, Vector2i v2)
    parameters:
    - id: v1
      type: OpenTK.Mathematics.Vector2i
      description: The <xref href="OpenTK.Mathematics.Vector2i" data-throw-if-not-resolved="false"></xref> to get the X and Y components for the Vector4.
    - id: v2
      type: OpenTK.Mathematics.Vector2i
      description: The <xref href="OpenTK.Mathematics.Vector2i" data-throw-if-not-resolved="false"></xref> to get the Z and W components for the Vector4.
    content.vb: Public Sub New(v1 As Vector2i, v2 As Vector2i)
  overload: OpenTK.Mathematics.Vector4i.#ctor*
  nameWithType.vb: Vector4i.New(Vector2i, Vector2i)
  fullName.vb: OpenTK.Mathematics.Vector4i.New(OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i)
  name.vb: New(Vector2i, Vector2i)
- uid: OpenTK.Mathematics.Vector4i.#ctor(OpenTK.Mathematics.Vector3i)
  commentId: M:OpenTK.Mathematics.Vector4i.#ctor(OpenTK.Mathematics.Vector3i)
  id: '#ctor(OpenTK.Mathematics.Vector3i)'
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Vector4i(Vector3i)
  nameWithType: Vector4i.Vector4i(Vector3i)
  fullName: OpenTK.Mathematics.Vector4i.Vector4i(OpenTK.Mathematics.Vector3i)
  type: Constructor
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: .ctor
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 104
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector4i(Vector3i v)
    parameters:
    - id: v
      type: OpenTK.Mathematics.Vector3i
      description: The <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> to copy components from.
    content.vb: Public Sub New(v As Vector3i)
  overload: OpenTK.Mathematics.Vector4i.#ctor*
  nameWithType.vb: Vector4i.New(Vector3i)
  fullName.vb: OpenTK.Mathematics.Vector4i.New(OpenTK.Mathematics.Vector3i)
  name.vb: New(Vector3i)
- uid: OpenTK.Mathematics.Vector4i.#ctor(OpenTK.Mathematics.Vector3i,System.Int32)
  commentId: M:OpenTK.Mathematics.Vector4i.#ctor(OpenTK.Mathematics.Vector3i,System.Int32)
  id: '#ctor(OpenTK.Mathematics.Vector3i,System.Int32)'
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Vector4i(Vector3i, int)
  nameWithType: Vector4i.Vector4i(Vector3i, int)
  fullName: OpenTK.Mathematics.Vector4i.Vector4i(OpenTK.Mathematics.Vector3i, int)
  type: Constructor
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: .ctor
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 117
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector4i(Vector3i v, int w)
    parameters:
    - id: v
      type: OpenTK.Mathematics.Vector3i
      description: The <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> to copy components from.
    - id: w
      type: System.Int32
      description: The w component of the new Vector4.
    content.vb: Public Sub New(v As Vector3i, w As Integer)
  overload: OpenTK.Mathematics.Vector4i.#ctor*
  nameWithType.vb: Vector4i.New(Vector3i, Integer)
  fullName.vb: OpenTK.Mathematics.Vector4i.New(OpenTK.Mathematics.Vector3i, Integer)
  name.vb: New(Vector3i, Integer)
- uid: OpenTK.Mathematics.Vector4i.Item(System.Int32)
  commentId: P:OpenTK.Mathematics.Vector4i.Item(System.Int32)
  id: Item(System.Int32)
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: Vector4i.this[int]
  fullName: OpenTK.Mathematics.Vector4i.this[int]
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: this[]
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 130
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets the value at the index of the vector.
  example: []
  syntax:
    content: public int this[int index] { readonly get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The index of the component from the vector.
    return:
      type: System.Int32
    content.vb: Public Default Property this[](index As Integer) As Integer
  overload: OpenTK.Mathematics.Vector4i.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: Thrown if the index is less than 0 or greater than 3.
  nameWithType.vb: Vector4i.this[](Integer)
  fullName.vb: OpenTK.Mathematics.Vector4i.this[](Integer)
  name.vb: this[](Integer)
- uid: OpenTK.Mathematics.Vector4i.ManhattanLength
  commentId: P:OpenTK.Mathematics.Vector4i.ManhattanLength
  id: ManhattanLength
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: ManhattanLength
  nameWithType: Vector4i.ManhattanLength
  fullName: OpenTK.Mathematics.Vector4i.ManhattanLength
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: ManhattanLength
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 167
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets the manhattan length of the vector.
  example: []
  syntax:
    content: public readonly int ManhattanLength { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ManhattanLength As Integer
  overload: OpenTK.Mathematics.Vector4i.ManhattanLength*
- uid: OpenTK.Mathematics.Vector4i.EuclideanLengthSquared
  commentId: P:OpenTK.Mathematics.Vector4i.EuclideanLengthSquared
  id: EuclideanLengthSquared
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: EuclideanLengthSquared
  nameWithType: Vector4i.EuclideanLengthSquared
  fullName: OpenTK.Mathematics.Vector4i.EuclideanLengthSquared
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: EuclideanLengthSquared
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 172
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets the squared euclidean length of the vector.
  example: []
  syntax:
    content: public readonly int EuclideanLengthSquared { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property EuclideanLengthSquared As Integer
  overload: OpenTK.Mathematics.Vector4i.EuclideanLengthSquared*
- uid: OpenTK.Mathematics.Vector4i.EuclideanLength
  commentId: P:OpenTK.Mathematics.Vector4i.EuclideanLength
  id: EuclideanLength
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: EuclideanLength
  nameWithType: Vector4i.EuclideanLength
  fullName: OpenTK.Mathematics.Vector4i.EuclideanLength
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: EuclideanLength
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 177
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets the euclidean length of the vector.
  example: []
  syntax:
    content: public readonly float EuclideanLength { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property EuclideanLength As Single
  overload: OpenTK.Mathematics.Vector4i.EuclideanLength*
- uid: OpenTK.Mathematics.Vector4i.Abs
  commentId: M:OpenTK.Mathematics.Vector4i.Abs
  id: Abs
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Abs()
  nameWithType: Vector4i.Abs()
  fullName: OpenTK.Mathematics.Vector4i.Abs()
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Abs
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 183
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a new vector that is the component-wise absolute value of the vector.
  example: []
  syntax:
    content: public readonly Vector4i Abs()
    return:
      type: OpenTK.Mathematics.Vector4i
      description: The component-wise absolute value vector.
    content.vb: Public Function Abs() As Vector4i
  overload: OpenTK.Mathematics.Vector4i.Abs*
- uid: OpenTK.Mathematics.Vector4i.UnitX
  commentId: F:OpenTK.Mathematics.Vector4i.UnitX
  id: UnitX
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: UnitX
  nameWithType: Vector4i.UnitX
  fullName: OpenTK.Mathematics.Vector4i.UnitX
  type: Field
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: UnitX
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 196
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines a unit-length <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> that points towards the X-axis.
  example: []
  syntax:
    content: public static readonly Vector4i UnitX
    return:
      type: OpenTK.Mathematics.Vector4i
    content.vb: Public Shared ReadOnly UnitX As Vector4i
- uid: OpenTK.Mathematics.Vector4i.UnitY
  commentId: F:OpenTK.Mathematics.Vector4i.UnitY
  id: UnitY
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: UnitY
  nameWithType: Vector4i.UnitY
  fullName: OpenTK.Mathematics.Vector4i.UnitY
  type: Field
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: UnitY
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 201
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines a unit-length <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> that points towards the Y-axis.
  example: []
  syntax:
    content: public static readonly Vector4i UnitY
    return:
      type: OpenTK.Mathematics.Vector4i
    content.vb: Public Shared ReadOnly UnitY As Vector4i
- uid: OpenTK.Mathematics.Vector4i.UnitZ
  commentId: F:OpenTK.Mathematics.Vector4i.UnitZ
  id: UnitZ
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: UnitZ
  nameWithType: Vector4i.UnitZ
  fullName: OpenTK.Mathematics.Vector4i.UnitZ
  type: Field
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: UnitZ
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 206
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines a unit-length <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> that points towards the Z-axis.
  example: []
  syntax:
    content: public static readonly Vector4i UnitZ
    return:
      type: OpenTK.Mathematics.Vector4i
    content.vb: Public Shared ReadOnly UnitZ As Vector4i
- uid: OpenTK.Mathematics.Vector4i.UnitW
  commentId: F:OpenTK.Mathematics.Vector4i.UnitW
  id: UnitW
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: UnitW
  nameWithType: Vector4i.UnitW
  fullName: OpenTK.Mathematics.Vector4i.UnitW
  type: Field
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: UnitW
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 211
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines a unit-length <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> that points towards the W-axis.
  example: []
  syntax:
    content: public static readonly Vector4i UnitW
    return:
      type: OpenTK.Mathematics.Vector4i
    content.vb: Public Shared ReadOnly UnitW As Vector4i
- uid: OpenTK.Mathematics.Vector4i.Zero
  commentId: F:OpenTK.Mathematics.Vector4i.Zero
  id: Zero
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: Vector4i.Zero
  fullName: OpenTK.Mathematics.Vector4i.Zero
  type: Field
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Zero
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 216
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines an instance with all components set to 0.
  example: []
  syntax:
    content: public static readonly Vector4i Zero
    return:
      type: OpenTK.Mathematics.Vector4i
    content.vb: Public Shared ReadOnly Zero As Vector4i
- uid: OpenTK.Mathematics.Vector4i.One
  commentId: F:OpenTK.Mathematics.Vector4i.One
  id: One
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: One
  nameWithType: Vector4i.One
  fullName: OpenTK.Mathematics.Vector4i.One
  type: Field
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: One
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 221
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines an instance with all components set to 1.
  example: []
  syntax:
    content: public static readonly Vector4i One
    return:
      type: OpenTK.Mathematics.Vector4i
    content.vb: Public Shared ReadOnly One As Vector4i
- uid: OpenTK.Mathematics.Vector4i.SizeInBytes
  commentId: F:OpenTK.Mathematics.Vector4i.SizeInBytes
  id: SizeInBytes
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: SizeInBytes
  nameWithType: Vector4i.SizeInBytes
  fullName: OpenTK.Mathematics.Vector4i.SizeInBytes
  type: Field
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: SizeInBytes
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 226
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines the size of the <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> struct in bytes.
  example: []
  syntax:
    content: public static readonly int SizeInBytes
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly SizeInBytes As Integer
- uid: OpenTK.Mathematics.Vector4i.Add(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  commentId: M:OpenTK.Mathematics.Vector4i.Add(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  id: Add(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Add(Vector4i, Vector4i)
  nameWithType: Vector4i.Add(Vector4i, Vector4i)
  fullName: OpenTK.Mathematics.Vector4i.Add(OpenTK.Mathematics.Vector4i, OpenTK.Mathematics.Vector4i)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Add
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 234
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Adds two vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4i Add(Vector4i a, Vector4i b)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4i
      description: Left operand.
    - id: b
      type: OpenTK.Mathematics.Vector4i
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector4i
      description: Result of operation.
    content.vb: >-
      <Pure>

      Public Shared Function Add(a As Vector4i, b As Vector4i) As Vector4i
  overload: OpenTK.Mathematics.Vector4i.Add*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4i.Add(OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@)
  commentId: M:OpenTK.Mathematics.Vector4i.Add(OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@)
  id: Add(OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@)
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Add(in Vector4i, in Vector4i, out Vector4i)
  nameWithType: Vector4i.Add(in Vector4i, in Vector4i, out Vector4i)
  fullName: OpenTK.Mathematics.Vector4i.Add(in OpenTK.Mathematics.Vector4i, in OpenTK.Mathematics.Vector4i, out OpenTK.Mathematics.Vector4i)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Add
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 247
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Adds two vectors.
  example: []
  syntax:
    content: public static void Add(in Vector4i a, in Vector4i b, out Vector4i result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4i
      description: Left operand.
    - id: b
      type: OpenTK.Mathematics.Vector4i
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector4i
      description: Result of operation.
    content.vb: Public Shared Sub Add(a As Vector4i, b As Vector4i, result As Vector4i)
  overload: OpenTK.Mathematics.Vector4i.Add*
  nameWithType.vb: Vector4i.Add(Vector4i, Vector4i, Vector4i)
  fullName.vb: OpenTK.Mathematics.Vector4i.Add(OpenTK.Mathematics.Vector4i, OpenTK.Mathematics.Vector4i, OpenTK.Mathematics.Vector4i)
  name.vb: Add(Vector4i, Vector4i, Vector4i)
- uid: OpenTK.Mathematics.Vector4i.Subtract(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  commentId: M:OpenTK.Mathematics.Vector4i.Subtract(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  id: Subtract(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Subtract(Vector4i, Vector4i)
  nameWithType: Vector4i.Subtract(Vector4i, Vector4i)
  fullName: OpenTK.Mathematics.Vector4i.Subtract(OpenTK.Mathematics.Vector4i, OpenTK.Mathematics.Vector4i)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Subtract
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 261
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Subtract one Vector from another.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4i Subtract(Vector4i a, Vector4i b)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4i
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector4i
      description: Second operand.
    return:
      type: OpenTK.Mathematics.Vector4i
      description: Result of subtraction.
    content.vb: >-
      <Pure>

      Public Shared Function Subtract(a As Vector4i, b As Vector4i) As Vector4i
  overload: OpenTK.Mathematics.Vector4i.Subtract*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4i.Subtract(OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@)
  commentId: M:OpenTK.Mathematics.Vector4i.Subtract(OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@)
  id: Subtract(OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@)
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Subtract(in Vector4i, in Vector4i, out Vector4i)
  nameWithType: Vector4i.Subtract(in Vector4i, in Vector4i, out Vector4i)
  fullName: OpenTK.Mathematics.Vector4i.Subtract(in OpenTK.Mathematics.Vector4i, in OpenTK.Mathematics.Vector4i, out OpenTK.Mathematics.Vector4i)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Subtract
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 274
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Subtract one Vector from another.
  example: []
  syntax:
    content: public static void Subtract(in Vector4i a, in Vector4i b, out Vector4i result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4i
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector4i
      description: Second operand.
    - id: result
      type: OpenTK.Mathematics.Vector4i
      description: Result of subtraction.
    content.vb: Public Shared Sub Subtract(a As Vector4i, b As Vector4i, result As Vector4i)
  overload: OpenTK.Mathematics.Vector4i.Subtract*
  nameWithType.vb: Vector4i.Subtract(Vector4i, Vector4i, Vector4i)
  fullName.vb: OpenTK.Mathematics.Vector4i.Subtract(OpenTK.Mathematics.Vector4i, OpenTK.Mathematics.Vector4i, OpenTK.Mathematics.Vector4i)
  name.vb: Subtract(Vector4i, Vector4i, Vector4i)
- uid: OpenTK.Mathematics.Vector4i.Multiply(OpenTK.Mathematics.Vector4i,System.Int32)
  commentId: M:OpenTK.Mathematics.Vector4i.Multiply(OpenTK.Mathematics.Vector4i,System.Int32)
  id: Multiply(OpenTK.Mathematics.Vector4i,System.Int32)
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Multiply(Vector4i, int)
  nameWithType: Vector4i.Multiply(Vector4i, int)
  fullName: OpenTK.Mathematics.Vector4i.Multiply(OpenTK.Mathematics.Vector4i, int)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Multiply
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 288
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies a vector by an integer scalar.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4i Multiply(Vector4i vector, int scale)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector4i
      description: Left operand.
    - id: scale
      type: System.Int32
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector4i
      description: Result of the operation.
    content.vb: >-
      <Pure>

      Public Shared Function Multiply(vector As Vector4i, scale As Integer) As Vector4i
  overload: OpenTK.Mathematics.Vector4i.Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4i.Multiply(Vector4i, Integer)
  fullName.vb: OpenTK.Mathematics.Vector4i.Multiply(OpenTK.Mathematics.Vector4i, Integer)
  name.vb: Multiply(Vector4i, Integer)
- uid: OpenTK.Mathematics.Vector4i.Multiply(OpenTK.Mathematics.Vector4i@,System.Int32,OpenTK.Mathematics.Vector4i@)
  commentId: M:OpenTK.Mathematics.Vector4i.Multiply(OpenTK.Mathematics.Vector4i@,System.Int32,OpenTK.Mathematics.Vector4i@)
  id: Multiply(OpenTK.Mathematics.Vector4i@,System.Int32,OpenTK.Mathematics.Vector4i@)
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Multiply(in Vector4i, int, out Vector4i)
  nameWithType: Vector4i.Multiply(in Vector4i, int, out Vector4i)
  fullName: OpenTK.Mathematics.Vector4i.Multiply(in OpenTK.Mathematics.Vector4i, int, out OpenTK.Mathematics.Vector4i)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Multiply
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 301
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies a vector by an integer scalar.
  example: []
  syntax:
    content: public static void Multiply(in Vector4i vector, int scale, out Vector4i result)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector4i
      description: Left operand.
    - id: scale
      type: System.Int32
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector4i
      description: Result of the operation.
    content.vb: Public Shared Sub Multiply(vector As Vector4i, scale As Integer, result As Vector4i)
  overload: OpenTK.Mathematics.Vector4i.Multiply*
  nameWithType.vb: Vector4i.Multiply(Vector4i, Integer, Vector4i)
  fullName.vb: OpenTK.Mathematics.Vector4i.Multiply(OpenTK.Mathematics.Vector4i, Integer, OpenTK.Mathematics.Vector4i)
  name.vb: Multiply(Vector4i, Integer, Vector4i)
- uid: OpenTK.Mathematics.Vector4i.Multiply(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  commentId: M:OpenTK.Mathematics.Vector4i.Multiply(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  id: Multiply(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Multiply(Vector4i, Vector4i)
  nameWithType: Vector4i.Multiply(Vector4i, Vector4i)
  fullName: OpenTK.Mathematics.Vector4i.Multiply(OpenTK.Mathematics.Vector4i, OpenTK.Mathematics.Vector4i)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Multiply
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 315
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies a vector by the components a vector (scale).
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4i Multiply(Vector4i vector, Vector4i scale)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector4i
      description: Left operand.
    - id: scale
      type: OpenTK.Mathematics.Vector4i
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector4i
      description: Result of the operation.
    content.vb: >-
      <Pure>

      Public Shared Function Multiply(vector As Vector4i, scale As Vector4i) As Vector4i
  overload: OpenTK.Mathematics.Vector4i.Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4i.Multiply(OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@)
  commentId: M:OpenTK.Mathematics.Vector4i.Multiply(OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@)
  id: Multiply(OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@)
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Multiply(in Vector4i, in Vector4i, out Vector4i)
  nameWithType: Vector4i.Multiply(in Vector4i, in Vector4i, out Vector4i)
  fullName: OpenTK.Mathematics.Vector4i.Multiply(in OpenTK.Mathematics.Vector4i, in OpenTK.Mathematics.Vector4i, out OpenTK.Mathematics.Vector4i)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Multiply
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 328
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies a vector by the components of a vector (scale).
  example: []
  syntax:
    content: public static void Multiply(in Vector4i vector, in Vector4i scale, out Vector4i result)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector4i
      description: Left operand.
    - id: scale
      type: OpenTK.Mathematics.Vector4i
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector4i
      description: Result of the operation.
    content.vb: Public Shared Sub Multiply(vector As Vector4i, scale As Vector4i, result As Vector4i)
  overload: OpenTK.Mathematics.Vector4i.Multiply*
  nameWithType.vb: Vector4i.Multiply(Vector4i, Vector4i, Vector4i)
  fullName.vb: OpenTK.Mathematics.Vector4i.Multiply(OpenTK.Mathematics.Vector4i, OpenTK.Mathematics.Vector4i, OpenTK.Mathematics.Vector4i)
  name.vb: Multiply(Vector4i, Vector4i, Vector4i)
- uid: OpenTK.Mathematics.Vector4i.Divide(OpenTK.Mathematics.Vector4i,System.Int32)
  commentId: M:OpenTK.Mathematics.Vector4i.Divide(OpenTK.Mathematics.Vector4i,System.Int32)
  id: Divide(OpenTK.Mathematics.Vector4i,System.Int32)
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Divide(Vector4i, int)
  nameWithType: Vector4i.Divide(Vector4i, int)
  fullName: OpenTK.Mathematics.Vector4i.Divide(OpenTK.Mathematics.Vector4i, int)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Divide
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 342
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Divides a vector by a scalar using integer division, floor(a/b).
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4i Divide(Vector4i vector, int scale)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector4i
      description: Left operand.
    - id: scale
      type: System.Int32
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector4i
      description: Result of the operation.
    content.vb: >-
      <Pure>

      Public Shared Function Divide(vector As Vector4i, scale As Integer) As Vector4i
  overload: OpenTK.Mathematics.Vector4i.Divide*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4i.Divide(Vector4i, Integer)
  fullName.vb: OpenTK.Mathematics.Vector4i.Divide(OpenTK.Mathematics.Vector4i, Integer)
  name.vb: Divide(Vector4i, Integer)
- uid: OpenTK.Mathematics.Vector4i.Divide(OpenTK.Mathematics.Vector4i@,System.Int32,OpenTK.Mathematics.Vector4i@)
  commentId: M:OpenTK.Mathematics.Vector4i.Divide(OpenTK.Mathematics.Vector4i@,System.Int32,OpenTK.Mathematics.Vector4i@)
  id: Divide(OpenTK.Mathematics.Vector4i@,System.Int32,OpenTK.Mathematics.Vector4i@)
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Divide(in Vector4i, int, out Vector4i)
  nameWithType: Vector4i.Divide(in Vector4i, int, out Vector4i)
  fullName: OpenTK.Mathematics.Vector4i.Divide(in OpenTK.Mathematics.Vector4i, int, out OpenTK.Mathematics.Vector4i)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Divide
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 355
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Divides a vector by a scalar using integer division, floor(a/b).
  example: []
  syntax:
    content: public static void Divide(in Vector4i vector, int scale, out Vector4i result)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector4i
      description: Left operand.
    - id: scale
      type: System.Int32
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector4i
      description: Result of the operation.
    content.vb: Public Shared Sub Divide(vector As Vector4i, scale As Integer, result As Vector4i)
  overload: OpenTK.Mathematics.Vector4i.Divide*
  nameWithType.vb: Vector4i.Divide(Vector4i, Integer, Vector4i)
  fullName.vb: OpenTK.Mathematics.Vector4i.Divide(OpenTK.Mathematics.Vector4i, Integer, OpenTK.Mathematics.Vector4i)
  name.vb: Divide(Vector4i, Integer, Vector4i)
- uid: OpenTK.Mathematics.Vector4i.Divide(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  commentId: M:OpenTK.Mathematics.Vector4i.Divide(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  id: Divide(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Divide(Vector4i, Vector4i)
  nameWithType: Vector4i.Divide(Vector4i, Vector4i)
  fullName: OpenTK.Mathematics.Vector4i.Divide(OpenTK.Mathematics.Vector4i, OpenTK.Mathematics.Vector4i)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Divide
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 369
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Divides a vector by the components of a vector using integer division, floor(a/b).
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4i Divide(Vector4i vector, Vector4i scale)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector4i
      description: Left operand.
    - id: scale
      type: OpenTK.Mathematics.Vector4i
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector4i
      description: Result of the operation.
    content.vb: >-
      <Pure>

      Public Shared Function Divide(vector As Vector4i, scale As Vector4i) As Vector4i
  overload: OpenTK.Mathematics.Vector4i.Divide*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4i.Divide(OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@)
  commentId: M:OpenTK.Mathematics.Vector4i.Divide(OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@)
  id: Divide(OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@)
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Divide(in Vector4i, in Vector4i, out Vector4i)
  nameWithType: Vector4i.Divide(in Vector4i, in Vector4i, out Vector4i)
  fullName: OpenTK.Mathematics.Vector4i.Divide(in OpenTK.Mathematics.Vector4i, in OpenTK.Mathematics.Vector4i, out OpenTK.Mathematics.Vector4i)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Divide
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 382
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Divides a vector by the components of a vector using integer division, floor(a/b).
  example: []
  syntax:
    content: public static void Divide(in Vector4i vector, in Vector4i scale, out Vector4i result)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector4i
      description: Left operand.
    - id: scale
      type: OpenTK.Mathematics.Vector4i
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector4i
      description: Result of the operation.
    content.vb: Public Shared Sub Divide(vector As Vector4i, scale As Vector4i, result As Vector4i)
  overload: OpenTK.Mathematics.Vector4i.Divide*
  nameWithType.vb: Vector4i.Divide(Vector4i, Vector4i, Vector4i)
  fullName.vb: OpenTK.Mathematics.Vector4i.Divide(OpenTK.Mathematics.Vector4i, OpenTK.Mathematics.Vector4i, OpenTK.Mathematics.Vector4i)
  name.vb: Divide(Vector4i, Vector4i, Vector4i)
- uid: OpenTK.Mathematics.Vector4i.ComponentMin(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  commentId: M:OpenTK.Mathematics.Vector4i.ComponentMin(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  id: ComponentMin(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: ComponentMin(Vector4i, Vector4i)
  nameWithType: Vector4i.ComponentMin(Vector4i, Vector4i)
  fullName: OpenTK.Mathematics.Vector4i.ComponentMin(OpenTK.Mathematics.Vector4i, OpenTK.Mathematics.Vector4i)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: ComponentMin
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 396
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a vector created from the smallest of the corresponding components of the given vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4i ComponentMin(Vector4i a, Vector4i b)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4i
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector4i
      description: Second operand.
    return:
      type: OpenTK.Mathematics.Vector4i
      description: The component-wise minimum.
    content.vb: >-
      <Pure>

      Public Shared Function ComponentMin(a As Vector4i, b As Vector4i) As Vector4i
  overload: OpenTK.Mathematics.Vector4i.ComponentMin*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4i.ComponentMin(OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@)
  commentId: M:OpenTK.Mathematics.Vector4i.ComponentMin(OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@)
  id: ComponentMin(OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@)
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: ComponentMin(in Vector4i, in Vector4i, out Vector4i)
  nameWithType: Vector4i.ComponentMin(in Vector4i, in Vector4i, out Vector4i)
  fullName: OpenTK.Mathematics.Vector4i.ComponentMin(in OpenTK.Mathematics.Vector4i, in OpenTK.Mathematics.Vector4i, out OpenTK.Mathematics.Vector4i)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: ComponentMin
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 413
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a vector created from the smallest of the corresponding components of the given vectors.
  example: []
  syntax:
    content: public static void ComponentMin(in Vector4i a, in Vector4i b, out Vector4i result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4i
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector4i
      description: Second operand.
    - id: result
      type: OpenTK.Mathematics.Vector4i
      description: The component-wise minimum.
    content.vb: Public Shared Sub ComponentMin(a As Vector4i, b As Vector4i, result As Vector4i)
  overload: OpenTK.Mathematics.Vector4i.ComponentMin*
  nameWithType.vb: Vector4i.ComponentMin(Vector4i, Vector4i, Vector4i)
  fullName.vb: OpenTK.Mathematics.Vector4i.ComponentMin(OpenTK.Mathematics.Vector4i, OpenTK.Mathematics.Vector4i, OpenTK.Mathematics.Vector4i)
  name.vb: ComponentMin(Vector4i, Vector4i, Vector4i)
- uid: OpenTK.Mathematics.Vector4i.ComponentMax(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  commentId: M:OpenTK.Mathematics.Vector4i.ComponentMax(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  id: ComponentMax(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: ComponentMax(Vector4i, Vector4i)
  nameWithType: Vector4i.ComponentMax(Vector4i, Vector4i)
  fullName: OpenTK.Mathematics.Vector4i.ComponentMax(OpenTK.Mathematics.Vector4i, OpenTK.Mathematics.Vector4i)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: ComponentMax
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 427
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a vector created from the largest of the corresponding components of the given vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4i ComponentMax(Vector4i a, Vector4i b)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4i
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector4i
      description: Second operand.
    return:
      type: OpenTK.Mathematics.Vector4i
      description: The component-wise maximum.
    content.vb: >-
      <Pure>

      Public Shared Function ComponentMax(a As Vector4i, b As Vector4i) As Vector4i
  overload: OpenTK.Mathematics.Vector4i.ComponentMax*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4i.ComponentMax(OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@)
  commentId: M:OpenTK.Mathematics.Vector4i.ComponentMax(OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@)
  id: ComponentMax(OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@)
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: ComponentMax(in Vector4i, in Vector4i, out Vector4i)
  nameWithType: Vector4i.ComponentMax(in Vector4i, in Vector4i, out Vector4i)
  fullName: OpenTK.Mathematics.Vector4i.ComponentMax(in OpenTK.Mathematics.Vector4i, in OpenTK.Mathematics.Vector4i, out OpenTK.Mathematics.Vector4i)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: ComponentMax
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 444
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a vector created from the largest of the corresponding components of the given vectors.
  example: []
  syntax:
    content: public static void ComponentMax(in Vector4i a, in Vector4i b, out Vector4i result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4i
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector4i
      description: Second operand.
    - id: result
      type: OpenTK.Mathematics.Vector4i
      description: The component-wise maximum.
    content.vb: Public Shared Sub ComponentMax(a As Vector4i, b As Vector4i, result As Vector4i)
  overload: OpenTK.Mathematics.Vector4i.ComponentMax*
  nameWithType.vb: Vector4i.ComponentMax(Vector4i, Vector4i, Vector4i)
  fullName.vb: OpenTK.Mathematics.Vector4i.ComponentMax(OpenTK.Mathematics.Vector4i, OpenTK.Mathematics.Vector4i, OpenTK.Mathematics.Vector4i)
  name.vb: ComponentMax(Vector4i, Vector4i, Vector4i)
- uid: OpenTK.Mathematics.Vector4i.Clamp(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  commentId: M:OpenTK.Mathematics.Vector4i.Clamp(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  id: Clamp(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Clamp(Vector4i, Vector4i, Vector4i)
  nameWithType: Vector4i.Clamp(Vector4i, Vector4i, Vector4i)
  fullName: OpenTK.Mathematics.Vector4i.Clamp(OpenTK.Mathematics.Vector4i, OpenTK.Mathematics.Vector4i, OpenTK.Mathematics.Vector4i)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Clamp
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 459
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Clamp a vector to the given minimum and maximum vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4i Clamp(Vector4i vec, Vector4i min, Vector4i max)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4i
      description: Input vector.
    - id: min
      type: OpenTK.Mathematics.Vector4i
      description: Minimum vector.
    - id: max
      type: OpenTK.Mathematics.Vector4i
      description: Maximum vector.
    return:
      type: OpenTK.Mathematics.Vector4i
      description: The clamped vector.
    content.vb: >-
      <Pure>

      Public Shared Function Clamp(vec As Vector4i, min As Vector4i, max As Vector4i) As Vector4i
  overload: OpenTK.Mathematics.Vector4i.Clamp*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4i.Clamp(OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@)
  commentId: M:OpenTK.Mathematics.Vector4i.Clamp(OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@)
  id: Clamp(OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@)
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Clamp(in Vector4i, in Vector4i, in Vector4i, out Vector4i)
  nameWithType: Vector4i.Clamp(in Vector4i, in Vector4i, in Vector4i, out Vector4i)
  fullName: OpenTK.Mathematics.Vector4i.Clamp(in OpenTK.Mathematics.Vector4i, in OpenTK.Mathematics.Vector4i, in OpenTK.Mathematics.Vector4i, out OpenTK.Mathematics.Vector4i)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Clamp
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 477
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Clamp a vector to the given minimum and maximum vectors.
  example: []
  syntax:
    content: public static void Clamp(in Vector4i vec, in Vector4i min, in Vector4i max, out Vector4i result)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4i
      description: Input vector.
    - id: min
      type: OpenTK.Mathematics.Vector4i
      description: Minimum vector.
    - id: max
      type: OpenTK.Mathematics.Vector4i
      description: Maximum vector.
    - id: result
      type: OpenTK.Mathematics.Vector4i
      description: The clamped vector.
    content.vb: Public Shared Sub Clamp(vec As Vector4i, min As Vector4i, max As Vector4i, result As Vector4i)
  overload: OpenTK.Mathematics.Vector4i.Clamp*
  nameWithType.vb: Vector4i.Clamp(Vector4i, Vector4i, Vector4i, Vector4i)
  fullName.vb: OpenTK.Mathematics.Vector4i.Clamp(OpenTK.Mathematics.Vector4i, OpenTK.Mathematics.Vector4i, OpenTK.Mathematics.Vector4i, OpenTK.Mathematics.Vector4i)
  name.vb: Clamp(Vector4i, Vector4i, Vector4i, Vector4i)
- uid: OpenTK.Mathematics.Vector4i.Abs(OpenTK.Mathematics.Vector4i)
  commentId: M:OpenTK.Mathematics.Vector4i.Abs(OpenTK.Mathematics.Vector4i)
  id: Abs(OpenTK.Mathematics.Vector4i)
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Abs(Vector4i)
  nameWithType: Vector4i.Abs(Vector4i)
  fullName: OpenTK.Mathematics.Vector4i.Abs(OpenTK.Mathematics.Vector4i)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Abs
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 490
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Take the component-wise absolute value of a vector.
  example: []
  syntax:
    content: public static Vector4i Abs(Vector4i vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4i
      description: The vector to apply component-wise absolute value to.
    return:
      type: OpenTK.Mathematics.Vector4i
      description: The component-wise absolute value vector.
    content.vb: Public Shared Function Abs(vec As Vector4i) As Vector4i
  overload: OpenTK.Mathematics.Vector4i.Abs*
- uid: OpenTK.Mathematics.Vector4i.Abs(OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@)
  commentId: M:OpenTK.Mathematics.Vector4i.Abs(OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@)
  id: Abs(OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4i@)
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Abs(in Vector4i, out Vector4i)
  nameWithType: Vector4i.Abs(in Vector4i, out Vector4i)
  fullName: OpenTK.Mathematics.Vector4i.Abs(in OpenTK.Mathematics.Vector4i, out OpenTK.Mathematics.Vector4i)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Abs
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 504
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Take the component-wise absolute value of a vector.
  example: []
  syntax:
    content: public static void Abs(in Vector4i vec, out Vector4i result)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4i
      description: The vector to apply component-wise absolute value to.
    - id: result
      type: OpenTK.Mathematics.Vector4i
      description: The component-wise absolute value vector.
    content.vb: Public Shared Sub Abs(vec As Vector4i, result As Vector4i)
  overload: OpenTK.Mathematics.Vector4i.Abs*
  nameWithType.vb: Vector4i.Abs(Vector4i, Vector4i)
  fullName.vb: OpenTK.Mathematics.Vector4i.Abs(OpenTK.Mathematics.Vector4i, OpenTK.Mathematics.Vector4i)
  name.vb: Abs(Vector4i, Vector4i)
- uid: OpenTK.Mathematics.Vector4i.Xy
  commentId: P:OpenTK.Mathematics.Vector4i.Xy
  id: Xy
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Xy
  nameWithType: Vector4i.Xy
  fullName: OpenTK.Mathematics.Vector4i.Xy
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Xy
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 515
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector2i" data-throw-if-not-resolved="false"></xref> with the X and Y components of this instance.
  example: []
  syntax:
    content: public Vector2i Xy { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2i
    content.vb: Public Property Xy As Vector2i
  overload: OpenTK.Mathematics.Vector4i.Xy*
- uid: OpenTK.Mathematics.Vector4i.Xz
  commentId: P:OpenTK.Mathematics.Vector4i.Xz
  id: Xz
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Xz
  nameWithType: Vector4i.Xz
  fullName: OpenTK.Mathematics.Vector4i.Xz
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Xz
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 529
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector2i" data-throw-if-not-resolved="false"></xref> with the X and Z components of this instance.
  example: []
  syntax:
    content: public Vector2i Xz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2i
    content.vb: Public Property Xz As Vector2i
  overload: OpenTK.Mathematics.Vector4i.Xz*
- uid: OpenTK.Mathematics.Vector4i.Xw
  commentId: P:OpenTK.Mathematics.Vector4i.Xw
  id: Xw
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Xw
  nameWithType: Vector4i.Xw
  fullName: OpenTK.Mathematics.Vector4i.Xw
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Xw
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 543
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector2i" data-throw-if-not-resolved="false"></xref> with the X and W components of this instance.
  example: []
  syntax:
    content: public Vector2i Xw { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2i
    content.vb: Public Property Xw As Vector2i
  overload: OpenTK.Mathematics.Vector4i.Xw*
- uid: OpenTK.Mathematics.Vector4i.Yx
  commentId: P:OpenTK.Mathematics.Vector4i.Yx
  id: Yx
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Yx
  nameWithType: Vector4i.Yx
  fullName: OpenTK.Mathematics.Vector4i.Yx
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Yx
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 557
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector2i" data-throw-if-not-resolved="false"></xref> with the Y and X components of this instance.
  example: []
  syntax:
    content: public Vector2i Yx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2i
    content.vb: Public Property Yx As Vector2i
  overload: OpenTK.Mathematics.Vector4i.Yx*
- uid: OpenTK.Mathematics.Vector4i.Yz
  commentId: P:OpenTK.Mathematics.Vector4i.Yz
  id: Yz
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Yz
  nameWithType: Vector4i.Yz
  fullName: OpenTK.Mathematics.Vector4i.Yz
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Yz
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 571
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector2i" data-throw-if-not-resolved="false"></xref> with the Y and Z components of this instance.
  example: []
  syntax:
    content: public Vector2i Yz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2i
    content.vb: Public Property Yz As Vector2i
  overload: OpenTK.Mathematics.Vector4i.Yz*
- uid: OpenTK.Mathematics.Vector4i.Yw
  commentId: P:OpenTK.Mathematics.Vector4i.Yw
  id: Yw
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Yw
  nameWithType: Vector4i.Yw
  fullName: OpenTK.Mathematics.Vector4i.Yw
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Yw
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 585
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector2i" data-throw-if-not-resolved="false"></xref> with the Y and W components of this instance.
  example: []
  syntax:
    content: public Vector2i Yw { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2i
    content.vb: Public Property Yw As Vector2i
  overload: OpenTK.Mathematics.Vector4i.Yw*
- uid: OpenTK.Mathematics.Vector4i.Zx
  commentId: P:OpenTK.Mathematics.Vector4i.Zx
  id: Zx
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Zx
  nameWithType: Vector4i.Zx
  fullName: OpenTK.Mathematics.Vector4i.Zx
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Zx
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 599
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector2i" data-throw-if-not-resolved="false"></xref> with the Z and X components of this instance.
  example: []
  syntax:
    content: public Vector2i Zx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2i
    content.vb: Public Property Zx As Vector2i
  overload: OpenTK.Mathematics.Vector4i.Zx*
- uid: OpenTK.Mathematics.Vector4i.Zy
  commentId: P:OpenTK.Mathematics.Vector4i.Zy
  id: Zy
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Zy
  nameWithType: Vector4i.Zy
  fullName: OpenTK.Mathematics.Vector4i.Zy
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Zy
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 613
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector2i" data-throw-if-not-resolved="false"></xref> with the Z and Y components of this instance.
  example: []
  syntax:
    content: public Vector2i Zy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2i
    content.vb: Public Property Zy As Vector2i
  overload: OpenTK.Mathematics.Vector4i.Zy*
- uid: OpenTK.Mathematics.Vector4i.Zw
  commentId: P:OpenTK.Mathematics.Vector4i.Zw
  id: Zw
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Zw
  nameWithType: Vector4i.Zw
  fullName: OpenTK.Mathematics.Vector4i.Zw
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Zw
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 627
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector2i" data-throw-if-not-resolved="false"></xref> with the Z and W components of this instance.
  example: []
  syntax:
    content: public Vector2i Zw { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2i
    content.vb: Public Property Zw As Vector2i
  overload: OpenTK.Mathematics.Vector4i.Zw*
- uid: OpenTK.Mathematics.Vector4i.Wx
  commentId: P:OpenTK.Mathematics.Vector4i.Wx
  id: Wx
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Wx
  nameWithType: Vector4i.Wx
  fullName: OpenTK.Mathematics.Vector4i.Wx
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Wx
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 641
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector2i" data-throw-if-not-resolved="false"></xref> with the W and X components of this instance.
  example: []
  syntax:
    content: public Vector2i Wx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2i
    content.vb: Public Property Wx As Vector2i
  overload: OpenTK.Mathematics.Vector4i.Wx*
- uid: OpenTK.Mathematics.Vector4i.Wy
  commentId: P:OpenTK.Mathematics.Vector4i.Wy
  id: Wy
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Wy
  nameWithType: Vector4i.Wy
  fullName: OpenTK.Mathematics.Vector4i.Wy
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Wy
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 655
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector2i" data-throw-if-not-resolved="false"></xref> with the W and Y components of this instance.
  example: []
  syntax:
    content: public Vector2i Wy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2i
    content.vb: Public Property Wy As Vector2i
  overload: OpenTK.Mathematics.Vector4i.Wy*
- uid: OpenTK.Mathematics.Vector4i.Wz
  commentId: P:OpenTK.Mathematics.Vector4i.Wz
  id: Wz
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Wz
  nameWithType: Vector4i.Wz
  fullName: OpenTK.Mathematics.Vector4i.Wz
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Wz
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 669
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector2i" data-throw-if-not-resolved="false"></xref> with the W and Z components of this instance.
  example: []
  syntax:
    content: public Vector2i Wz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2i
    content.vb: Public Property Wz As Vector2i
  overload: OpenTK.Mathematics.Vector4i.Wz*
- uid: OpenTK.Mathematics.Vector4i.Xyz
  commentId: P:OpenTK.Mathematics.Vector4i.Xyz
  id: Xyz
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Xyz
  nameWithType: Vector4i.Xyz
  fullName: OpenTK.Mathematics.Vector4i.Xyz
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Xyz
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 683
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> with the X, Y, and Z components of this instance.
  example: []
  syntax:
    content: public Vector3i Xyz { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3i
    content.vb: Public Property Xyz As Vector3i
  overload: OpenTK.Mathematics.Vector4i.Xyz*
- uid: OpenTK.Mathematics.Vector4i.Xyw
  commentId: P:OpenTK.Mathematics.Vector4i.Xyw
  id: Xyw
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Xyw
  nameWithType: Vector4i.Xyw
  fullName: OpenTK.Mathematics.Vector4i.Xyw
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Xyw
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 698
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> with the X, Y, and Z components of this instance.
  example: []
  syntax:
    content: public Vector3i Xyw { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3i
    content.vb: Public Property Xyw As Vector3i
  overload: OpenTK.Mathematics.Vector4i.Xyw*
- uid: OpenTK.Mathematics.Vector4i.Xzy
  commentId: P:OpenTK.Mathematics.Vector4i.Xzy
  id: Xzy
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Xzy
  nameWithType: Vector4i.Xzy
  fullName: OpenTK.Mathematics.Vector4i.Xzy
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Xzy
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 713
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> with the X, Z, and Y components of this instance.
  example: []
  syntax:
    content: public Vector3i Xzy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3i
    content.vb: Public Property Xzy As Vector3i
  overload: OpenTK.Mathematics.Vector4i.Xzy*
- uid: OpenTK.Mathematics.Vector4i.Xzw
  commentId: P:OpenTK.Mathematics.Vector4i.Xzw
  id: Xzw
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Xzw
  nameWithType: Vector4i.Xzw
  fullName: OpenTK.Mathematics.Vector4i.Xzw
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Xzw
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 728
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> with the X, Z, and W components of this instance.
  example: []
  syntax:
    content: public Vector3i Xzw { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3i
    content.vb: Public Property Xzw As Vector3i
  overload: OpenTK.Mathematics.Vector4i.Xzw*
- uid: OpenTK.Mathematics.Vector4i.Xwy
  commentId: P:OpenTK.Mathematics.Vector4i.Xwy
  id: Xwy
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Xwy
  nameWithType: Vector4i.Xwy
  fullName: OpenTK.Mathematics.Vector4i.Xwy
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Xwy
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 743
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> with the X, W, and Y components of this instance.
  example: []
  syntax:
    content: public Vector3i Xwy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3i
    content.vb: Public Property Xwy As Vector3i
  overload: OpenTK.Mathematics.Vector4i.Xwy*
- uid: OpenTK.Mathematics.Vector4i.Xwz
  commentId: P:OpenTK.Mathematics.Vector4i.Xwz
  id: Xwz
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Xwz
  nameWithType: Vector4i.Xwz
  fullName: OpenTK.Mathematics.Vector4i.Xwz
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Xwz
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 758
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> with the X, W, and Z components of this instance.
  example: []
  syntax:
    content: public Vector3i Xwz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3i
    content.vb: Public Property Xwz As Vector3i
  overload: OpenTK.Mathematics.Vector4i.Xwz*
- uid: OpenTK.Mathematics.Vector4i.Yxz
  commentId: P:OpenTK.Mathematics.Vector4i.Yxz
  id: Yxz
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Yxz
  nameWithType: Vector4i.Yxz
  fullName: OpenTK.Mathematics.Vector4i.Yxz
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Yxz
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 773
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> with the Y, X, and Z components of this instance.
  example: []
  syntax:
    content: public Vector3i Yxz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3i
    content.vb: Public Property Yxz As Vector3i
  overload: OpenTK.Mathematics.Vector4i.Yxz*
- uid: OpenTK.Mathematics.Vector4i.Yxw
  commentId: P:OpenTK.Mathematics.Vector4i.Yxw
  id: Yxw
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Yxw
  nameWithType: Vector4i.Yxw
  fullName: OpenTK.Mathematics.Vector4i.Yxw
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Yxw
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 788
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> with the Y, X, and W components of this instance.
  example: []
  syntax:
    content: public Vector3i Yxw { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3i
    content.vb: Public Property Yxw As Vector3i
  overload: OpenTK.Mathematics.Vector4i.Yxw*
- uid: OpenTK.Mathematics.Vector4i.Yzx
  commentId: P:OpenTK.Mathematics.Vector4i.Yzx
  id: Yzx
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Yzx
  nameWithType: Vector4i.Yzx
  fullName: OpenTK.Mathematics.Vector4i.Yzx
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Yzx
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 803
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> with the Y, Z, and X components of this instance.
  example: []
  syntax:
    content: public Vector3i Yzx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3i
    content.vb: Public Property Yzx As Vector3i
  overload: OpenTK.Mathematics.Vector4i.Yzx*
- uid: OpenTK.Mathematics.Vector4i.Yzw
  commentId: P:OpenTK.Mathematics.Vector4i.Yzw
  id: Yzw
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Yzw
  nameWithType: Vector4i.Yzw
  fullName: OpenTK.Mathematics.Vector4i.Yzw
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Yzw
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 818
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> with the Y, Z, and W components of this instance.
  example: []
  syntax:
    content: public Vector3i Yzw { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3i
    content.vb: Public Property Yzw As Vector3i
  overload: OpenTK.Mathematics.Vector4i.Yzw*
- uid: OpenTK.Mathematics.Vector4i.Ywx
  commentId: P:OpenTK.Mathematics.Vector4i.Ywx
  id: Ywx
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Ywx
  nameWithType: Vector4i.Ywx
  fullName: OpenTK.Mathematics.Vector4i.Ywx
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Ywx
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 833
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> with the Y, W, and X components of this instance.
  example: []
  syntax:
    content: public Vector3i Ywx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3i
    content.vb: Public Property Ywx As Vector3i
  overload: OpenTK.Mathematics.Vector4i.Ywx*
- uid: OpenTK.Mathematics.Vector4i.Ywz
  commentId: P:OpenTK.Mathematics.Vector4i.Ywz
  id: Ywz
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Ywz
  nameWithType: Vector4i.Ywz
  fullName: OpenTK.Mathematics.Vector4i.Ywz
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Ywz
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 848
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> with the Y, W, and Z components of this instance.
  example: []
  syntax:
    content: public Vector3i Ywz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3i
    content.vb: Public Property Ywz As Vector3i
  overload: OpenTK.Mathematics.Vector4i.Ywz*
- uid: OpenTK.Mathematics.Vector4i.Zxy
  commentId: P:OpenTK.Mathematics.Vector4i.Zxy
  id: Zxy
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Zxy
  nameWithType: Vector4i.Zxy
  fullName: OpenTK.Mathematics.Vector4i.Zxy
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Zxy
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 863
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> with the Z, X, and Y components of this instance.
  example: []
  syntax:
    content: public Vector3i Zxy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3i
    content.vb: Public Property Zxy As Vector3i
  overload: OpenTK.Mathematics.Vector4i.Zxy*
- uid: OpenTK.Mathematics.Vector4i.Zxw
  commentId: P:OpenTK.Mathematics.Vector4i.Zxw
  id: Zxw
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Zxw
  nameWithType: Vector4i.Zxw
  fullName: OpenTK.Mathematics.Vector4i.Zxw
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Zxw
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 878
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> with the Z, X, and W components of this instance.
  example: []
  syntax:
    content: public Vector3i Zxw { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3i
    content.vb: Public Property Zxw As Vector3i
  overload: OpenTK.Mathematics.Vector4i.Zxw*
- uid: OpenTK.Mathematics.Vector4i.Zyx
  commentId: P:OpenTK.Mathematics.Vector4i.Zyx
  id: Zyx
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Zyx
  nameWithType: Vector4i.Zyx
  fullName: OpenTK.Mathematics.Vector4i.Zyx
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Zyx
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 893
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> with the Z, Y, and X components of this instance.
  example: []
  syntax:
    content: public Vector3i Zyx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3i
    content.vb: Public Property Zyx As Vector3i
  overload: OpenTK.Mathematics.Vector4i.Zyx*
- uid: OpenTK.Mathematics.Vector4i.Zyw
  commentId: P:OpenTK.Mathematics.Vector4i.Zyw
  id: Zyw
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Zyw
  nameWithType: Vector4i.Zyw
  fullName: OpenTK.Mathematics.Vector4i.Zyw
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Zyw
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 908
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> with the Z, Y, and W components of this instance.
  example: []
  syntax:
    content: public Vector3i Zyw { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3i
    content.vb: Public Property Zyw As Vector3i
  overload: OpenTK.Mathematics.Vector4i.Zyw*
- uid: OpenTK.Mathematics.Vector4i.Zwx
  commentId: P:OpenTK.Mathematics.Vector4i.Zwx
  id: Zwx
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Zwx
  nameWithType: Vector4i.Zwx
  fullName: OpenTK.Mathematics.Vector4i.Zwx
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Zwx
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 923
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> with the Z, W, and X components of this instance.
  example: []
  syntax:
    content: public Vector3i Zwx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3i
    content.vb: Public Property Zwx As Vector3i
  overload: OpenTK.Mathematics.Vector4i.Zwx*
- uid: OpenTK.Mathematics.Vector4i.Zwy
  commentId: P:OpenTK.Mathematics.Vector4i.Zwy
  id: Zwy
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Zwy
  nameWithType: Vector4i.Zwy
  fullName: OpenTK.Mathematics.Vector4i.Zwy
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Zwy
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 938
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> with the Z, W, and Y components of this instance.
  example: []
  syntax:
    content: public Vector3i Zwy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3i
    content.vb: Public Property Zwy As Vector3i
  overload: OpenTK.Mathematics.Vector4i.Zwy*
- uid: OpenTK.Mathematics.Vector4i.Wxy
  commentId: P:OpenTK.Mathematics.Vector4i.Wxy
  id: Wxy
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Wxy
  nameWithType: Vector4i.Wxy
  fullName: OpenTK.Mathematics.Vector4i.Wxy
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Wxy
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 953
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> with the W, X, and Y components of this instance.
  example: []
  syntax:
    content: public Vector3i Wxy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3i
    content.vb: Public Property Wxy As Vector3i
  overload: OpenTK.Mathematics.Vector4i.Wxy*
- uid: OpenTK.Mathematics.Vector4i.Wxz
  commentId: P:OpenTK.Mathematics.Vector4i.Wxz
  id: Wxz
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Wxz
  nameWithType: Vector4i.Wxz
  fullName: OpenTK.Mathematics.Vector4i.Wxz
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Wxz
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 968
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> with the W, X, and Z components of this instance.
  example: []
  syntax:
    content: public Vector3i Wxz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3i
    content.vb: Public Property Wxz As Vector3i
  overload: OpenTK.Mathematics.Vector4i.Wxz*
- uid: OpenTK.Mathematics.Vector4i.Wyx
  commentId: P:OpenTK.Mathematics.Vector4i.Wyx
  id: Wyx
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Wyx
  nameWithType: Vector4i.Wyx
  fullName: OpenTK.Mathematics.Vector4i.Wyx
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Wyx
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 983
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> with the W, Y, and X components of this instance.
  example: []
  syntax:
    content: public Vector3i Wyx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3i
    content.vb: Public Property Wyx As Vector3i
  overload: OpenTK.Mathematics.Vector4i.Wyx*
- uid: OpenTK.Mathematics.Vector4i.Wyz
  commentId: P:OpenTK.Mathematics.Vector4i.Wyz
  id: Wyz
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Wyz
  nameWithType: Vector4i.Wyz
  fullName: OpenTK.Mathematics.Vector4i.Wyz
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Wyz
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 998
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> with the W, Y, and Z components of this instance.
  example: []
  syntax:
    content: public Vector3i Wyz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3i
    content.vb: Public Property Wyz As Vector3i
  overload: OpenTK.Mathematics.Vector4i.Wyz*
- uid: OpenTK.Mathematics.Vector4i.Wzx
  commentId: P:OpenTK.Mathematics.Vector4i.Wzx
  id: Wzx
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Wzx
  nameWithType: Vector4i.Wzx
  fullName: OpenTK.Mathematics.Vector4i.Wzx
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Wzx
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1013
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> with the W, Z, and X components of this instance.
  example: []
  syntax:
    content: public Vector3i Wzx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3i
    content.vb: Public Property Wzx As Vector3i
  overload: OpenTK.Mathematics.Vector4i.Wzx*
- uid: OpenTK.Mathematics.Vector4i.Wzy
  commentId: P:OpenTK.Mathematics.Vector4i.Wzy
  id: Wzy
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Wzy
  nameWithType: Vector4i.Wzy
  fullName: OpenTK.Mathematics.Vector4i.Wzy
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Wzy
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1028
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> with the W, Z, and Y components of this instance.
  example: []
  syntax:
    content: public Vector3i Wzy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3i
    content.vb: Public Property Wzy As Vector3i
  overload: OpenTK.Mathematics.Vector4i.Wzy*
- uid: OpenTK.Mathematics.Vector4i.Xywz
  commentId: P:OpenTK.Mathematics.Vector4i.Xywz
  id: Xywz
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Xywz
  nameWithType: Vector4i.Xywz
  fullName: OpenTK.Mathematics.Vector4i.Xywz
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Xywz
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1043
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> with the X, Y, W, and Z components of this instance.
  example: []
  syntax:
    content: public Vector4i Xywz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4i
    content.vb: Public Property Xywz As Vector4i
  overload: OpenTK.Mathematics.Vector4i.Xywz*
- uid: OpenTK.Mathematics.Vector4i.Xzyw
  commentId: P:OpenTK.Mathematics.Vector4i.Xzyw
  id: Xzyw
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Xzyw
  nameWithType: Vector4i.Xzyw
  fullName: OpenTK.Mathematics.Vector4i.Xzyw
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Xzyw
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1059
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> with the X, Z, Y, and W components of this instance.
  example: []
  syntax:
    content: public Vector4i Xzyw { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4i
    content.vb: Public Property Xzyw As Vector4i
  overload: OpenTK.Mathematics.Vector4i.Xzyw*
- uid: OpenTK.Mathematics.Vector4i.Xzwy
  commentId: P:OpenTK.Mathematics.Vector4i.Xzwy
  id: Xzwy
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Xzwy
  nameWithType: Vector4i.Xzwy
  fullName: OpenTK.Mathematics.Vector4i.Xzwy
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Xzwy
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1075
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> with the X, Z, W, and Y components of this instance.
  example: []
  syntax:
    content: public Vector4i Xzwy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4i
    content.vb: Public Property Xzwy As Vector4i
  overload: OpenTK.Mathematics.Vector4i.Xzwy*
- uid: OpenTK.Mathematics.Vector4i.Xwyz
  commentId: P:OpenTK.Mathematics.Vector4i.Xwyz
  id: Xwyz
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Xwyz
  nameWithType: Vector4i.Xwyz
  fullName: OpenTK.Mathematics.Vector4i.Xwyz
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Xwyz
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1091
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> with the X, W, Y, and Z components of this instance.
  example: []
  syntax:
    content: public Vector4i Xwyz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4i
    content.vb: Public Property Xwyz As Vector4i
  overload: OpenTK.Mathematics.Vector4i.Xwyz*
- uid: OpenTK.Mathematics.Vector4i.Xwzy
  commentId: P:OpenTK.Mathematics.Vector4i.Xwzy
  id: Xwzy
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Xwzy
  nameWithType: Vector4i.Xwzy
  fullName: OpenTK.Mathematics.Vector4i.Xwzy
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Xwzy
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1107
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> with the X, W, Z, and Y components of this instance.
  example: []
  syntax:
    content: public Vector4i Xwzy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4i
    content.vb: Public Property Xwzy As Vector4i
  overload: OpenTK.Mathematics.Vector4i.Xwzy*
- uid: OpenTK.Mathematics.Vector4i.Yxzw
  commentId: P:OpenTK.Mathematics.Vector4i.Yxzw
  id: Yxzw
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Yxzw
  nameWithType: Vector4i.Yxzw
  fullName: OpenTK.Mathematics.Vector4i.Yxzw
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Yxzw
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1123
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> with the Y, X, Z, and W components of this instance.
  example: []
  syntax:
    content: public Vector4i Yxzw { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4i
    content.vb: Public Property Yxzw As Vector4i
  overload: OpenTK.Mathematics.Vector4i.Yxzw*
- uid: OpenTK.Mathematics.Vector4i.Yxwz
  commentId: P:OpenTK.Mathematics.Vector4i.Yxwz
  id: Yxwz
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Yxwz
  nameWithType: Vector4i.Yxwz
  fullName: OpenTK.Mathematics.Vector4i.Yxwz
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Yxwz
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1139
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> with the Y, X, W, and Z components of this instance.
  example: []
  syntax:
    content: public Vector4i Yxwz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4i
    content.vb: Public Property Yxwz As Vector4i
  overload: OpenTK.Mathematics.Vector4i.Yxwz*
- uid: OpenTK.Mathematics.Vector4i.Yyzw
  commentId: P:OpenTK.Mathematics.Vector4i.Yyzw
  id: Yyzw
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Yyzw
  nameWithType: Vector4i.Yyzw
  fullName: OpenTK.Mathematics.Vector4i.Yyzw
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Yyzw
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1155
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> with the Y, Y, Z, and W components of this instance.
  example: []
  syntax:
    content: public Vector4i Yyzw { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4i
    content.vb: Public Property Yyzw As Vector4i
  overload: OpenTK.Mathematics.Vector4i.Yyzw*
- uid: OpenTK.Mathematics.Vector4i.Yywz
  commentId: P:OpenTK.Mathematics.Vector4i.Yywz
  id: Yywz
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Yywz
  nameWithType: Vector4i.Yywz
  fullName: OpenTK.Mathematics.Vector4i.Yywz
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Yywz
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1171
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> with the Y, Y, W, and Z components of this instance.
  example: []
  syntax:
    content: public Vector4i Yywz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4i
    content.vb: Public Property Yywz As Vector4i
  overload: OpenTK.Mathematics.Vector4i.Yywz*
- uid: OpenTK.Mathematics.Vector4i.Yzxw
  commentId: P:OpenTK.Mathematics.Vector4i.Yzxw
  id: Yzxw
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Yzxw
  nameWithType: Vector4i.Yzxw
  fullName: OpenTK.Mathematics.Vector4i.Yzxw
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Yzxw
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1187
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> with the Y, Z, X, and W components of this instance.
  example: []
  syntax:
    content: public Vector4i Yzxw { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4i
    content.vb: Public Property Yzxw As Vector4i
  overload: OpenTK.Mathematics.Vector4i.Yzxw*
- uid: OpenTK.Mathematics.Vector4i.Yzwx
  commentId: P:OpenTK.Mathematics.Vector4i.Yzwx
  id: Yzwx
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Yzwx
  nameWithType: Vector4i.Yzwx
  fullName: OpenTK.Mathematics.Vector4i.Yzwx
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Yzwx
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1203
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> with the Y, Z, W, and X components of this instance.
  example: []
  syntax:
    content: public Vector4i Yzwx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4i
    content.vb: Public Property Yzwx As Vector4i
  overload: OpenTK.Mathematics.Vector4i.Yzwx*
- uid: OpenTK.Mathematics.Vector4i.Ywxz
  commentId: P:OpenTK.Mathematics.Vector4i.Ywxz
  id: Ywxz
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Ywxz
  nameWithType: Vector4i.Ywxz
  fullName: OpenTK.Mathematics.Vector4i.Ywxz
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Ywxz
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1219
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> with the Y, W, X, and Z components of this instance.
  example: []
  syntax:
    content: public Vector4i Ywxz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4i
    content.vb: Public Property Ywxz As Vector4i
  overload: OpenTK.Mathematics.Vector4i.Ywxz*
- uid: OpenTK.Mathematics.Vector4i.Ywzx
  commentId: P:OpenTK.Mathematics.Vector4i.Ywzx
  id: Ywzx
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Ywzx
  nameWithType: Vector4i.Ywzx
  fullName: OpenTK.Mathematics.Vector4i.Ywzx
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Ywzx
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1235
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> with the Y, W, Z, and X components of this instance.
  example: []
  syntax:
    content: public Vector4i Ywzx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4i
    content.vb: Public Property Ywzx As Vector4i
  overload: OpenTK.Mathematics.Vector4i.Ywzx*
- uid: OpenTK.Mathematics.Vector4i.Zxyw
  commentId: P:OpenTK.Mathematics.Vector4i.Zxyw
  id: Zxyw
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Zxyw
  nameWithType: Vector4i.Zxyw
  fullName: OpenTK.Mathematics.Vector4i.Zxyw
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Zxyw
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1251
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> with the Z, X, Y, and Z components of this instance.
  example: []
  syntax:
    content: public Vector4i Zxyw { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4i
    content.vb: Public Property Zxyw As Vector4i
  overload: OpenTK.Mathematics.Vector4i.Zxyw*
- uid: OpenTK.Mathematics.Vector4i.Zxwy
  commentId: P:OpenTK.Mathematics.Vector4i.Zxwy
  id: Zxwy
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Zxwy
  nameWithType: Vector4i.Zxwy
  fullName: OpenTK.Mathematics.Vector4i.Zxwy
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Zxwy
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1267
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> with the Z, X, W, and Y components of this instance.
  example: []
  syntax:
    content: public Vector4i Zxwy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4i
    content.vb: Public Property Zxwy As Vector4i
  overload: OpenTK.Mathematics.Vector4i.Zxwy*
- uid: OpenTK.Mathematics.Vector4i.Zyxw
  commentId: P:OpenTK.Mathematics.Vector4i.Zyxw
  id: Zyxw
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Zyxw
  nameWithType: Vector4i.Zyxw
  fullName: OpenTK.Mathematics.Vector4i.Zyxw
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Zyxw
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1283
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> with the Z, Y, X, and W components of this instance.
  example: []
  syntax:
    content: public Vector4i Zyxw { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4i
    content.vb: Public Property Zyxw As Vector4i
  overload: OpenTK.Mathematics.Vector4i.Zyxw*
- uid: OpenTK.Mathematics.Vector4i.Zywx
  commentId: P:OpenTK.Mathematics.Vector4i.Zywx
  id: Zywx
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Zywx
  nameWithType: Vector4i.Zywx
  fullName: OpenTK.Mathematics.Vector4i.Zywx
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Zywx
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1299
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> with the Z, Y, W, and X components of this instance.
  example: []
  syntax:
    content: public Vector4i Zywx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4i
    content.vb: Public Property Zywx As Vector4i
  overload: OpenTK.Mathematics.Vector4i.Zywx*
- uid: OpenTK.Mathematics.Vector4i.Zwxy
  commentId: P:OpenTK.Mathematics.Vector4i.Zwxy
  id: Zwxy
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Zwxy
  nameWithType: Vector4i.Zwxy
  fullName: OpenTK.Mathematics.Vector4i.Zwxy
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Zwxy
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1315
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> with the Z, W, X, and Y components of this instance.
  example: []
  syntax:
    content: public Vector4i Zwxy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4i
    content.vb: Public Property Zwxy As Vector4i
  overload: OpenTK.Mathematics.Vector4i.Zwxy*
- uid: OpenTK.Mathematics.Vector4i.Zwyx
  commentId: P:OpenTK.Mathematics.Vector4i.Zwyx
  id: Zwyx
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Zwyx
  nameWithType: Vector4i.Zwyx
  fullName: OpenTK.Mathematics.Vector4i.Zwyx
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Zwyx
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1331
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> with the Z, W, Y, and X components of this instance.
  example: []
  syntax:
    content: public Vector4i Zwyx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4i
    content.vb: Public Property Zwyx As Vector4i
  overload: OpenTK.Mathematics.Vector4i.Zwyx*
- uid: OpenTK.Mathematics.Vector4i.Zwzy
  commentId: P:OpenTK.Mathematics.Vector4i.Zwzy
  id: Zwzy
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Zwzy
  nameWithType: Vector4i.Zwzy
  fullName: OpenTK.Mathematics.Vector4i.Zwzy
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Zwzy
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1347
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> with the Z, W, Z, and Y components of this instance.
  example: []
  syntax:
    content: public Vector4i Zwzy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4i
    content.vb: Public Property Zwzy As Vector4i
  overload: OpenTK.Mathematics.Vector4i.Zwzy*
- uid: OpenTK.Mathematics.Vector4i.Wxyz
  commentId: P:OpenTK.Mathematics.Vector4i.Wxyz
  id: Wxyz
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Wxyz
  nameWithType: Vector4i.Wxyz
  fullName: OpenTK.Mathematics.Vector4i.Wxyz
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Wxyz
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1363
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> with the W, X, Y, and Z components of this instance.
  example: []
  syntax:
    content: public Vector4i Wxyz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4i
    content.vb: Public Property Wxyz As Vector4i
  overload: OpenTK.Mathematics.Vector4i.Wxyz*
- uid: OpenTK.Mathematics.Vector4i.Wxzy
  commentId: P:OpenTK.Mathematics.Vector4i.Wxzy
  id: Wxzy
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Wxzy
  nameWithType: Vector4i.Wxzy
  fullName: OpenTK.Mathematics.Vector4i.Wxzy
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Wxzy
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1379
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> with the W, X, Z, and Y components of this instance.
  example: []
  syntax:
    content: public Vector4i Wxzy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4i
    content.vb: Public Property Wxzy As Vector4i
  overload: OpenTK.Mathematics.Vector4i.Wxzy*
- uid: OpenTK.Mathematics.Vector4i.Wyxz
  commentId: P:OpenTK.Mathematics.Vector4i.Wyxz
  id: Wyxz
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Wyxz
  nameWithType: Vector4i.Wyxz
  fullName: OpenTK.Mathematics.Vector4i.Wyxz
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Wyxz
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1395
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> with the W, Y, X, and Z components of this instance.
  example: []
  syntax:
    content: public Vector4i Wyxz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4i
    content.vb: Public Property Wyxz As Vector4i
  overload: OpenTK.Mathematics.Vector4i.Wyxz*
- uid: OpenTK.Mathematics.Vector4i.Wyzx
  commentId: P:OpenTK.Mathematics.Vector4i.Wyzx
  id: Wyzx
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Wyzx
  nameWithType: Vector4i.Wyzx
  fullName: OpenTK.Mathematics.Vector4i.Wyzx
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Wyzx
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1411
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> with the W, Y, Z, and X components of this instance.
  example: []
  syntax:
    content: public Vector4i Wyzx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4i
    content.vb: Public Property Wyzx As Vector4i
  overload: OpenTK.Mathematics.Vector4i.Wyzx*
- uid: OpenTK.Mathematics.Vector4i.Wzxy
  commentId: P:OpenTK.Mathematics.Vector4i.Wzxy
  id: Wzxy
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Wzxy
  nameWithType: Vector4i.Wzxy
  fullName: OpenTK.Mathematics.Vector4i.Wzxy
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Wzxy
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1427
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> with the W, Z, X, and Y components of this instance.
  example: []
  syntax:
    content: public Vector4i Wzxy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4i
    content.vb: Public Property Wzxy As Vector4i
  overload: OpenTK.Mathematics.Vector4i.Wzxy*
- uid: OpenTK.Mathematics.Vector4i.Wzyx
  commentId: P:OpenTK.Mathematics.Vector4i.Wzyx
  id: Wzyx
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Wzyx
  nameWithType: Vector4i.Wzyx
  fullName: OpenTK.Mathematics.Vector4i.Wzyx
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Wzyx
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1443
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> with the W, Z, Y, and X components of this instance.
  example: []
  syntax:
    content: public Vector4i Wzyx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4i
    content.vb: Public Property Wzyx As Vector4i
  overload: OpenTK.Mathematics.Vector4i.Wzyx*
- uid: OpenTK.Mathematics.Vector4i.Wzyw
  commentId: P:OpenTK.Mathematics.Vector4i.Wzyw
  id: Wzyw
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Wzyw
  nameWithType: Vector4i.Wzyw
  fullName: OpenTK.Mathematics.Vector4i.Wzyw
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Wzyw
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1459
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> with the W, Z, Y, and W components of this instance.
  example: []
  syntax:
    content: public Vector4i Wzyw { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4i
    content.vb: Public Property Wzyw As Vector4i
  overload: OpenTK.Mathematics.Vector4i.Wzyw*
- uid: OpenTK.Mathematics.Vector4i.ToVector4
  commentId: M:OpenTK.Mathematics.Vector4i.ToVector4
  id: ToVector4
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: ToVector4()
  nameWithType: Vector4i.ToVector4()
  fullName: OpenTK.Mathematics.Vector4i.ToVector4()
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: ToVector4
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1476
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets a <xref href="OpenTK.Mathematics.Vector4" data-throw-if-not-resolved="false"></xref> object with the same component values as the <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> instance.
  example: []
  syntax:
    content: public readonly Vector4 ToVector4()
    return:
      type: OpenTK.Mathematics.Vector4
      description: The resulting <xref href="OpenTK.Mathematics.Vector4" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Function ToVector4() As Vector4
  overload: OpenTK.Mathematics.Vector4i.ToVector4*
- uid: OpenTK.Mathematics.Vector4i.ToVector4(OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4@)
  commentId: M:OpenTK.Mathematics.Vector4i.ToVector4(OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4@)
  id: ToVector4(OpenTK.Mathematics.Vector4i@,OpenTK.Mathematics.Vector4@)
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: ToVector4(in Vector4i, out Vector4)
  nameWithType: Vector4i.ToVector4(in Vector4i, out Vector4)
  fullName: OpenTK.Mathematics.Vector4i.ToVector4(in OpenTK.Mathematics.Vector4i, out OpenTK.Mathematics.Vector4)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: ToVector4
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1486
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets a <xref href="OpenTK.Mathematics.Vector4" data-throw-if-not-resolved="false"></xref> object with the same component values as the <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> instance.
  example: []
  syntax:
    content: public static void ToVector4(in Vector4i input, out Vector4 result)
    parameters:
    - id: input
      type: OpenTK.Mathematics.Vector4i
      description: The given <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> to convert.
    - id: result
      type: OpenTK.Mathematics.Vector4
      description: The resulting <xref href="OpenTK.Mathematics.Vector4" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Sub ToVector4(input As Vector4i, result As Vector4)
  overload: OpenTK.Mathematics.Vector4i.ToVector4*
  nameWithType.vb: Vector4i.ToVector4(Vector4i, Vector4)
  fullName.vb: OpenTK.Mathematics.Vector4i.ToVector4(OpenTK.Mathematics.Vector4i, OpenTK.Mathematics.Vector4)
  name.vb: ToVector4(Vector4i, Vector4)
- uid: OpenTK.Mathematics.Vector4i.op_Addition(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  commentId: M:OpenTK.Mathematics.Vector4i.op_Addition(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  id: op_Addition(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: operator +(Vector4i, Vector4i)
  nameWithType: Vector4i.operator +(Vector4i, Vector4i)
  fullName: OpenTK.Mathematics.Vector4i.operator +(OpenTK.Mathematics.Vector4i, OpenTK.Mathematics.Vector4i)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: op_Addition
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1500
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Adds two instances.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4i operator +(Vector4i left, Vector4i right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector4i
      description: The first instance.
    - id: right
      type: OpenTK.Mathematics.Vector4i
      description: The second instance.
    return:
      type: OpenTK.Mathematics.Vector4i
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator +(left As Vector4i, right As Vector4i) As Vector4i
  overload: OpenTK.Mathematics.Vector4i.op_Addition*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4i.+(Vector4i, Vector4i)
  fullName.vb: OpenTK.Mathematics.Vector4i.+(OpenTK.Mathematics.Vector4i, OpenTK.Mathematics.Vector4i)
  name.vb: +(Vector4i, Vector4i)
- uid: OpenTK.Mathematics.Vector4i.op_Subtraction(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  commentId: M:OpenTK.Mathematics.Vector4i.op_Subtraction(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  id: op_Subtraction(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: operator -(Vector4i, Vector4i)
  nameWithType: Vector4i.operator -(Vector4i, Vector4i)
  fullName: OpenTK.Mathematics.Vector4i.operator -(OpenTK.Mathematics.Vector4i, OpenTK.Mathematics.Vector4i)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: op_Subtraction
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1516
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Subtracts two instances.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4i operator -(Vector4i left, Vector4i right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector4i
      description: The first instance.
    - id: right
      type: OpenTK.Mathematics.Vector4i
      description: The second instance.
    return:
      type: OpenTK.Mathematics.Vector4i
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator -(left As Vector4i, right As Vector4i) As Vector4i
  overload: OpenTK.Mathematics.Vector4i.op_Subtraction*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4i.-(Vector4i, Vector4i)
  fullName.vb: OpenTK.Mathematics.Vector4i.-(OpenTK.Mathematics.Vector4i, OpenTK.Mathematics.Vector4i)
  name.vb: -(Vector4i, Vector4i)
- uid: OpenTK.Mathematics.Vector4i.op_UnaryNegation(OpenTK.Mathematics.Vector4i)
  commentId: M:OpenTK.Mathematics.Vector4i.op_UnaryNegation(OpenTK.Mathematics.Vector4i)
  id: op_UnaryNegation(OpenTK.Mathematics.Vector4i)
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: operator -(Vector4i)
  nameWithType: Vector4i.operator -(Vector4i)
  fullName: OpenTK.Mathematics.Vector4i.operator -(OpenTK.Mathematics.Vector4i)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: op_UnaryNegation
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1531
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Negates an instance.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4i operator -(Vector4i vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4i
      description: The instance.
    return:
      type: OpenTK.Mathematics.Vector4i
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator -(vec As Vector4i) As Vector4i
  overload: OpenTK.Mathematics.Vector4i.op_UnaryNegation*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4i.-(Vector4i)
  fullName.vb: OpenTK.Mathematics.Vector4i.-(OpenTK.Mathematics.Vector4i)
  name.vb: -(Vector4i)
- uid: OpenTK.Mathematics.Vector4i.op_Multiply(OpenTK.Mathematics.Vector4i,System.Int32)
  commentId: M:OpenTK.Mathematics.Vector4i.op_Multiply(OpenTK.Mathematics.Vector4i,System.Int32)
  id: op_Multiply(OpenTK.Mathematics.Vector4i,System.Int32)
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: operator *(Vector4i, int)
  nameWithType: Vector4i.operator *(Vector4i, int)
  fullName: OpenTK.Mathematics.Vector4i.operator *(OpenTK.Mathematics.Vector4i, int)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: op_Multiply
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1547
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies an instance by an integer scalar.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4i operator *(Vector4i vec, int scale)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4i
      description: The instance.
    - id: scale
      type: System.Int32
      description: The scalar.
    return:
      type: OpenTK.Mathematics.Vector4i
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator *(vec As Vector4i, scale As Integer) As Vector4i
  overload: OpenTK.Mathematics.Vector4i.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4i.*(Vector4i, Integer)
  fullName.vb: OpenTK.Mathematics.Vector4i.*(OpenTK.Mathematics.Vector4i, Integer)
  name.vb: '*(Vector4i, Integer)'
- uid: OpenTK.Mathematics.Vector4i.op_Multiply(System.Int32,OpenTK.Mathematics.Vector4i)
  commentId: M:OpenTK.Mathematics.Vector4i.op_Multiply(System.Int32,OpenTK.Mathematics.Vector4i)
  id: op_Multiply(System.Int32,OpenTK.Mathematics.Vector4i)
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: operator *(int, Vector4i)
  nameWithType: Vector4i.operator *(int, Vector4i)
  fullName: OpenTK.Mathematics.Vector4i.operator *(int, OpenTK.Mathematics.Vector4i)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: op_Multiply
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1563
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies an instance by an integer scalar.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4i operator *(int scale, Vector4i vec)
    parameters:
    - id: scale
      type: System.Int32
      description: The scalar.
    - id: vec
      type: OpenTK.Mathematics.Vector4i
      description: The instance.
    return:
      type: OpenTK.Mathematics.Vector4i
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator *(scale As Integer, vec As Vector4i) As Vector4i
  overload: OpenTK.Mathematics.Vector4i.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4i.*(Integer, Vector4i)
  fullName.vb: OpenTK.Mathematics.Vector4i.*(Integer, OpenTK.Mathematics.Vector4i)
  name.vb: '*(Integer, Vector4i)'
- uid: OpenTK.Mathematics.Vector4i.op_Multiply(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  commentId: M:OpenTK.Mathematics.Vector4i.op_Multiply(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  id: op_Multiply(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: operator *(Vector4i, Vector4i)
  nameWithType: Vector4i.operator *(Vector4i, Vector4i)
  fullName: OpenTK.Mathematics.Vector4i.operator *(OpenTK.Mathematics.Vector4i, OpenTK.Mathematics.Vector4i)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: op_Multiply
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1579
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Component-wise multiplication between the specified instance by a scale vector.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4i operator *(Vector4i vec, Vector4i scale)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4i
      description: Right operand.
    - id: scale
      type: OpenTK.Mathematics.Vector4i
      description: Left operand.
    return:
      type: OpenTK.Mathematics.Vector4i
      description: Result of multiplication.
    content.vb: >-
      <Pure>

      Public Shared Operator *(vec As Vector4i, scale As Vector4i) As Vector4i
  overload: OpenTK.Mathematics.Vector4i.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4i.*(Vector4i, Vector4i)
  fullName.vb: OpenTK.Mathematics.Vector4i.*(OpenTK.Mathematics.Vector4i, OpenTK.Mathematics.Vector4i)
  name.vb: '*(Vector4i, Vector4i)'
- uid: OpenTK.Mathematics.Vector4i.op_Division(OpenTK.Mathematics.Vector4i,System.Int32)
  commentId: M:OpenTK.Mathematics.Vector4i.op_Division(OpenTK.Mathematics.Vector4i,System.Int32)
  id: op_Division(OpenTK.Mathematics.Vector4i,System.Int32)
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: operator /(Vector4i, int)
  nameWithType: Vector4i.operator /(Vector4i, int)
  fullName: OpenTK.Mathematics.Vector4i.operator /(OpenTK.Mathematics.Vector4i, int)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: op_Division
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1595
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Divides the instance by a scalar using integer division, floor(a/b).
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4i operator /(Vector4i vec, int scale)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4i
      description: The instance.
    - id: scale
      type: System.Int32
      description: The scalar.
    return:
      type: OpenTK.Mathematics.Vector4i
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator /(vec As Vector4i, scale As Integer) As Vector4i
  overload: OpenTK.Mathematics.Vector4i.op_Division*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4i./(Vector4i, Integer)
  fullName.vb: OpenTK.Mathematics.Vector4i./(OpenTK.Mathematics.Vector4i, Integer)
  name.vb: /(Vector4i, Integer)
- uid: OpenTK.Mathematics.Vector4i.op_Division(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  commentId: M:OpenTK.Mathematics.Vector4i.op_Division(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  id: op_Division(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: operator /(Vector4i, Vector4i)
  nameWithType: Vector4i.operator /(Vector4i, Vector4i)
  fullName: OpenTK.Mathematics.Vector4i.operator /(OpenTK.Mathematics.Vector4i, OpenTK.Mathematics.Vector4i)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: op_Division
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1611
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Component-wise division between the specified instance by a scale vector.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4i operator /(Vector4i vec, Vector4i scale)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4i
      description: Left operand.
    - id: scale
      type: OpenTK.Mathematics.Vector4i
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector4i
      description: Result of the division.
    content.vb: >-
      <Pure>

      Public Shared Operator /(vec As Vector4i, scale As Vector4i) As Vector4i
  overload: OpenTK.Mathematics.Vector4i.op_Division*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4i./(Vector4i, Vector4i)
  fullName.vb: OpenTK.Mathematics.Vector4i./(OpenTK.Mathematics.Vector4i, OpenTK.Mathematics.Vector4i)
  name.vb: /(Vector4i, Vector4i)
- uid: OpenTK.Mathematics.Vector4i.op_Equality(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  commentId: M:OpenTK.Mathematics.Vector4i.op_Equality(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  id: op_Equality(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: operator ==(Vector4i, Vector4i)
  nameWithType: Vector4i.operator ==(Vector4i, Vector4i)
  fullName: OpenTK.Mathematics.Vector4i.operator ==(OpenTK.Mathematics.Vector4i, OpenTK.Mathematics.Vector4i)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: op_Equality
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1627
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Compares two instances for equality.
  example: []
  syntax:
    content: public static bool operator ==(Vector4i left, Vector4i right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector4i
      description: The first instance.
    - id: right
      type: OpenTK.Mathematics.Vector4i
      description: The second instance.
    return:
      type: System.Boolean
      description: True, if left equals right; false otherwise.
    content.vb: Public Shared Operator =(left As Vector4i, right As Vector4i) As Boolean
  overload: OpenTK.Mathematics.Vector4i.op_Equality*
  nameWithType.vb: Vector4i.=(Vector4i, Vector4i)
  fullName.vb: OpenTK.Mathematics.Vector4i.=(OpenTK.Mathematics.Vector4i, OpenTK.Mathematics.Vector4i)
  name.vb: =(Vector4i, Vector4i)
- uid: OpenTK.Mathematics.Vector4i.op_Inequality(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  commentId: M:OpenTK.Mathematics.Vector4i.op_Inequality(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  id: op_Inequality(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: operator !=(Vector4i, Vector4i)
  nameWithType: Vector4i.operator !=(Vector4i, Vector4i)
  fullName: OpenTK.Mathematics.Vector4i.operator !=(OpenTK.Mathematics.Vector4i, OpenTK.Mathematics.Vector4i)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: op_Inequality
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1638
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Compares two instances for inequality.
  example: []
  syntax:
    content: public static bool operator !=(Vector4i left, Vector4i right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector4i
      description: The first instance.
    - id: right
      type: OpenTK.Mathematics.Vector4i
      description: The second instance.
    return:
      type: System.Boolean
      description: True, if left does not equa lright; false otherwise.
    content.vb: Public Shared Operator <>(left As Vector4i, right As Vector4i) As Boolean
  overload: OpenTK.Mathematics.Vector4i.op_Inequality*
  nameWithType.vb: Vector4i.<>(Vector4i, Vector4i)
  fullName.vb: OpenTK.Mathematics.Vector4i.<>(OpenTK.Mathematics.Vector4i, OpenTK.Mathematics.Vector4i)
  name.vb: <>(Vector4i, Vector4i)
- uid: OpenTK.Mathematics.Vector4i.op_Explicit(OpenTK.Mathematics.Vector4i)~System.Int32*
  commentId: M:OpenTK.Mathematics.Vector4i.op_Explicit(OpenTK.Mathematics.Vector4i)~System.Int32*
  id: op_Explicit(OpenTK.Mathematics.Vector4i)~System.Int32*
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: explicit operator int*(Vector4i)
  nameWithType: Vector4i.explicit operator int*(Vector4i)
  fullName: OpenTK.Mathematics.Vector4i.explicit operator int*(OpenTK.Mathematics.Vector4i)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: op_Explicit
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1648
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a pointer to the first element of the specified instance.
  example: []
  syntax:
    content: >-
      [Pure]

      public static explicit operator int*(Vector4i v)
    parameters:
    - id: v
      type: OpenTK.Mathematics.Vector4i
      description: The instance.
    return:
      type: System.Int32*
      description: A pointer to the first element of v.
    content.vb: >-
      <Pure>

      Public Shared Narrowing Operator CType(v As Vector4i) As Integer*
  overload: OpenTK.Mathematics.Vector4i.op_Explicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4i.CType(Vector4i)
  fullName.vb: OpenTK.Mathematics.Vector4i.CType(OpenTK.Mathematics.Vector4i)
  name.vb: CType(Vector4i)
- uid: OpenTK.Mathematics.Vector4i.op_Explicit(OpenTK.Mathematics.Vector4i)~System.IntPtr
  commentId: M:OpenTK.Mathematics.Vector4i.op_Explicit(OpenTK.Mathematics.Vector4i)~System.IntPtr
  id: op_Explicit(OpenTK.Mathematics.Vector4i)~System.IntPtr
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: explicit operator IntPtr(Vector4i)
  nameWithType: Vector4i.explicit operator IntPtr(Vector4i)
  fullName: OpenTK.Mathematics.Vector4i.explicit operator System.IntPtr(OpenTK.Mathematics.Vector4i)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: op_Explicit
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1659
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a pointer to the first element of the specified instance.
  example: []
  syntax:
    content: >-
      [Pure]

      public static explicit operator IntPtr(Vector4i v)
    parameters:
    - id: v
      type: OpenTK.Mathematics.Vector4i
      description: The instance.
    return:
      type: System.IntPtr
      description: A pointer to the first element of v.
    content.vb: >-
      <Pure>

      Public Shared Narrowing Operator CType(v As Vector4i) As IntPtr
  overload: OpenTK.Mathematics.Vector4i.op_Explicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4i.CType(Vector4i)
  fullName.vb: OpenTK.Mathematics.Vector4i.CType(OpenTK.Mathematics.Vector4i)
  name.vb: CType(Vector4i)
- uid: OpenTK.Mathematics.Vector4i.op_Implicit(OpenTK.Mathematics.Vector4i)~OpenTK.Mathematics.Vector4
  commentId: M:OpenTK.Mathematics.Vector4i.op_Implicit(OpenTK.Mathematics.Vector4i)~OpenTK.Mathematics.Vector4
  id: op_Implicit(OpenTK.Mathematics.Vector4i)~OpenTK.Mathematics.Vector4
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: implicit operator Vector4(Vector4i)
  nameWithType: Vector4i.implicit operator Vector4(Vector4i)
  fullName: OpenTK.Mathematics.Vector4i.implicit operator OpenTK.Mathematics.Vector4(OpenTK.Mathematics.Vector4i)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: op_Implicit
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1673
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts OpenTK.Vector4i to OpenTK.Vector4.
  example: []
  syntax:
    content: >-
      [Pure]

      public static implicit operator Vector4(Vector4i vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4i
      description: The Vector4i to convert.
    return:
      type: OpenTK.Mathematics.Vector4
      description: The resulting Vector4.
    content.vb: >-
      <Pure>

      Public Shared Widening Operator CType(vec As Vector4i) As Vector4
  overload: OpenTK.Mathematics.Vector4i.op_Implicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4i.CType(Vector4i)
  fullName.vb: OpenTK.Mathematics.Vector4i.CType(OpenTK.Mathematics.Vector4i)
  name.vb: CType(Vector4i)
- uid: OpenTK.Mathematics.Vector4i.op_Implicit(OpenTK.Mathematics.Vector4i)~OpenTK.Mathematics.Vector4d
  commentId: M:OpenTK.Mathematics.Vector4i.op_Implicit(OpenTK.Mathematics.Vector4i)~OpenTK.Mathematics.Vector4d
  id: op_Implicit(OpenTK.Mathematics.Vector4i)~OpenTK.Mathematics.Vector4d
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: implicit operator Vector4d(Vector4i)
  nameWithType: Vector4i.implicit operator Vector4d(Vector4i)
  fullName: OpenTK.Mathematics.Vector4i.implicit operator OpenTK.Mathematics.Vector4d(OpenTK.Mathematics.Vector4i)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: op_Implicit
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1684
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts OpenTK.Vector4i to OpenTK.Vector4d.
  example: []
  syntax:
    content: >-
      [Pure]

      public static implicit operator Vector4d(Vector4i vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4i
      description: The Vector4i to convert.
    return:
      type: OpenTK.Mathematics.Vector4d
      description: The resulting Vector4d.
    content.vb: >-
      <Pure>

      Public Shared Widening Operator CType(vec As Vector4i) As Vector4d
  overload: OpenTK.Mathematics.Vector4i.op_Implicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4i.CType(Vector4i)
  fullName.vb: OpenTK.Mathematics.Vector4i.CType(OpenTK.Mathematics.Vector4i)
  name.vb: CType(Vector4i)
- uid: OpenTK.Mathematics.Vector4i.op_Explicit(OpenTK.Mathematics.Vector4i)~OpenTK.Mathematics.Vector4h
  commentId: M:OpenTK.Mathematics.Vector4i.op_Explicit(OpenTK.Mathematics.Vector4i)~OpenTK.Mathematics.Vector4h
  id: op_Explicit(OpenTK.Mathematics.Vector4i)~OpenTK.Mathematics.Vector4h
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: explicit operator Vector4h(Vector4i)
  nameWithType: Vector4i.explicit operator Vector4h(Vector4i)
  fullName: OpenTK.Mathematics.Vector4i.explicit operator OpenTK.Mathematics.Vector4h(OpenTK.Mathematics.Vector4i)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: op_Explicit
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1695
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts OpenTK.Vector4i to OpenTK.Vector4h.
  example: []
  syntax:
    content: >-
      [Pure]

      public static explicit operator Vector4h(Vector4i vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4i
      description: The Vector4i to convert.
    return:
      type: OpenTK.Mathematics.Vector4h
      description: The resulting Vector4h.
    content.vb: >-
      <Pure>

      Public Shared Narrowing Operator CType(vec As Vector4i) As Vector4h
  overload: OpenTK.Mathematics.Vector4i.op_Explicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4i.CType(Vector4i)
  fullName.vb: OpenTK.Mathematics.Vector4i.CType(OpenTK.Mathematics.Vector4i)
  name.vb: CType(Vector4i)
- uid: OpenTK.Mathematics.Vector4i.op_Implicit(System.ValueTuple{System.Int32,System.Int32,System.Int32,System.Int32})~OpenTK.Mathematics.Vector4i
  commentId: M:OpenTK.Mathematics.Vector4i.op_Implicit(System.ValueTuple{System.Int32,System.Int32,System.Int32,System.Int32})~OpenTK.Mathematics.Vector4i
  id: op_Implicit(System.ValueTuple{System.Int32,System.Int32,System.Int32,System.Int32})~OpenTK.Mathematics.Vector4i
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: implicit operator Vector4i((int X, int Y, int Z, int W))
  nameWithType: Vector4i.implicit operator Vector4i((int X, int Y, int Z, int W))
  fullName: OpenTK.Mathematics.Vector4i.implicit operator OpenTK.Mathematics.Vector4i((int X, int Y, int Z, int W))
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: op_Implicit
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1707
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> struct using a tuple containing the component

    values.
  example: []
  syntax:
    content: >-
      [Pure]

      public static implicit operator Vector4i((int X, int Y, int Z, int W) values)
    parameters:
    - id: values
      type: System.ValueTuple{System.Int32,System.Int32,System.Int32,System.Int32}
      description: A tuple containing the component values.
    return:
      type: OpenTK.Mathematics.Vector4i
      description: A new instance of the <xref href="OpenTK.Mathematics.Vector4i" data-throw-if-not-resolved="false"></xref> struct with the given component values.
    content.vb: >-
      <Pure>

      Public Shared Widening Operator CType(values As (X As Integer, Y As Integer, Z As Integer, W As Integer)) As Vector4i
  overload: OpenTK.Mathematics.Vector4i.op_Implicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4i.CType((X As Integer, Y As Integer, Z As Integer, W As Integer))
  fullName.vb: OpenTK.Mathematics.Vector4i.CType((X As Integer, Y As Integer, Z As Integer, W As Integer))
  name.vb: CType((X As Integer, Y As Integer, Z As Integer, W As Integer))
- uid: OpenTK.Mathematics.Vector4i.ToString
  commentId: M:OpenTK.Mathematics.Vector4i.ToString
  id: ToString
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Vector4i.ToString()
  fullName: OpenTK.Mathematics.Vector4i.ToString()
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: ToString
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1714
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  example: []
  syntax:
    content: public override readonly string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: OpenTK.Mathematics.Vector4i.ToString*
- uid: OpenTK.Mathematics.Vector4i.ToString(System.String)
  commentId: M:OpenTK.Mathematics.Vector4i.ToString(System.String)
  id: ToString(System.String)
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: ToString(string)
  nameWithType: Vector4i.ToString(string)
  fullName: OpenTK.Mathematics.Vector4i.ToString(string)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: ToString
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1720
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  example: []
  syntax:
    content: public readonly string ToString(string format)
    parameters:
    - id: format
      type: System.String
    return:
      type: System.String
    content.vb: Public Function ToString(format As String) As String
  overload: OpenTK.Mathematics.Vector4i.ToString*
  nameWithType.vb: Vector4i.ToString(String)
  fullName.vb: OpenTK.Mathematics.Vector4i.ToString(String)
  name.vb: ToString(String)
- uid: OpenTK.Mathematics.Vector4i.ToString(System.IFormatProvider)
  commentId: M:OpenTK.Mathematics.Vector4i.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: ToString(IFormatProvider)
  nameWithType: Vector4i.ToString(IFormatProvider)
  fullName: OpenTK.Mathematics.Vector4i.ToString(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: ToString
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1726
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  example: []
  syntax:
    content: public readonly string ToString(IFormatProvider formatProvider)
    parameters:
    - id: formatProvider
      type: System.IFormatProvider
    return:
      type: System.String
    content.vb: Public Function ToString(formatProvider As IFormatProvider) As String
  overload: OpenTK.Mathematics.Vector4i.ToString*
- uid: OpenTK.Mathematics.Vector4i.ToString(System.String,System.IFormatProvider)
  commentId: M:OpenTK.Mathematics.Vector4i.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: ToString(string, IFormatProvider)
  nameWithType: Vector4i.ToString(string, IFormatProvider)
  fullName: OpenTK.Mathematics.Vector4i.ToString(string, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: ToString
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1732
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  example: []
  syntax:
    content: public readonly string ToString(string format, IFormatProvider formatProvider)
    parameters:
    - id: format
      type: System.String
    - id: formatProvider
      type: System.IFormatProvider
    return:
      type: System.String
    content.vb: Public Function ToString(format As String, formatProvider As IFormatProvider) As String
  overload: OpenTK.Mathematics.Vector4i.ToString*
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  nameWithType.vb: Vector4i.ToString(String, IFormatProvider)
  fullName.vb: OpenTK.Mathematics.Vector4i.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
- uid: OpenTK.Mathematics.Vector4i.Equals(System.Object)
  commentId: M:OpenTK.Mathematics.Vector4i.Equals(System.Object)
  id: Equals(System.Object)
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: Vector4i.Equals(object)
  fullName: OpenTK.Mathematics.Vector4i.Equals(object)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Equals
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1744
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  example: []
  syntax:
    content: public override readonly bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: OpenTK.Mathematics.Vector4i.Equals*
  nameWithType.vb: Vector4i.Equals(Object)
  fullName.vb: OpenTK.Mathematics.Vector4i.Equals(Object)
  name.vb: Equals(Object)
- uid: OpenTK.Mathematics.Vector4i.Equals(OpenTK.Mathematics.Vector4i)
  commentId: M:OpenTK.Mathematics.Vector4i.Equals(OpenTK.Mathematics.Vector4i)
  id: Equals(OpenTK.Mathematics.Vector4i)
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Equals(Vector4i)
  nameWithType: Vector4i.Equals(Vector4i)
  fullName: OpenTK.Mathematics.Vector4i.Equals(OpenTK.Mathematics.Vector4i)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Equals
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1750
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  example: []
  syntax:
    content: public readonly bool Equals(Vector4i other)
    parameters:
    - id: other
      type: OpenTK.Mathematics.Vector4i
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As Vector4i) As Boolean
  overload: OpenTK.Mathematics.Vector4i.Equals*
  implements:
  - System.IEquatable{OpenTK.Mathematics.Vector4i}.Equals(OpenTK.Mathematics.Vector4i)
- uid: OpenTK.Mathematics.Vector4i.GetHashCode
  commentId: M:OpenTK.Mathematics.Vector4i.GetHashCode
  id: GetHashCode
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Vector4i.GetHashCode()
  fullName: OpenTK.Mathematics.Vector4i.GetHashCode()
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: GetHashCode
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1759
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  example: []
  syntax:
    content: public override readonly int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: OpenTK.Mathematics.Vector4i.GetHashCode*
- uid: OpenTK.Mathematics.Vector4i.Deconstruct(System.Int32@,System.Int32@,System.Int32@,System.Int32@)
  commentId: M:OpenTK.Mathematics.Vector4i.Deconstruct(System.Int32@,System.Int32@,System.Int32@,System.Int32@)
  id: Deconstruct(System.Int32@,System.Int32@,System.Int32@,System.Int32@)
  parent: OpenTK.Mathematics.Vector4i
  langs:
  - csharp
  - vb
  name: Deconstruct(out int, out int, out int, out int)
  nameWithType: Vector4i.Deconstruct(out int, out int, out int, out int)
  fullName: OpenTK.Mathematics.Vector4i.Deconstruct(out int, out int, out int, out int)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4i.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Deconstruct
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4i.cs
    startLine: 1771
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Deconstructs the vector into it's individual components.
  example: []
  syntax:
    content: >-
      [Pure]

      public readonly void Deconstruct(out int x, out int y, out int z, out int w)
    parameters:
    - id: x
      type: System.Int32
      description: The X component of the vector.
    - id: y
      type: System.Int32
      description: The Y component of the vector.
    - id: z
      type: System.Int32
      description: The Z component of the vector.
    - id: w
      type: System.Int32
      description: The W component of the vector.
    content.vb: >-
      <Pure>

      Public Sub Deconstruct(x As Integer, y As Integer, z As Integer, w As Integer)
  overload: OpenTK.Mathematics.Vector4i.Deconstruct*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4i.Deconstruct(Integer, Integer, Integer, Integer)
  fullName.vb: OpenTK.Mathematics.Vector4i.Deconstruct(Integer, Integer, Integer, Integer)
  name.vb: Deconstruct(Integer, Integer, Integer, Integer)
references:
- uid: OpenTK.Mathematics
  commentId: N:OpenTK.Mathematics
  href: OpenTK.html
  name: OpenTK.Mathematics
  nameWithType: OpenTK.Mathematics
  fullName: OpenTK.Mathematics
  spec.csharp:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Mathematics
    name: Mathematics
    href: OpenTK.Mathematics.html
  spec.vb:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Mathematics
    name: Mathematics
    href: OpenTK.Mathematics.html
- uid: System.IEquatable{OpenTK.Mathematics.Vector4i}
  commentId: T:System.IEquatable{OpenTK.Mathematics.Vector4i}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Vector4i>
  nameWithType: IEquatable<Vector4i>
  fullName: System.IEquatable<OpenTK.Mathematics.Vector4i>
  nameWithType.vb: IEquatable(Of Vector4i)
  fullName.vb: System.IEquatable(Of OpenTK.Mathematics.Vector4i)
  name.vb: IEquatable(Of Vector4i)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: OpenTK.Mathematics.Vector4i
    name: Vector4i
    href: OpenTK.Mathematics.Vector4i.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: OpenTK.Mathematics.Vector4i
    name: Vector4i
    href: OpenTK.Mathematics.Vector4i.html
  - name: )
- uid: System.IFormattable
  commentId: T:System.IFormattable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable
  name: IFormattable
  nameWithType: IFormattable
  fullName: System.IFormattable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: OpenTK.Mathematics.Vector4i
  commentId: T:OpenTK.Mathematics.Vector4i
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector4i.html
  name: Vector4i
  nameWithType: Vector4i
  fullName: OpenTK.Mathematics.Vector4i
- uid: OpenTK.Mathematics.Vector4i.#ctor*
  commentId: Overload:OpenTK.Mathematics.Vector4i.#ctor
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.#ctor(System.Int32)
  name: Vector4i
  nameWithType: Vector4i.Vector4i
  fullName: OpenTK.Mathematics.Vector4i.Vector4i
  nameWithType.vb: Vector4i.New
  fullName.vb: OpenTK.Mathematics.Vector4i.New
  name.vb: New
- uid: OpenTK.Mathematics.Vector2i
  commentId: T:OpenTK.Mathematics.Vector2i
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector2i.html
  name: Vector2i
  nameWithType: Vector2i
  fullName: OpenTK.Mathematics.Vector2i
- uid: OpenTK.Mathematics.Vector3i
  commentId: T:OpenTK.Mathematics.Vector3i
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector3i.html
  name: Vector3i
  nameWithType: Vector3i
  fullName: OpenTK.Mathematics.Vector3i
- uid: System.IndexOutOfRangeException
  commentId: T:System.IndexOutOfRangeException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.indexoutofrangeexception
  name: IndexOutOfRangeException
  nameWithType: IndexOutOfRangeException
  fullName: System.IndexOutOfRangeException
- uid: OpenTK.Mathematics.Vector4i.Item*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Item
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Item(System.Int32)
  name: this
  nameWithType: Vector4i.this
  fullName: OpenTK.Mathematics.Vector4i.this
  nameWithType.vb: Vector4i.this[]
  fullName.vb: OpenTK.Mathematics.Vector4i.this[]
  name.vb: this[]
- uid: OpenTK.Mathematics.Vector4i.ManhattanLength*
  commentId: Overload:OpenTK.Mathematics.Vector4i.ManhattanLength
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.ManhattanLength
  name: ManhattanLength
  nameWithType: Vector4i.ManhattanLength
  fullName: OpenTK.Mathematics.Vector4i.ManhattanLength
- uid: OpenTK.Mathematics.Vector4i.EuclideanLengthSquared*
  commentId: Overload:OpenTK.Mathematics.Vector4i.EuclideanLengthSquared
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.EuclideanLengthSquared
  name: EuclideanLengthSquared
  nameWithType: Vector4i.EuclideanLengthSquared
  fullName: OpenTK.Mathematics.Vector4i.EuclideanLengthSquared
- uid: OpenTK.Mathematics.Vector4i.EuclideanLength*
  commentId: Overload:OpenTK.Mathematics.Vector4i.EuclideanLength
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.EuclideanLength
  name: EuclideanLength
  nameWithType: Vector4i.EuclideanLength
  fullName: OpenTK.Mathematics.Vector4i.EuclideanLength
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: OpenTK.Mathematics.Vector4i.Abs*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Abs
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Abs
  name: Abs
  nameWithType: Vector4i.Abs
  fullName: OpenTK.Mathematics.Vector4i.Abs
- uid: OpenTK.Mathematics.Vector4i.Add*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Add
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Add(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  name: Add
  nameWithType: Vector4i.Add
  fullName: OpenTK.Mathematics.Vector4i.Add
- uid: OpenTK.Mathematics.Vector4i.Subtract*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Subtract
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Subtract(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  name: Subtract
  nameWithType: Vector4i.Subtract
  fullName: OpenTK.Mathematics.Vector4i.Subtract
- uid: OpenTK.Mathematics.Vector4i.Multiply*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Multiply
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Multiply(OpenTK.Mathematics.Vector4i,System.Int32)
  name: Multiply
  nameWithType: Vector4i.Multiply
  fullName: OpenTK.Mathematics.Vector4i.Multiply
- uid: OpenTK.Mathematics.Vector4i.Divide*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Divide
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Divide(OpenTK.Mathematics.Vector4i,System.Int32)
  name: Divide
  nameWithType: Vector4i.Divide
  fullName: OpenTK.Mathematics.Vector4i.Divide
- uid: OpenTK.Mathematics.Vector4i.ComponentMin*
  commentId: Overload:OpenTK.Mathematics.Vector4i.ComponentMin
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.ComponentMin(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  name: ComponentMin
  nameWithType: Vector4i.ComponentMin
  fullName: OpenTK.Mathematics.Vector4i.ComponentMin
- uid: OpenTK.Mathematics.Vector4i.ComponentMax*
  commentId: Overload:OpenTK.Mathematics.Vector4i.ComponentMax
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.ComponentMax(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  name: ComponentMax
  nameWithType: Vector4i.ComponentMax
  fullName: OpenTK.Mathematics.Vector4i.ComponentMax
- uid: OpenTK.Mathematics.Vector4i.Clamp*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Clamp
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Clamp(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  name: Clamp
  nameWithType: Vector4i.Clamp
  fullName: OpenTK.Mathematics.Vector4i.Clamp
- uid: OpenTK.Mathematics.Vector4i.Xy*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Xy
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Xy
  name: Xy
  nameWithType: Vector4i.Xy
  fullName: OpenTK.Mathematics.Vector4i.Xy
- uid: OpenTK.Mathematics.Vector4i.Xz*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Xz
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Xz
  name: Xz
  nameWithType: Vector4i.Xz
  fullName: OpenTK.Mathematics.Vector4i.Xz
- uid: OpenTK.Mathematics.Vector4i.Xw*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Xw
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Xw
  name: Xw
  nameWithType: Vector4i.Xw
  fullName: OpenTK.Mathematics.Vector4i.Xw
- uid: OpenTK.Mathematics.Vector4i.Yx*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Yx
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Yx
  name: Yx
  nameWithType: Vector4i.Yx
  fullName: OpenTK.Mathematics.Vector4i.Yx
- uid: OpenTK.Mathematics.Vector4i.Yz*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Yz
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Yz
  name: Yz
  nameWithType: Vector4i.Yz
  fullName: OpenTK.Mathematics.Vector4i.Yz
- uid: OpenTK.Mathematics.Vector4i.Yw*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Yw
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Yw
  name: Yw
  nameWithType: Vector4i.Yw
  fullName: OpenTK.Mathematics.Vector4i.Yw
- uid: OpenTK.Mathematics.Vector4i.Zx*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Zx
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Zx
  name: Zx
  nameWithType: Vector4i.Zx
  fullName: OpenTK.Mathematics.Vector4i.Zx
- uid: OpenTK.Mathematics.Vector4i.Zy*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Zy
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Zy
  name: Zy
  nameWithType: Vector4i.Zy
  fullName: OpenTK.Mathematics.Vector4i.Zy
- uid: OpenTK.Mathematics.Vector4i.Zw*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Zw
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Zw
  name: Zw
  nameWithType: Vector4i.Zw
  fullName: OpenTK.Mathematics.Vector4i.Zw
- uid: OpenTK.Mathematics.Vector4i.Wx*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Wx
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Wx
  name: Wx
  nameWithType: Vector4i.Wx
  fullName: OpenTK.Mathematics.Vector4i.Wx
- uid: OpenTK.Mathematics.Vector4i.Wy*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Wy
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Wy
  name: Wy
  nameWithType: Vector4i.Wy
  fullName: OpenTK.Mathematics.Vector4i.Wy
- uid: OpenTK.Mathematics.Vector4i.Wz*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Wz
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Wz
  name: Wz
  nameWithType: Vector4i.Wz
  fullName: OpenTK.Mathematics.Vector4i.Wz
- uid: OpenTK.Mathematics.Vector4i.Xyz*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Xyz
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Xyz
  name: Xyz
  nameWithType: Vector4i.Xyz
  fullName: OpenTK.Mathematics.Vector4i.Xyz
- uid: OpenTK.Mathematics.Vector4i.Xyw*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Xyw
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Xyw
  name: Xyw
  nameWithType: Vector4i.Xyw
  fullName: OpenTK.Mathematics.Vector4i.Xyw
- uid: OpenTK.Mathematics.Vector4i.Xzy*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Xzy
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Xzy
  name: Xzy
  nameWithType: Vector4i.Xzy
  fullName: OpenTK.Mathematics.Vector4i.Xzy
- uid: OpenTK.Mathematics.Vector4i.Xzw*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Xzw
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Xzw
  name: Xzw
  nameWithType: Vector4i.Xzw
  fullName: OpenTK.Mathematics.Vector4i.Xzw
- uid: OpenTK.Mathematics.Vector4i.Xwy*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Xwy
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Xwy
  name: Xwy
  nameWithType: Vector4i.Xwy
  fullName: OpenTK.Mathematics.Vector4i.Xwy
- uid: OpenTK.Mathematics.Vector4i.Xwz*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Xwz
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Xwz
  name: Xwz
  nameWithType: Vector4i.Xwz
  fullName: OpenTK.Mathematics.Vector4i.Xwz
- uid: OpenTK.Mathematics.Vector4i.Yxz*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Yxz
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Yxz
  name: Yxz
  nameWithType: Vector4i.Yxz
  fullName: OpenTK.Mathematics.Vector4i.Yxz
- uid: OpenTK.Mathematics.Vector4i.Yxw*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Yxw
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Yxw
  name: Yxw
  nameWithType: Vector4i.Yxw
  fullName: OpenTK.Mathematics.Vector4i.Yxw
- uid: OpenTK.Mathematics.Vector4i.Yzx*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Yzx
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Yzx
  name: Yzx
  nameWithType: Vector4i.Yzx
  fullName: OpenTK.Mathematics.Vector4i.Yzx
- uid: OpenTK.Mathematics.Vector4i.Yzw*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Yzw
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Yzw
  name: Yzw
  nameWithType: Vector4i.Yzw
  fullName: OpenTK.Mathematics.Vector4i.Yzw
- uid: OpenTK.Mathematics.Vector4i.Ywx*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Ywx
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Ywx
  name: Ywx
  nameWithType: Vector4i.Ywx
  fullName: OpenTK.Mathematics.Vector4i.Ywx
- uid: OpenTK.Mathematics.Vector4i.Ywz*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Ywz
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Ywz
  name: Ywz
  nameWithType: Vector4i.Ywz
  fullName: OpenTK.Mathematics.Vector4i.Ywz
- uid: OpenTK.Mathematics.Vector4i.Zxy*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Zxy
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Zxy
  name: Zxy
  nameWithType: Vector4i.Zxy
  fullName: OpenTK.Mathematics.Vector4i.Zxy
- uid: OpenTK.Mathematics.Vector4i.Zxw*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Zxw
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Zxw
  name: Zxw
  nameWithType: Vector4i.Zxw
  fullName: OpenTK.Mathematics.Vector4i.Zxw
- uid: OpenTK.Mathematics.Vector4i.Zyx*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Zyx
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Zyx
  name: Zyx
  nameWithType: Vector4i.Zyx
  fullName: OpenTK.Mathematics.Vector4i.Zyx
- uid: OpenTK.Mathematics.Vector4i.Zyw*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Zyw
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Zyw
  name: Zyw
  nameWithType: Vector4i.Zyw
  fullName: OpenTK.Mathematics.Vector4i.Zyw
- uid: OpenTK.Mathematics.Vector4i.Zwx*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Zwx
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Zwx
  name: Zwx
  nameWithType: Vector4i.Zwx
  fullName: OpenTK.Mathematics.Vector4i.Zwx
- uid: OpenTK.Mathematics.Vector4i.Zwy*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Zwy
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Zwy
  name: Zwy
  nameWithType: Vector4i.Zwy
  fullName: OpenTK.Mathematics.Vector4i.Zwy
- uid: OpenTK.Mathematics.Vector4i.Wxy*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Wxy
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Wxy
  name: Wxy
  nameWithType: Vector4i.Wxy
  fullName: OpenTK.Mathematics.Vector4i.Wxy
- uid: OpenTK.Mathematics.Vector4i.Wxz*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Wxz
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Wxz
  name: Wxz
  nameWithType: Vector4i.Wxz
  fullName: OpenTK.Mathematics.Vector4i.Wxz
- uid: OpenTK.Mathematics.Vector4i.Wyx*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Wyx
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Wyx
  name: Wyx
  nameWithType: Vector4i.Wyx
  fullName: OpenTK.Mathematics.Vector4i.Wyx
- uid: OpenTK.Mathematics.Vector4i.Wyz*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Wyz
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Wyz
  name: Wyz
  nameWithType: Vector4i.Wyz
  fullName: OpenTK.Mathematics.Vector4i.Wyz
- uid: OpenTK.Mathematics.Vector4i.Wzx*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Wzx
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Wzx
  name: Wzx
  nameWithType: Vector4i.Wzx
  fullName: OpenTK.Mathematics.Vector4i.Wzx
- uid: OpenTK.Mathematics.Vector4i.Wzy*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Wzy
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Wzy
  name: Wzy
  nameWithType: Vector4i.Wzy
  fullName: OpenTK.Mathematics.Vector4i.Wzy
- uid: OpenTK.Mathematics.Vector4i.Xywz*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Xywz
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Xywz
  name: Xywz
  nameWithType: Vector4i.Xywz
  fullName: OpenTK.Mathematics.Vector4i.Xywz
- uid: OpenTK.Mathematics.Vector4i.Xzyw*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Xzyw
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Xzyw
  name: Xzyw
  nameWithType: Vector4i.Xzyw
  fullName: OpenTK.Mathematics.Vector4i.Xzyw
- uid: OpenTK.Mathematics.Vector4i.Xzwy*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Xzwy
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Xzwy
  name: Xzwy
  nameWithType: Vector4i.Xzwy
  fullName: OpenTK.Mathematics.Vector4i.Xzwy
- uid: OpenTK.Mathematics.Vector4i.Xwyz*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Xwyz
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Xwyz
  name: Xwyz
  nameWithType: Vector4i.Xwyz
  fullName: OpenTK.Mathematics.Vector4i.Xwyz
- uid: OpenTK.Mathematics.Vector4i.Xwzy*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Xwzy
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Xwzy
  name: Xwzy
  nameWithType: Vector4i.Xwzy
  fullName: OpenTK.Mathematics.Vector4i.Xwzy
- uid: OpenTK.Mathematics.Vector4i.Yxzw*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Yxzw
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Yxzw
  name: Yxzw
  nameWithType: Vector4i.Yxzw
  fullName: OpenTK.Mathematics.Vector4i.Yxzw
- uid: OpenTK.Mathematics.Vector4i.Yxwz*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Yxwz
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Yxwz
  name: Yxwz
  nameWithType: Vector4i.Yxwz
  fullName: OpenTK.Mathematics.Vector4i.Yxwz
- uid: OpenTK.Mathematics.Vector4i.Yyzw*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Yyzw
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Yyzw
  name: Yyzw
  nameWithType: Vector4i.Yyzw
  fullName: OpenTK.Mathematics.Vector4i.Yyzw
- uid: OpenTK.Mathematics.Vector4i.Yywz*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Yywz
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Yywz
  name: Yywz
  nameWithType: Vector4i.Yywz
  fullName: OpenTK.Mathematics.Vector4i.Yywz
- uid: OpenTK.Mathematics.Vector4i.Yzxw*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Yzxw
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Yzxw
  name: Yzxw
  nameWithType: Vector4i.Yzxw
  fullName: OpenTK.Mathematics.Vector4i.Yzxw
- uid: OpenTK.Mathematics.Vector4i.Yzwx*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Yzwx
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Yzwx
  name: Yzwx
  nameWithType: Vector4i.Yzwx
  fullName: OpenTK.Mathematics.Vector4i.Yzwx
- uid: OpenTK.Mathematics.Vector4i.Ywxz*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Ywxz
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Ywxz
  name: Ywxz
  nameWithType: Vector4i.Ywxz
  fullName: OpenTK.Mathematics.Vector4i.Ywxz
- uid: OpenTK.Mathematics.Vector4i.Ywzx*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Ywzx
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Ywzx
  name: Ywzx
  nameWithType: Vector4i.Ywzx
  fullName: OpenTK.Mathematics.Vector4i.Ywzx
- uid: OpenTK.Mathematics.Vector4i.Zxyw*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Zxyw
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Zxyw
  name: Zxyw
  nameWithType: Vector4i.Zxyw
  fullName: OpenTK.Mathematics.Vector4i.Zxyw
- uid: OpenTK.Mathematics.Vector4i.Zxwy*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Zxwy
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Zxwy
  name: Zxwy
  nameWithType: Vector4i.Zxwy
  fullName: OpenTK.Mathematics.Vector4i.Zxwy
- uid: OpenTK.Mathematics.Vector4i.Zyxw*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Zyxw
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Zyxw
  name: Zyxw
  nameWithType: Vector4i.Zyxw
  fullName: OpenTK.Mathematics.Vector4i.Zyxw
- uid: OpenTK.Mathematics.Vector4i.Zywx*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Zywx
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Zywx
  name: Zywx
  nameWithType: Vector4i.Zywx
  fullName: OpenTK.Mathematics.Vector4i.Zywx
- uid: OpenTK.Mathematics.Vector4i.Zwxy*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Zwxy
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Zwxy
  name: Zwxy
  nameWithType: Vector4i.Zwxy
  fullName: OpenTK.Mathematics.Vector4i.Zwxy
- uid: OpenTK.Mathematics.Vector4i.Zwyx*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Zwyx
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Zwyx
  name: Zwyx
  nameWithType: Vector4i.Zwyx
  fullName: OpenTK.Mathematics.Vector4i.Zwyx
- uid: OpenTK.Mathematics.Vector4i.Zwzy*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Zwzy
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Zwzy
  name: Zwzy
  nameWithType: Vector4i.Zwzy
  fullName: OpenTK.Mathematics.Vector4i.Zwzy
- uid: OpenTK.Mathematics.Vector4i.Wxyz*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Wxyz
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Wxyz
  name: Wxyz
  nameWithType: Vector4i.Wxyz
  fullName: OpenTK.Mathematics.Vector4i.Wxyz
- uid: OpenTK.Mathematics.Vector4i.Wxzy*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Wxzy
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Wxzy
  name: Wxzy
  nameWithType: Vector4i.Wxzy
  fullName: OpenTK.Mathematics.Vector4i.Wxzy
- uid: OpenTK.Mathematics.Vector4i.Wyxz*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Wyxz
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Wyxz
  name: Wyxz
  nameWithType: Vector4i.Wyxz
  fullName: OpenTK.Mathematics.Vector4i.Wyxz
- uid: OpenTK.Mathematics.Vector4i.Wyzx*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Wyzx
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Wyzx
  name: Wyzx
  nameWithType: Vector4i.Wyzx
  fullName: OpenTK.Mathematics.Vector4i.Wyzx
- uid: OpenTK.Mathematics.Vector4i.Wzxy*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Wzxy
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Wzxy
  name: Wzxy
  nameWithType: Vector4i.Wzxy
  fullName: OpenTK.Mathematics.Vector4i.Wzxy
- uid: OpenTK.Mathematics.Vector4i.Wzyx*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Wzyx
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Wzyx
  name: Wzyx
  nameWithType: Vector4i.Wzyx
  fullName: OpenTK.Mathematics.Vector4i.Wzyx
- uid: OpenTK.Mathematics.Vector4i.Wzyw*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Wzyw
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Wzyw
  name: Wzyw
  nameWithType: Vector4i.Wzyw
  fullName: OpenTK.Mathematics.Vector4i.Wzyw
- uid: OpenTK.Mathematics.Vector4
  commentId: T:OpenTK.Mathematics.Vector4
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector4.html
  name: Vector4
  nameWithType: Vector4
  fullName: OpenTK.Mathematics.Vector4
- uid: OpenTK.Mathematics.Vector4i.ToVector4*
  commentId: Overload:OpenTK.Mathematics.Vector4i.ToVector4
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.ToVector4
  name: ToVector4
  nameWithType: Vector4i.ToVector4
  fullName: OpenTK.Mathematics.Vector4i.ToVector4
- uid: OpenTK.Mathematics.Vector4i.op_Addition*
  commentId: Overload:OpenTK.Mathematics.Vector4i.op_Addition
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.op_Addition(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  name: operator +
  nameWithType: Vector4i.operator +
  fullName: OpenTK.Mathematics.Vector4i.operator +
  nameWithType.vb: Vector4i.+
  fullName.vb: OpenTK.Mathematics.Vector4i.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector4i.op_Addition*
    name: +
    href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.op_Addition(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
- uid: OpenTK.Mathematics.Vector4i.op_Subtraction*
  commentId: Overload:OpenTK.Mathematics.Vector4i.op_Subtraction
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.op_Subtraction(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  name: operator -
  nameWithType: Vector4i.operator -
  fullName: OpenTK.Mathematics.Vector4i.operator -
  nameWithType.vb: Vector4i.-
  fullName.vb: OpenTK.Mathematics.Vector4i.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector4i.op_Subtraction*
    name: '-'
    href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.op_Subtraction(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
- uid: OpenTK.Mathematics.Vector4i.op_UnaryNegation*
  commentId: Overload:OpenTK.Mathematics.Vector4i.op_UnaryNegation
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.op_UnaryNegation(OpenTK.Mathematics.Vector4i)
  name: operator -
  nameWithType: Vector4i.operator -
  fullName: OpenTK.Mathematics.Vector4i.operator -
  nameWithType.vb: Vector4i.-
  fullName.vb: OpenTK.Mathematics.Vector4i.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector4i.op_UnaryNegation*
    name: '-'
    href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.op_UnaryNegation(OpenTK.Mathematics.Vector4i)
- uid: OpenTK.Mathematics.Vector4i.op_Multiply*
  commentId: Overload:OpenTK.Mathematics.Vector4i.op_Multiply
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.op_Multiply(OpenTK.Mathematics.Vector4i,System.Int32)
  name: operator *
  nameWithType: Vector4i.operator *
  fullName: OpenTK.Mathematics.Vector4i.operator *
  nameWithType.vb: Vector4i.*
  fullName.vb: OpenTK.Mathematics.Vector4i.*
  name.vb: '*'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector4i.op_Multiply*
    name: '*'
    href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.op_Multiply(OpenTK.Mathematics.Vector4i,System.Int32)
- uid: OpenTK.Mathematics.Vector4i.op_Division*
  commentId: Overload:OpenTK.Mathematics.Vector4i.op_Division
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.op_Division(OpenTK.Mathematics.Vector4i,System.Int32)
  name: operator /
  nameWithType: Vector4i.operator /
  fullName: OpenTK.Mathematics.Vector4i.operator /
  nameWithType.vb: Vector4i./
  fullName.vb: OpenTK.Mathematics.Vector4i./
  name.vb: /
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector4i.op_Division*
    name: /
    href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.op_Division(OpenTK.Mathematics.Vector4i,System.Int32)
- uid: OpenTK.Mathematics.Vector4i.op_Equality*
  commentId: Overload:OpenTK.Mathematics.Vector4i.op_Equality
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.op_Equality(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  name: operator ==
  nameWithType: Vector4i.operator ==
  fullName: OpenTK.Mathematics.Vector4i.operator ==
  nameWithType.vb: Vector4i.=
  fullName.vb: OpenTK.Mathematics.Vector4i.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector4i.op_Equality*
    name: ==
    href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.op_Equality(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: OpenTK.Mathematics.Vector4i.op_Inequality*
  commentId: Overload:OpenTK.Mathematics.Vector4i.op_Inequality
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.op_Inequality(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
  name: operator !=
  nameWithType: Vector4i.operator !=
  fullName: OpenTK.Mathematics.Vector4i.operator !=
  nameWithType.vb: Vector4i.<>
  fullName.vb: OpenTK.Mathematics.Vector4i.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector4i.op_Inequality*
    name: '!='
    href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.op_Inequality(OpenTK.Mathematics.Vector4i,OpenTK.Mathematics.Vector4i)
- uid: OpenTK.Mathematics.Vector4i.op_Explicit*
  commentId: Overload:OpenTK.Mathematics.Vector4i.op_Explicit
  name: explicit operator
  nameWithType: Vector4i.explicit operator
  fullName: OpenTK.Mathematics.Vector4i.explicit operator
  nameWithType.vb: Vector4i.CType
  fullName.vb: OpenTK.Mathematics.Vector4i.CType
  name.vb: CType
  spec.csharp:
  - name: explicit
  - name: " "
  - name: operator
- uid: System.Int32*
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int*
  nameWithType: int*
  fullName: int*
  nameWithType.vb: Integer*
  fullName.vb: Integer*
  name.vb: Integer*
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '*'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '*'
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.intptr
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: OpenTK.Mathematics.Vector4i.op_Implicit*
  commentId: Overload:OpenTK.Mathematics.Vector4i.op_Implicit
  name: implicit operator
  nameWithType: Vector4i.implicit operator
  fullName: OpenTK.Mathematics.Vector4i.implicit operator
  nameWithType.vb: Vector4i.CType
  fullName.vb: OpenTK.Mathematics.Vector4i.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: OpenTK.Mathematics.Vector4d
  commentId: T:OpenTK.Mathematics.Vector4d
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector4d.html
  name: Vector4d
  nameWithType: Vector4d
  fullName: OpenTK.Mathematics.Vector4d
- uid: OpenTK.Mathematics.Vector4h
  commentId: T:OpenTK.Mathematics.Vector4h
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector4h.html
  name: Vector4h
  nameWithType: Vector4h
  fullName: OpenTK.Mathematics.Vector4h
- uid: System.ValueTuple{System.Int32,System.Int32,System.Int32,System.Int32}
  commentId: T:System.ValueTuple{System.Int32,System.Int32,System.Int32,System.Int32}
  parent: System
  definition: System.ValueTuple`4
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: (int X, int Y, int Z, int W)
  nameWithType: (int X, int Y, int Z, int W)
  fullName: (int X, int Y, int Z, int W)
  nameWithType.vb: (X As Integer, Y As Integer, Z As Integer, W As Integer)
  fullName.vb: (X As Integer, Y As Integer, Z As Integer, W As Integer)
  name.vb: (X As Integer, Y As Integer, Z As Integer, W As Integer)
  spec.csharp:
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32,System.Int32}.X
    name: X
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32,system.int32-.x
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32,System.Int32}.Y
    name: Y
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32,system.int32-.y
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32,System.Int32}.Z
    name: Z
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32,system.int32-.z
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32,System.Int32}.W
    name: W
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32,system.int32-.w
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32,System.Int32}.X
    name: X
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32,system.int32-.x
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32,System.Int32}.Y
    name: Y
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32,system.int32-.y
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32,System.Int32}.Z
    name: Z
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32,system.int32-.z
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32,System.Int32}.W
    name: W
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32,system.int32-.w
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.ValueTuple`4
  commentId: T:System.ValueTuple`4
  name: (T1, T2, T3, T4)
  nameWithType: (T1, T2, T3, T4)
  fullName: (T1, T2, T3, T4)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: OpenTK.Mathematics.Vector4i.ToString*
  commentId: Overload:OpenTK.Mathematics.Vector4i.ToString
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.ToString
  name: ToString
  nameWithType: Vector4i.ToString
  fullName: OpenTK.Mathematics.Vector4i.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  name: ToString(string, IFormatProvider)
  nameWithType: IFormattable.ToString(string, IFormatProvider)
  fullName: System.IFormattable.ToString(string, System.IFormatProvider)
  nameWithType.vb: IFormattable.ToString(String, IFormatProvider)
  fullName.vb: System.IFormattable.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: OpenTK.Mathematics.Vector4i.Equals*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Equals
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Equals(System.Object)
  name: Equals
  nameWithType: Vector4i.Equals
  fullName: OpenTK.Mathematics.Vector4i.Equals
- uid: System.IEquatable{OpenTK.Mathematics.Vector4i}.Equals(OpenTK.Mathematics.Vector4i)
  commentId: M:System.IEquatable{OpenTK.Mathematics.Vector4i}.Equals(OpenTK.Mathematics.Vector4i)
  parent: System.IEquatable{OpenTK.Mathematics.Vector4i}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-opentk.mathematics.vector4i-.equals#system-iequatable((opentk-mathematics-vector4i))-equals(opentk-mathematics-vector4i)
  name: Equals(Vector4i)
  nameWithType: IEquatable<Vector4i>.Equals(Vector4i)
  fullName: System.IEquatable<OpenTK.Mathematics.Vector4i>.Equals(OpenTK.Mathematics.Vector4i)
  nameWithType.vb: IEquatable(Of Vector4i).Equals(Vector4i)
  fullName.vb: System.IEquatable(Of OpenTK.Mathematics.Vector4i).Equals(OpenTK.Mathematics.Vector4i)
  spec.csharp:
  - uid: System.IEquatable{OpenTK.Mathematics.Vector4i}.Equals(OpenTK.Mathematics.Vector4i)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-opentk.mathematics.vector4i-.equals#system-iequatable((opentk-mathematics-vector4i))-equals(opentk-mathematics-vector4i)
  - name: (
  - uid: OpenTK.Mathematics.Vector4i
    name: Vector4i
    href: OpenTK.Mathematics.Vector4i.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{OpenTK.Mathematics.Vector4i}.Equals(OpenTK.Mathematics.Vector4i)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-opentk.mathematics.vector4i-.equals#system-iequatable((opentk-mathematics-vector4i))-equals(opentk-mathematics-vector4i)
  - name: (
  - uid: OpenTK.Mathematics.Vector4i
    name: Vector4i
    href: OpenTK.Mathematics.Vector4i.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: OpenTK.Mathematics.Vector4i.GetHashCode*
  commentId: Overload:OpenTK.Mathematics.Vector4i.GetHashCode
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.GetHashCode
  name: GetHashCode
  nameWithType: Vector4i.GetHashCode
  fullName: OpenTK.Mathematics.Vector4i.GetHashCode
- uid: OpenTK.Mathematics.Vector4i.Deconstruct*
  commentId: Overload:OpenTK.Mathematics.Vector4i.Deconstruct
  href: OpenTK.Mathematics.Vector4i.html#OpenTK.Mathematics.Vector4i.Deconstruct(System.Int32@,System.Int32@,System.Int32@,System.Int32@)
  name: Deconstruct
  nameWithType: Vector4i.Deconstruct
  fullName: OpenTK.Mathematics.Vector4i.Deconstruct
