### YamlMime:ManagedReference
items:
- uid: OpenTK.Graphics.Glx.Glx.ARB
  commentId: T:OpenTK.Graphics.Glx.Glx.ARB
  id: Glx.ARB
  parent: OpenTK.Graphics.Glx
  children:
  - OpenTK.Graphics.Glx.Glx.ARB.CreateContextAttribsARB(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.GLXContext,System.Boolean,System.Int32*)
  - OpenTK.Graphics.Glx.Glx.ARB.CreateContextAttribsARB(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.GLXContext,System.Boolean,System.Int32@)
  - OpenTK.Graphics.Glx.Glx.ARB.CreateContextAttribsARB(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.GLXContext,System.Boolean,System.Int32[])
  - OpenTK.Graphics.Glx.Glx.ARB.CreateContextAttribsARB(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.GLXContext,System.Boolean,System.ReadOnlySpan{System.Int32})
  - OpenTK.Graphics.Glx.Glx.ARB.GetProcAddressARB(System.Byte*)
  - OpenTK.Graphics.Glx.Glx.ARB.GetProcAddressARB(System.Byte@)
  - OpenTK.Graphics.Glx.Glx.ARB.GetProcAddressARB(System.Byte[])
  - OpenTK.Graphics.Glx.Glx.ARB.GetProcAddressARB(System.ReadOnlySpan{System.Byte})
  langs:
  - csharp
  - vb
  name: Glx.ARB
  nameWithType: Glx.ARB
  fullName: OpenTK.Graphics.Glx.Glx.ARB
  type: Class
  source:
    id: ARB
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 573
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: ARB extensions.
  example: []
  syntax:
    content: public static class Glx.ARB
    content.vb: Public Module Glx.ARB
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: OpenTK.Graphics.Glx.Glx.ARB.CreateContextAttribsARB(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.GLXContext,System.Boolean,System.Int32*)
  commentId: M:OpenTK.Graphics.Glx.Glx.ARB.CreateContextAttribsARB(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.GLXContext,System.Boolean,System.Int32*)
  id: CreateContextAttribsARB(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.GLXContext,System.Boolean,System.Int32*)
  parent: OpenTK.Graphics.Glx.Glx.ARB
  langs:
  - csharp
  - vb
  name: CreateContextAttribsARB(DisplayPtr, GLXFBConfig, GLXContext, bool, int*)
  nameWithType: Glx.ARB.CreateContextAttribsARB(DisplayPtr, GLXFBConfig, GLXContext, bool, int*)
  fullName: OpenTK.Graphics.Glx.Glx.ARB.CreateContextAttribsARB(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, OpenTK.Graphics.Glx.GLXContext, bool, int*)
  type: Method
  source:
    id: CreateContextAttribsARB
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 163
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: GLX_ARB_create_context]</b>

    <b>[entry point: <code>glXCreateContextAttribsARB</code>]</b>

    <br />
  example: []
  syntax:
    content: public static GLXContext CreateContextAttribsARB(DisplayPtr dpy, GLXFBConfig config, GLXContext share_context, bool direct, int* attrib_list)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: config
      type: OpenTK.Graphics.Glx.GLXFBConfig
    - id: share_context
      type: OpenTK.Graphics.Glx.GLXContext
    - id: direct
      type: System.Boolean
    - id: attrib_list
      type: System.Int32*
    return:
      type: OpenTK.Graphics.Glx.GLXContext
    content.vb: Public Shared Function CreateContextAttribsARB(dpy As DisplayPtr, config As GLXFBConfig, share_context As GLXContext, direct As Boolean, attrib_list As Integer*) As GLXContext
  overload: OpenTK.Graphics.Glx.Glx.ARB.CreateContextAttribsARB*
  nameWithType.vb: Glx.ARB.CreateContextAttribsARB(DisplayPtr, GLXFBConfig, GLXContext, Boolean, Integer*)
  fullName.vb: OpenTK.Graphics.Glx.Glx.ARB.CreateContextAttribsARB(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, OpenTK.Graphics.Glx.GLXContext, Boolean, Integer*)
  name.vb: CreateContextAttribsARB(DisplayPtr, GLXFBConfig, GLXContext, Boolean, Integer*)
- uid: OpenTK.Graphics.Glx.Glx.ARB.GetProcAddressARB(System.Byte*)
  commentId: M:OpenTK.Graphics.Glx.Glx.ARB.GetProcAddressARB(System.Byte*)
  id: GetProcAddressARB(System.Byte*)
  parent: OpenTK.Graphics.Glx.Glx.ARB
  langs:
  - csharp
  - vb
  name: GetProcAddressARB(byte*)
  nameWithType: Glx.ARB.GetProcAddressARB(byte*)
  fullName: OpenTK.Graphics.Glx.Glx.ARB.GetProcAddressARB(byte*)
  type: Method
  source:
    id: GetProcAddressARB
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 166
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: GLX_ARB_get_proc_address]</b>

    <b>[entry point: <code>glXGetProcAddressARB</code>]</b>

    <br />
  example: []
  syntax:
    content: public static nint GetProcAddressARB(byte* procName)
    parameters:
    - id: procName
      type: System.Byte*
    return:
      type: System.IntPtr
    content.vb: Public Shared Function GetProcAddressARB(procName As Byte*) As IntPtr
  overload: OpenTK.Graphics.Glx.Glx.ARB.GetProcAddressARB*
  nameWithType.vb: Glx.ARB.GetProcAddressARB(Byte*)
  fullName.vb: OpenTK.Graphics.Glx.Glx.ARB.GetProcAddressARB(Byte*)
  name.vb: GetProcAddressARB(Byte*)
- uid: OpenTK.Graphics.Glx.Glx.ARB.CreateContextAttribsARB(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.GLXContext,System.Boolean,System.ReadOnlySpan{System.Int32})
  commentId: M:OpenTK.Graphics.Glx.Glx.ARB.CreateContextAttribsARB(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.GLXContext,System.Boolean,System.ReadOnlySpan{System.Int32})
  id: CreateContextAttribsARB(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.GLXContext,System.Boolean,System.ReadOnlySpan{System.Int32})
  parent: OpenTK.Graphics.Glx.Glx.ARB
  langs:
  - csharp
  - vb
  name: CreateContextAttribsARB(DisplayPtr, GLXFBConfig, GLXContext, bool, ReadOnlySpan<int>)
  nameWithType: Glx.ARB.CreateContextAttribsARB(DisplayPtr, GLXFBConfig, GLXContext, bool, ReadOnlySpan<int>)
  fullName: OpenTK.Graphics.Glx.Glx.ARB.CreateContextAttribsARB(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, OpenTK.Graphics.Glx.GLXContext, bool, System.ReadOnlySpan<int>)
  type: Method
  source:
    id: CreateContextAttribsARB
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 576
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: GLX_ARB_create_context]</b>

    <b>[entry point: <code>glXCreateContextAttribsARB</code>]</b>

    <br />
  example: []
  syntax:
    content: public static GLXContext CreateContextAttribsARB(DisplayPtr dpy, GLXFBConfig config, GLXContext share_context, bool direct, ReadOnlySpan<int> attrib_list)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: config
      type: OpenTK.Graphics.Glx.GLXFBConfig
    - id: share_context
      type: OpenTK.Graphics.Glx.GLXContext
    - id: direct
      type: System.Boolean
    - id: attrib_list
      type: System.ReadOnlySpan{System.Int32}
    return:
      type: OpenTK.Graphics.Glx.GLXContext
    content.vb: Public Shared Function CreateContextAttribsARB(dpy As DisplayPtr, config As GLXFBConfig, share_context As GLXContext, direct As Boolean, attrib_list As ReadOnlySpan(Of Integer)) As GLXContext
  overload: OpenTK.Graphics.Glx.Glx.ARB.CreateContextAttribsARB*
  nameWithType.vb: Glx.ARB.CreateContextAttribsARB(DisplayPtr, GLXFBConfig, GLXContext, Boolean, ReadOnlySpan(Of Integer))
  fullName.vb: OpenTK.Graphics.Glx.Glx.ARB.CreateContextAttribsARB(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, OpenTK.Graphics.Glx.GLXContext, Boolean, System.ReadOnlySpan(Of Integer))
  name.vb: CreateContextAttribsARB(DisplayPtr, GLXFBConfig, GLXContext, Boolean, ReadOnlySpan(Of Integer))
- uid: OpenTK.Graphics.Glx.Glx.ARB.CreateContextAttribsARB(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.GLXContext,System.Boolean,System.Int32[])
  commentId: M:OpenTK.Graphics.Glx.Glx.ARB.CreateContextAttribsARB(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.GLXContext,System.Boolean,System.Int32[])
  id: CreateContextAttribsARB(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.GLXContext,System.Boolean,System.Int32[])
  parent: OpenTK.Graphics.Glx.Glx.ARB
  langs:
  - csharp
  - vb
  name: CreateContextAttribsARB(DisplayPtr, GLXFBConfig, GLXContext, bool, int[])
  nameWithType: Glx.ARB.CreateContextAttribsARB(DisplayPtr, GLXFBConfig, GLXContext, bool, int[])
  fullName: OpenTK.Graphics.Glx.Glx.ARB.CreateContextAttribsARB(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, OpenTK.Graphics.Glx.GLXContext, bool, int[])
  type: Method
  source:
    id: CreateContextAttribsARB
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 586
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: GLX_ARB_create_context]</b>

    <b>[entry point: <code>glXCreateContextAttribsARB</code>]</b>

    <br />
  example: []
  syntax:
    content: public static GLXContext CreateContextAttribsARB(DisplayPtr dpy, GLXFBConfig config, GLXContext share_context, bool direct, int[] attrib_list)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: config
      type: OpenTK.Graphics.Glx.GLXFBConfig
    - id: share_context
      type: OpenTK.Graphics.Glx.GLXContext
    - id: direct
      type: System.Boolean
    - id: attrib_list
      type: System.Int32[]
    return:
      type: OpenTK.Graphics.Glx.GLXContext
    content.vb: Public Shared Function CreateContextAttribsARB(dpy As DisplayPtr, config As GLXFBConfig, share_context As GLXContext, direct As Boolean, attrib_list As Integer()) As GLXContext
  overload: OpenTK.Graphics.Glx.Glx.ARB.CreateContextAttribsARB*
  nameWithType.vb: Glx.ARB.CreateContextAttribsARB(DisplayPtr, GLXFBConfig, GLXContext, Boolean, Integer())
  fullName.vb: OpenTK.Graphics.Glx.Glx.ARB.CreateContextAttribsARB(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, OpenTK.Graphics.Glx.GLXContext, Boolean, Integer())
  name.vb: CreateContextAttribsARB(DisplayPtr, GLXFBConfig, GLXContext, Boolean, Integer())
- uid: OpenTK.Graphics.Glx.Glx.ARB.CreateContextAttribsARB(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.GLXContext,System.Boolean,System.Int32@)
  commentId: M:OpenTK.Graphics.Glx.Glx.ARB.CreateContextAttribsARB(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.GLXContext,System.Boolean,System.Int32@)
  id: CreateContextAttribsARB(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.GLXContext,System.Boolean,System.Int32@)
  parent: OpenTK.Graphics.Glx.Glx.ARB
  langs:
  - csharp
  - vb
  name: CreateContextAttribsARB(DisplayPtr, GLXFBConfig, GLXContext, bool, in int)
  nameWithType: Glx.ARB.CreateContextAttribsARB(DisplayPtr, GLXFBConfig, GLXContext, bool, in int)
  fullName: OpenTK.Graphics.Glx.Glx.ARB.CreateContextAttribsARB(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, OpenTK.Graphics.Glx.GLXContext, bool, in int)
  type: Method
  source:
    id: CreateContextAttribsARB
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 596
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: GLX_ARB_create_context]</b>

    <b>[entry point: <code>glXCreateContextAttribsARB</code>]</b>

    <br />
  example: []
  syntax:
    content: public static GLXContext CreateContextAttribsARB(DisplayPtr dpy, GLXFBConfig config, GLXContext share_context, bool direct, in int attrib_list)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: config
      type: OpenTK.Graphics.Glx.GLXFBConfig
    - id: share_context
      type: OpenTK.Graphics.Glx.GLXContext
    - id: direct
      type: System.Boolean
    - id: attrib_list
      type: System.Int32
    return:
      type: OpenTK.Graphics.Glx.GLXContext
    content.vb: Public Shared Function CreateContextAttribsARB(dpy As DisplayPtr, config As GLXFBConfig, share_context As GLXContext, direct As Boolean, attrib_list As Integer) As GLXContext
  overload: OpenTK.Graphics.Glx.Glx.ARB.CreateContextAttribsARB*
  nameWithType.vb: Glx.ARB.CreateContextAttribsARB(DisplayPtr, GLXFBConfig, GLXContext, Boolean, Integer)
  fullName.vb: OpenTK.Graphics.Glx.Glx.ARB.CreateContextAttribsARB(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, OpenTK.Graphics.Glx.GLXContext, Boolean, Integer)
  name.vb: CreateContextAttribsARB(DisplayPtr, GLXFBConfig, GLXContext, Boolean, Integer)
- uid: OpenTK.Graphics.Glx.Glx.ARB.GetProcAddressARB(System.ReadOnlySpan{System.Byte})
  commentId: M:OpenTK.Graphics.Glx.Glx.ARB.GetProcAddressARB(System.ReadOnlySpan{System.Byte})
  id: GetProcAddressARB(System.ReadOnlySpan{System.Byte})
  parent: OpenTK.Graphics.Glx.Glx.ARB
  langs:
  - csharp
  - vb
  name: GetProcAddressARB(ReadOnlySpan<byte>)
  nameWithType: Glx.ARB.GetProcAddressARB(ReadOnlySpan<byte>)
  fullName: OpenTK.Graphics.Glx.Glx.ARB.GetProcAddressARB(System.ReadOnlySpan<byte>)
  type: Method
  source:
    id: GetProcAddressARB
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 606
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: GLX_ARB_get_proc_address]</b>

    <b>[entry point: <code>glXGetProcAddressARB</code>]</b>

    <br />
  example: []
  syntax:
    content: public static nint GetProcAddressARB(ReadOnlySpan<byte> procName)
    parameters:
    - id: procName
      type: System.ReadOnlySpan{System.Byte}
    return:
      type: System.IntPtr
    content.vb: Public Shared Function GetProcAddressARB(procName As ReadOnlySpan(Of Byte)) As IntPtr
  overload: OpenTK.Graphics.Glx.Glx.ARB.GetProcAddressARB*
  nameWithType.vb: Glx.ARB.GetProcAddressARB(ReadOnlySpan(Of Byte))
  fullName.vb: OpenTK.Graphics.Glx.Glx.ARB.GetProcAddressARB(System.ReadOnlySpan(Of Byte))
  name.vb: GetProcAddressARB(ReadOnlySpan(Of Byte))
- uid: OpenTK.Graphics.Glx.Glx.ARB.GetProcAddressARB(System.Byte[])
  commentId: M:OpenTK.Graphics.Glx.Glx.ARB.GetProcAddressARB(System.Byte[])
  id: GetProcAddressARB(System.Byte[])
  parent: OpenTK.Graphics.Glx.Glx.ARB
  langs:
  - csharp
  - vb
  name: GetProcAddressARB(byte[])
  nameWithType: Glx.ARB.GetProcAddressARB(byte[])
  fullName: OpenTK.Graphics.Glx.Glx.ARB.GetProcAddressARB(byte[])
  type: Method
  source:
    id: GetProcAddressARB
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 616
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: GLX_ARB_get_proc_address]</b>

    <b>[entry point: <code>glXGetProcAddressARB</code>]</b>

    <br />
  example: []
  syntax:
    content: public static nint GetProcAddressARB(byte[] procName)
    parameters:
    - id: procName
      type: System.Byte[]
    return:
      type: System.IntPtr
    content.vb: Public Shared Function GetProcAddressARB(procName As Byte()) As IntPtr
  overload: OpenTK.Graphics.Glx.Glx.ARB.GetProcAddressARB*
  nameWithType.vb: Glx.ARB.GetProcAddressARB(Byte())
  fullName.vb: OpenTK.Graphics.Glx.Glx.ARB.GetProcAddressARB(Byte())
  name.vb: GetProcAddressARB(Byte())
- uid: OpenTK.Graphics.Glx.Glx.ARB.GetProcAddressARB(System.Byte@)
  commentId: M:OpenTK.Graphics.Glx.Glx.ARB.GetProcAddressARB(System.Byte@)
  id: GetProcAddressARB(System.Byte@)
  parent: OpenTK.Graphics.Glx.Glx.ARB
  langs:
  - csharp
  - vb
  name: GetProcAddressARB(in byte)
  nameWithType: Glx.ARB.GetProcAddressARB(in byte)
  fullName: OpenTK.Graphics.Glx.Glx.ARB.GetProcAddressARB(in byte)
  type: Method
  source:
    id: GetProcAddressARB
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 626
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: GLX_ARB_get_proc_address]</b>

    <b>[entry point: <code>glXGetProcAddressARB</code>]</b>

    <br />
  example: []
  syntax:
    content: public static nint GetProcAddressARB(in byte procName)
    parameters:
    - id: procName
      type: System.Byte
    return:
      type: System.IntPtr
    content.vb: Public Shared Function GetProcAddressARB(procName As Byte) As IntPtr
  overload: OpenTK.Graphics.Glx.Glx.ARB.GetProcAddressARB*
  nameWithType.vb: Glx.ARB.GetProcAddressARB(Byte)
  fullName.vb: OpenTK.Graphics.Glx.Glx.ARB.GetProcAddressARB(Byte)
  name.vb: GetProcAddressARB(Byte)
references:
- uid: OpenTK.Graphics.Glx
  commentId: N:OpenTK.Graphics.Glx
  href: OpenTK.html
  name: OpenTK.Graphics.Glx
  nameWithType: OpenTK.Graphics.Glx
  fullName: OpenTK.Graphics.Glx
  spec.csharp:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Graphics
    name: Graphics
    href: OpenTK.Graphics.html
  - name: .
  - uid: OpenTK.Graphics.Glx
    name: Glx
    href: OpenTK.Graphics.Glx.html
  spec.vb:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Graphics
    name: Graphics
    href: OpenTK.Graphics.html
  - name: .
  - uid: OpenTK.Graphics.Glx
    name: Glx
    href: OpenTK.Graphics.Glx.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: OpenTK.Graphics.Glx.Glx.ARB.CreateContextAttribsARB*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.ARB.CreateContextAttribsARB
  href: OpenTK.Graphics.Glx.Glx.ARB.html#OpenTK_Graphics_Glx_Glx_ARB_CreateContextAttribsARB_OpenTK_Graphics_Glx_DisplayPtr_OpenTK_Graphics_Glx_GLXFBConfig_OpenTK_Graphics_Glx_GLXContext_System_Boolean_System_Int32__
  name: CreateContextAttribsARB
  nameWithType: Glx.ARB.CreateContextAttribsARB
  fullName: OpenTK.Graphics.Glx.Glx.ARB.CreateContextAttribsARB
- uid: OpenTK.Graphics.Glx.DisplayPtr
  commentId: T:OpenTK.Graphics.Glx.DisplayPtr
  parent: OpenTK.Graphics.Glx
  href: OpenTK.Graphics.Glx.DisplayPtr.html
  name: DisplayPtr
  nameWithType: DisplayPtr
  fullName: OpenTK.Graphics.Glx.DisplayPtr
- uid: OpenTK.Graphics.Glx.GLXFBConfig
  commentId: T:OpenTK.Graphics.Glx.GLXFBConfig
  parent: OpenTK.Graphics.Glx
  href: OpenTK.Graphics.Glx.GLXFBConfig.html
  name: GLXFBConfig
  nameWithType: GLXFBConfig
  fullName: OpenTK.Graphics.Glx.GLXFBConfig
- uid: OpenTK.Graphics.Glx.GLXContext
  commentId: T:OpenTK.Graphics.Glx.GLXContext
  parent: OpenTK.Graphics.Glx
  href: OpenTK.Graphics.Glx.GLXContext.html
  name: GLXContext
  nameWithType: GLXContext
  fullName: OpenTK.Graphics.Glx.GLXContext
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Int32*
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int*
  nameWithType: int*
  fullName: int*
  nameWithType.vb: Integer*
  fullName.vb: Integer*
  name.vb: Integer*
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '*'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '*'
- uid: OpenTK.Graphics.Glx.Glx.ARB.GetProcAddressARB*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.ARB.GetProcAddressARB
  href: OpenTK.Graphics.Glx.Glx.ARB.html#OpenTK_Graphics_Glx_Glx_ARB_GetProcAddressARB_System_Byte__
  name: GetProcAddressARB
  nameWithType: Glx.ARB.GetProcAddressARB
  fullName: OpenTK.Graphics.Glx.Glx.ARB.GetProcAddressARB
- uid: System.Byte*
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte*
  nameWithType: byte*
  fullName: byte*
  nameWithType.vb: Byte*
  fullName.vb: Byte*
  name.vb: Byte*
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '*'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '*'
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.intptr
  name: nint
  nameWithType: nint
  fullName: nint
  nameWithType.vb: IntPtr
  fullName.vb: System.IntPtr
  name.vb: IntPtr
- uid: System.ReadOnlySpan{System.Int32}
  commentId: T:System.ReadOnlySpan{System.Int32}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<int>
  nameWithType: ReadOnlySpan<int>
  fullName: System.ReadOnlySpan<int>
  nameWithType.vb: ReadOnlySpan(Of Integer)
  fullName.vb: System.ReadOnlySpan(Of Integer)
  name.vb: ReadOnlySpan(Of Integer)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.ReadOnlySpan{System.Byte}
  commentId: T:System.ReadOnlySpan{System.Byte}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<byte>
  nameWithType: ReadOnlySpan<byte>
  fullName: System.ReadOnlySpan<byte>
  nameWithType.vb: ReadOnlySpan(Of Byte)
  fullName.vb: System.ReadOnlySpan(Of Byte)
  name.vb: ReadOnlySpan(Of Byte)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
