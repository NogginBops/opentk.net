### YamlMime:ManagedReference
items:
- uid: OpenTK.Graphics.Wgl.Wgl
  commentId: T:OpenTK.Graphics.Wgl.Wgl
  id: Wgl
  parent: OpenTK.Graphics.Wgl
  children:
  - OpenTK.Graphics.Wgl.Wgl.ChoosePixelFormat(System.IntPtr,OpenTK.Graphics.Wgl.PixelFormatDescriptor*)
  - OpenTK.Graphics.Wgl.Wgl.ChoosePixelFormat(System.IntPtr,OpenTK.Graphics.Wgl.PixelFormatDescriptor@)
  - OpenTK.Graphics.Wgl.Wgl.ChoosePixelFormat(System.IntPtr,OpenTK.Graphics.Wgl.PixelFormatDescriptor[])
  - OpenTK.Graphics.Wgl.Wgl.ChoosePixelFormat(System.IntPtr,System.ReadOnlySpan{OpenTK.Graphics.Wgl.PixelFormatDescriptor})
  - OpenTK.Graphics.Wgl.Wgl.CopyContext(System.IntPtr,System.IntPtr,OpenTK.Graphics.OpenGL.AttribMask)
  - OpenTK.Graphics.Wgl.Wgl.CopyContext_(System.IntPtr,System.IntPtr,OpenTK.Graphics.OpenGL.AttribMask)
  - OpenTK.Graphics.Wgl.Wgl.CreateContext(System.IntPtr)
  - OpenTK.Graphics.Wgl.Wgl.CreateLayerContext(System.IntPtr,System.Int32)
  - OpenTK.Graphics.Wgl.Wgl.DeleteContext(System.IntPtr)
  - OpenTK.Graphics.Wgl.Wgl.DeleteContext_(System.IntPtr)
  - OpenTK.Graphics.Wgl.Wgl.DescribeLayerPlane(System.IntPtr,System.Int32,System.Int32,System.UInt32,OpenTK.Graphics.Wgl.LayerPlaneDescriptor*)
  - OpenTK.Graphics.Wgl.Wgl.DescribeLayerPlane(System.IntPtr,System.Int32,System.Int32,System.UInt32,OpenTK.Graphics.Wgl.LayerPlaneDescriptor@)
  - OpenTK.Graphics.Wgl.Wgl.DescribeLayerPlane(System.IntPtr,System.Int32,System.Int32,System.UInt32,OpenTK.Graphics.Wgl.LayerPlaneDescriptor[])
  - OpenTK.Graphics.Wgl.Wgl.DescribeLayerPlane(System.IntPtr,System.Int32,System.Int32,System.UInt32,System.Span{OpenTK.Graphics.Wgl.LayerPlaneDescriptor})
  - OpenTK.Graphics.Wgl.Wgl.DescribePixelFormat(System.IntPtr,System.Int32,System.UInt32,OpenTK.Graphics.Wgl.PixelFormatDescriptor*)
  - OpenTK.Graphics.Wgl.Wgl.DescribePixelFormat(System.IntPtr,System.Int32,System.UInt32,OpenTK.Graphics.Wgl.PixelFormatDescriptor@)
  - OpenTK.Graphics.Wgl.Wgl.DescribePixelFormat(System.IntPtr,System.Int32,System.UInt32,OpenTK.Graphics.Wgl.PixelFormatDescriptor[])
  - OpenTK.Graphics.Wgl.Wgl.DescribePixelFormat(System.IntPtr,System.Int32,System.UInt32,System.Span{OpenTK.Graphics.Wgl.PixelFormatDescriptor})
  - OpenTK.Graphics.Wgl.Wgl.GetCurrentContext
  - OpenTK.Graphics.Wgl.Wgl.GetCurrentDC
  - OpenTK.Graphics.Wgl.Wgl.GetEnhMetaFilePixelFormat(System.IntPtr,System.UInt32,OpenTK.Graphics.Wgl.PixelFormatDescriptor*)
  - OpenTK.Graphics.Wgl.Wgl.GetEnhMetaFilePixelFormat(System.IntPtr,System.UInt32,OpenTK.Graphics.Wgl.PixelFormatDescriptor@)
  - OpenTK.Graphics.Wgl.Wgl.GetEnhMetaFilePixelFormat(System.IntPtr,System.UInt32,OpenTK.Graphics.Wgl.PixelFormatDescriptor[])
  - OpenTK.Graphics.Wgl.Wgl.GetEnhMetaFilePixelFormat(System.IntPtr,System.UInt32,System.Span{OpenTK.Graphics.Wgl.PixelFormatDescriptor})
  - OpenTK.Graphics.Wgl.Wgl.GetLayerPaletteEntries(System.IntPtr,System.Int32,System.Int32,OpenTK.Graphics.Wgl.ColorRef[])
  - OpenTK.Graphics.Wgl.Wgl.GetLayerPaletteEntries(System.IntPtr,System.Int32,System.Int32,System.Int32,OpenTK.Graphics.Wgl.ColorRef*)
  - OpenTK.Graphics.Wgl.Wgl.GetLayerPaletteEntries(System.IntPtr,System.Int32,System.Int32,System.Int32,OpenTK.Graphics.Wgl.ColorRef@)
  - OpenTK.Graphics.Wgl.Wgl.GetLayerPaletteEntries(System.IntPtr,System.Int32,System.Int32,System.Span{OpenTK.Graphics.Wgl.ColorRef})
  - OpenTK.Graphics.Wgl.Wgl.GetPixelFormat(System.IntPtr)
  - OpenTK.Graphics.Wgl.Wgl.GetProcAddress(System.Byte*)
  - OpenTK.Graphics.Wgl.Wgl.GetProcAddress(System.String)
  - OpenTK.Graphics.Wgl.Wgl.MakeCurrent(System.IntPtr,System.IntPtr)
  - OpenTK.Graphics.Wgl.Wgl.MakeCurrent_(System.IntPtr,System.IntPtr)
  - OpenTK.Graphics.Wgl.Wgl.RealizeLayerPalette(System.IntPtr,System.Int32,System.Int32)
  - OpenTK.Graphics.Wgl.Wgl.RealizeLayerPalette_(System.IntPtr,System.Int32,System.Int32)
  - OpenTK.Graphics.Wgl.Wgl.SetLayerPaletteEntries(System.IntPtr,System.Int32,System.Int32,OpenTK.Graphics.Wgl.ColorRef[])
  - OpenTK.Graphics.Wgl.Wgl.SetLayerPaletteEntries(System.IntPtr,System.Int32,System.Int32,System.Int32,OpenTK.Graphics.Wgl.ColorRef*)
  - OpenTK.Graphics.Wgl.Wgl.SetLayerPaletteEntries(System.IntPtr,System.Int32,System.Int32,System.Int32,OpenTK.Graphics.Wgl.ColorRef@)
  - OpenTK.Graphics.Wgl.Wgl.SetLayerPaletteEntries(System.IntPtr,System.Int32,System.Int32,System.ReadOnlySpan{OpenTK.Graphics.Wgl.ColorRef})
  - OpenTK.Graphics.Wgl.Wgl.SetPixelFormat(System.IntPtr,System.Int32,OpenTK.Graphics.Wgl.PixelFormatDescriptor*)
  - OpenTK.Graphics.Wgl.Wgl.SetPixelFormat(System.IntPtr,System.Int32,OpenTK.Graphics.Wgl.PixelFormatDescriptor@)
  - OpenTK.Graphics.Wgl.Wgl.SetPixelFormat(System.IntPtr,System.Int32,OpenTK.Graphics.Wgl.PixelFormatDescriptor[])
  - OpenTK.Graphics.Wgl.Wgl.SetPixelFormat(System.IntPtr,System.Int32,System.ReadOnlySpan{OpenTK.Graphics.Wgl.PixelFormatDescriptor})
  - OpenTK.Graphics.Wgl.Wgl.ShareLists(System.IntPtr,System.IntPtr)
  - OpenTK.Graphics.Wgl.Wgl.ShareLists_(System.IntPtr,System.IntPtr)
  - OpenTK.Graphics.Wgl.Wgl.SwapBuffers(System.IntPtr)
  - OpenTK.Graphics.Wgl.Wgl.SwapBuffers_(System.IntPtr)
  - OpenTK.Graphics.Wgl.Wgl.SwapLayerBuffers(System.IntPtr,OpenTK.Graphics.Wgl.WGLLayerPlaneMask)
  - OpenTK.Graphics.Wgl.Wgl.SwapLayerBuffers_(System.IntPtr,OpenTK.Graphics.Wgl.WGLLayerPlaneMask)
  - OpenTK.Graphics.Wgl.Wgl.UseFontBitmaps(System.IntPtr,System.UInt32,System.UInt32,System.UInt32)
  - OpenTK.Graphics.Wgl.Wgl.UseFontBitmapsA(System.IntPtr,System.UInt32,System.UInt32,System.UInt32)
  - OpenTK.Graphics.Wgl.Wgl.UseFontBitmapsA_(System.IntPtr,System.UInt32,System.UInt32,System.UInt32)
  - OpenTK.Graphics.Wgl.Wgl.UseFontBitmapsW(System.IntPtr,System.UInt32,System.UInt32,System.UInt32)
  - OpenTK.Graphics.Wgl.Wgl.UseFontBitmapsW_(System.IntPtr,System.UInt32,System.UInt32,System.UInt32)
  - OpenTK.Graphics.Wgl.Wgl.UseFontBitmaps_(System.IntPtr,System.UInt32,System.UInt32,System.UInt32)
  - OpenTK.Graphics.Wgl.Wgl.UseFontOutlines(System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.Single,System.Single,OpenTK.Graphics.Wgl.FontFormat,System.IntPtr)
  - OpenTK.Graphics.Wgl.Wgl.UseFontOutlinesA(System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.Single,System.Single,OpenTK.Graphics.Wgl.FontFormat,System.IntPtr)
  - OpenTK.Graphics.Wgl.Wgl.UseFontOutlinesA_(System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.Single,System.Single,OpenTK.Graphics.Wgl.FontFormat,System.IntPtr)
  - OpenTK.Graphics.Wgl.Wgl.UseFontOutlinesW(System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.Single,System.Single,OpenTK.Graphics.Wgl.FontFormat,System.IntPtr)
  - OpenTK.Graphics.Wgl.Wgl.UseFontOutlinesW_(System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.Single,System.Single,OpenTK.Graphics.Wgl.FontFormat,System.IntPtr)
  - OpenTK.Graphics.Wgl.Wgl.UseFontOutlines_(System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.Single,System.Single,OpenTK.Graphics.Wgl.FontFormat,System.IntPtr)
  langs:
  - csharp
  - vb
  name: Wgl
  nameWithType: Wgl
  fullName: OpenTK.Graphics.Wgl.Wgl
  type: Class
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: Wgl
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
    startLine: 11
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  syntax:
    content: public static class Wgl
    content.vb: Public Module Wgl
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: OpenTK.Graphics.Wgl.Wgl.ChoosePixelFormat(System.IntPtr,OpenTK.Graphics.Wgl.PixelFormatDescriptor*)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.ChoosePixelFormat(System.IntPtr,OpenTK.Graphics.Wgl.PixelFormatDescriptor*)
  id: ChoosePixelFormat(System.IntPtr,OpenTK.Graphics.Wgl.PixelFormatDescriptor*)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: ChoosePixelFormat(nint, PixelFormatDescriptor*)
  nameWithType: Wgl.ChoosePixelFormat(nint, PixelFormatDescriptor*)
  fullName: OpenTK.Graphics.Wgl.Wgl.ChoosePixelFormat(nint, OpenTK.Graphics.Wgl.PixelFormatDescriptor*)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Native.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: ChoosePixelFormat
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Native.cs
    startLine: 12
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: '<b>[requires: v1.0]</b> <b>[entry point: <code>ChoosePixelFormat</code>]</b><br />'
  example: []
  syntax:
    content: public static int ChoosePixelFormat(nint hDc, PixelFormatDescriptor* pPfd)
    parameters:
    - id: hDc
      type: System.IntPtr
    - id: pPfd
      type: OpenTK.Graphics.Wgl.PixelFormatDescriptor*
    return:
      type: System.Int32
    content.vb: Public Shared Function ChoosePixelFormat(hDc As IntPtr, pPfd As PixelFormatDescriptor*) As Integer
  overload: OpenTK.Graphics.Wgl.Wgl.ChoosePixelFormat*
  nameWithType.vb: Wgl.ChoosePixelFormat(IntPtr, PixelFormatDescriptor*)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.ChoosePixelFormat(System.IntPtr, OpenTK.Graphics.Wgl.PixelFormatDescriptor*)
  name.vb: ChoosePixelFormat(IntPtr, PixelFormatDescriptor*)
- uid: OpenTK.Graphics.Wgl.Wgl.CopyContext_(System.IntPtr,System.IntPtr,OpenTK.Graphics.OpenGL.AttribMask)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.CopyContext_(System.IntPtr,System.IntPtr,OpenTK.Graphics.OpenGL.AttribMask)
  id: CopyContext_(System.IntPtr,System.IntPtr,OpenTK.Graphics.OpenGL.AttribMask)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: CopyContext_(nint, nint, AttribMask)
  nameWithType: Wgl.CopyContext_(nint, nint, AttribMask)
  fullName: OpenTK.Graphics.Wgl.Wgl.CopyContext_(nint, nint, OpenTK.Graphics.OpenGL.AttribMask)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Native.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: CopyContext_
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Native.cs
    startLine: 15
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: '<b>[requires: v1.0]</b> <b>[entry point: <code>wglCopyContext</code>]</b><br />'
  example: []
  syntax:
    content: public static int CopyContext_(nint hglrcSrc, nint hglrcDst, AttribMask mask)
    parameters:
    - id: hglrcSrc
      type: System.IntPtr
    - id: hglrcDst
      type: System.IntPtr
    - id: mask
      type: OpenTK.Graphics.OpenGL.AttribMask
    return:
      type: System.Int32
    content.vb: Public Shared Function CopyContext_(hglrcSrc As IntPtr, hglrcDst As IntPtr, mask As AttribMask) As Integer
  overload: OpenTK.Graphics.Wgl.Wgl.CopyContext_*
  nameWithType.vb: Wgl.CopyContext_(IntPtr, IntPtr, AttribMask)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.CopyContext_(System.IntPtr, System.IntPtr, OpenTK.Graphics.OpenGL.AttribMask)
  name.vb: CopyContext_(IntPtr, IntPtr, AttribMask)
- uid: OpenTK.Graphics.Wgl.Wgl.CreateContext(System.IntPtr)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.CreateContext(System.IntPtr)
  id: CreateContext(System.IntPtr)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: CreateContext(nint)
  nameWithType: Wgl.CreateContext(nint)
  fullName: OpenTK.Graphics.Wgl.Wgl.CreateContext(nint)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Native.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: CreateContext
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Native.cs
    startLine: 18
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: '<b>[requires: v1.0]</b> <b>[entry point: <code>wglCreateContext</code>]</b><br />'
  example: []
  syntax:
    content: public static nint CreateContext(nint hDc)
    parameters:
    - id: hDc
      type: System.IntPtr
    return:
      type: System.IntPtr
    content.vb: Public Shared Function CreateContext(hDc As IntPtr) As IntPtr
  overload: OpenTK.Graphics.Wgl.Wgl.CreateContext*
  nameWithType.vb: Wgl.CreateContext(IntPtr)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.CreateContext(System.IntPtr)
  name.vb: CreateContext(IntPtr)
- uid: OpenTK.Graphics.Wgl.Wgl.CreateLayerContext(System.IntPtr,System.Int32)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.CreateLayerContext(System.IntPtr,System.Int32)
  id: CreateLayerContext(System.IntPtr,System.Int32)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: CreateLayerContext(nint, int)
  nameWithType: Wgl.CreateLayerContext(nint, int)
  fullName: OpenTK.Graphics.Wgl.Wgl.CreateLayerContext(nint, int)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Native.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: CreateLayerContext
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Native.cs
    startLine: 21
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: '<b>[requires: v1.0]</b> <b>[entry point: <code>wglCreateLayerContext</code>]</b><br />'
  example: []
  syntax:
    content: public static nint CreateLayerContext(nint hDc, int level)
    parameters:
    - id: hDc
      type: System.IntPtr
    - id: level
      type: System.Int32
    return:
      type: System.IntPtr
    content.vb: Public Shared Function CreateLayerContext(hDc As IntPtr, level As Integer) As IntPtr
  overload: OpenTK.Graphics.Wgl.Wgl.CreateLayerContext*
  nameWithType.vb: Wgl.CreateLayerContext(IntPtr, Integer)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.CreateLayerContext(System.IntPtr, Integer)
  name.vb: CreateLayerContext(IntPtr, Integer)
- uid: OpenTK.Graphics.Wgl.Wgl.DeleteContext_(System.IntPtr)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.DeleteContext_(System.IntPtr)
  id: DeleteContext_(System.IntPtr)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: DeleteContext_(nint)
  nameWithType: Wgl.DeleteContext_(nint)
  fullName: OpenTK.Graphics.Wgl.Wgl.DeleteContext_(nint)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Native.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: DeleteContext_
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Native.cs
    startLine: 24
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: '<b>[requires: v1.0]</b> <b>[entry point: <code>wglDeleteContext</code>]</b><br />'
  example: []
  syntax:
    content: public static int DeleteContext_(nint oldContext)
    parameters:
    - id: oldContext
      type: System.IntPtr
    return:
      type: System.Int32
    content.vb: Public Shared Function DeleteContext_(oldContext As IntPtr) As Integer
  overload: OpenTK.Graphics.Wgl.Wgl.DeleteContext_*
  nameWithType.vb: Wgl.DeleteContext_(IntPtr)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.DeleteContext_(System.IntPtr)
  name.vb: DeleteContext_(IntPtr)
- uid: OpenTK.Graphics.Wgl.Wgl.DescribeLayerPlane(System.IntPtr,System.Int32,System.Int32,System.UInt32,OpenTK.Graphics.Wgl.LayerPlaneDescriptor*)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.DescribeLayerPlane(System.IntPtr,System.Int32,System.Int32,System.UInt32,OpenTK.Graphics.Wgl.LayerPlaneDescriptor*)
  id: DescribeLayerPlane(System.IntPtr,System.Int32,System.Int32,System.UInt32,OpenTK.Graphics.Wgl.LayerPlaneDescriptor*)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: DescribeLayerPlane(nint, int, int, uint, LayerPlaneDescriptor*)
  nameWithType: Wgl.DescribeLayerPlane(nint, int, int, uint, LayerPlaneDescriptor*)
  fullName: OpenTK.Graphics.Wgl.Wgl.DescribeLayerPlane(nint, int, int, uint, OpenTK.Graphics.Wgl.LayerPlaneDescriptor*)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Native.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: DescribeLayerPlane
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Native.cs
    startLine: 27
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: '<b>[requires: v1.0]</b> <b>[entry point: <code>wglDescribeLayerPlane</code>]</b><br />'
  example: []
  syntax:
    content: public static int DescribeLayerPlane(nint hDc, int pixelFormat, int layerPlane, uint nBytes, LayerPlaneDescriptor* plpd)
    parameters:
    - id: hDc
      type: System.IntPtr
    - id: pixelFormat
      type: System.Int32
    - id: layerPlane
      type: System.Int32
    - id: nBytes
      type: System.UInt32
    - id: plpd
      type: OpenTK.Graphics.Wgl.LayerPlaneDescriptor*
    return:
      type: System.Int32
    content.vb: Public Shared Function DescribeLayerPlane(hDc As IntPtr, pixelFormat As Integer, layerPlane As Integer, nBytes As UInteger, plpd As LayerPlaneDescriptor*) As Integer
  overload: OpenTK.Graphics.Wgl.Wgl.DescribeLayerPlane*
  nameWithType.vb: Wgl.DescribeLayerPlane(IntPtr, Integer, Integer, UInteger, LayerPlaneDescriptor*)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.DescribeLayerPlane(System.IntPtr, Integer, Integer, UInteger, OpenTK.Graphics.Wgl.LayerPlaneDescriptor*)
  name.vb: DescribeLayerPlane(IntPtr, Integer, Integer, UInteger, LayerPlaneDescriptor*)
- uid: OpenTK.Graphics.Wgl.Wgl.DescribePixelFormat(System.IntPtr,System.Int32,System.UInt32,OpenTK.Graphics.Wgl.PixelFormatDescriptor*)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.DescribePixelFormat(System.IntPtr,System.Int32,System.UInt32,OpenTK.Graphics.Wgl.PixelFormatDescriptor*)
  id: DescribePixelFormat(System.IntPtr,System.Int32,System.UInt32,OpenTK.Graphics.Wgl.PixelFormatDescriptor*)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: DescribePixelFormat(nint, int, uint, PixelFormatDescriptor*)
  nameWithType: Wgl.DescribePixelFormat(nint, int, uint, PixelFormatDescriptor*)
  fullName: OpenTK.Graphics.Wgl.Wgl.DescribePixelFormat(nint, int, uint, OpenTK.Graphics.Wgl.PixelFormatDescriptor*)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Native.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: DescribePixelFormat
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Native.cs
    startLine: 30
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: '<b>[requires: v1.0]</b> <b>[entry point: <code>DescribePixelFormat</code>]</b><br />'
  example: []
  syntax:
    content: public static int DescribePixelFormat(nint hdc, int ipfd, uint cjpfd, PixelFormatDescriptor* ppfd)
    parameters:
    - id: hdc
      type: System.IntPtr
    - id: ipfd
      type: System.Int32
    - id: cjpfd
      type: System.UInt32
    - id: ppfd
      type: OpenTK.Graphics.Wgl.PixelFormatDescriptor*
    return:
      type: System.Int32
    content.vb: Public Shared Function DescribePixelFormat(hdc As IntPtr, ipfd As Integer, cjpfd As UInteger, ppfd As PixelFormatDescriptor*) As Integer
  overload: OpenTK.Graphics.Wgl.Wgl.DescribePixelFormat*
  nameWithType.vb: Wgl.DescribePixelFormat(IntPtr, Integer, UInteger, PixelFormatDescriptor*)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.DescribePixelFormat(System.IntPtr, Integer, UInteger, OpenTK.Graphics.Wgl.PixelFormatDescriptor*)
  name.vb: DescribePixelFormat(IntPtr, Integer, UInteger, PixelFormatDescriptor*)
- uid: OpenTK.Graphics.Wgl.Wgl.GetCurrentContext
  commentId: M:OpenTK.Graphics.Wgl.Wgl.GetCurrentContext
  id: GetCurrentContext
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: GetCurrentContext()
  nameWithType: Wgl.GetCurrentContext()
  fullName: OpenTK.Graphics.Wgl.Wgl.GetCurrentContext()
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Native.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: GetCurrentContext
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Native.cs
    startLine: 33
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: '<b>[requires: v1.0]</b> <b>[entry point: <code>wglGetCurrentContext</code>]</b><br />'
  example: []
  syntax:
    content: public static nint GetCurrentContext()
    return:
      type: System.IntPtr
    content.vb: Public Shared Function GetCurrentContext() As IntPtr
  overload: OpenTK.Graphics.Wgl.Wgl.GetCurrentContext*
- uid: OpenTK.Graphics.Wgl.Wgl.GetCurrentDC
  commentId: M:OpenTK.Graphics.Wgl.Wgl.GetCurrentDC
  id: GetCurrentDC
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: GetCurrentDC()
  nameWithType: Wgl.GetCurrentDC()
  fullName: OpenTK.Graphics.Wgl.Wgl.GetCurrentDC()
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Native.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: GetCurrentDC
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Native.cs
    startLine: 36
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: '<b>[requires: v1.0]</b> <b>[entry point: <code>wglGetCurrentDC</code>]</b><br />'
  example: []
  syntax:
    content: public static nint GetCurrentDC()
    return:
      type: System.IntPtr
    content.vb: Public Shared Function GetCurrentDC() As IntPtr
  overload: OpenTK.Graphics.Wgl.Wgl.GetCurrentDC*
- uid: OpenTK.Graphics.Wgl.Wgl.GetEnhMetaFilePixelFormat(System.IntPtr,System.UInt32,OpenTK.Graphics.Wgl.PixelFormatDescriptor*)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.GetEnhMetaFilePixelFormat(System.IntPtr,System.UInt32,OpenTK.Graphics.Wgl.PixelFormatDescriptor*)
  id: GetEnhMetaFilePixelFormat(System.IntPtr,System.UInt32,OpenTK.Graphics.Wgl.PixelFormatDescriptor*)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: GetEnhMetaFilePixelFormat(nint, uint, PixelFormatDescriptor*)
  nameWithType: Wgl.GetEnhMetaFilePixelFormat(nint, uint, PixelFormatDescriptor*)
  fullName: OpenTK.Graphics.Wgl.Wgl.GetEnhMetaFilePixelFormat(nint, uint, OpenTK.Graphics.Wgl.PixelFormatDescriptor*)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Native.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: GetEnhMetaFilePixelFormat
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Native.cs
    startLine: 39
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: '<b>[requires: v1.0]</b> <b>[entry point: <code>GetEnhMetaFilePixelFormat</code>]</b><br />'
  example: []
  syntax:
    content: public static uint GetEnhMetaFilePixelFormat(nint hemf, uint cbBuffer, PixelFormatDescriptor* ppfd)
    parameters:
    - id: hemf
      type: System.IntPtr
    - id: cbBuffer
      type: System.UInt32
    - id: ppfd
      type: OpenTK.Graphics.Wgl.PixelFormatDescriptor*
    return:
      type: System.UInt32
    content.vb: Public Shared Function GetEnhMetaFilePixelFormat(hemf As IntPtr, cbBuffer As UInteger, ppfd As PixelFormatDescriptor*) As UInteger
  overload: OpenTK.Graphics.Wgl.Wgl.GetEnhMetaFilePixelFormat*
  nameWithType.vb: Wgl.GetEnhMetaFilePixelFormat(IntPtr, UInteger, PixelFormatDescriptor*)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.GetEnhMetaFilePixelFormat(System.IntPtr, UInteger, OpenTK.Graphics.Wgl.PixelFormatDescriptor*)
  name.vb: GetEnhMetaFilePixelFormat(IntPtr, UInteger, PixelFormatDescriptor*)
- uid: OpenTK.Graphics.Wgl.Wgl.GetLayerPaletteEntries(System.IntPtr,System.Int32,System.Int32,System.Int32,OpenTK.Graphics.Wgl.ColorRef*)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.GetLayerPaletteEntries(System.IntPtr,System.Int32,System.Int32,System.Int32,OpenTK.Graphics.Wgl.ColorRef*)
  id: GetLayerPaletteEntries(System.IntPtr,System.Int32,System.Int32,System.Int32,OpenTK.Graphics.Wgl.ColorRef*)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: GetLayerPaletteEntries(nint, int, int, int, ColorRef*)
  nameWithType: Wgl.GetLayerPaletteEntries(nint, int, int, int, ColorRef*)
  fullName: OpenTK.Graphics.Wgl.Wgl.GetLayerPaletteEntries(nint, int, int, int, OpenTK.Graphics.Wgl.ColorRef*)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Native.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: GetLayerPaletteEntries
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Native.cs
    startLine: 42
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: '<b>[requires: v1.0]</b> <b>[entry point: <code>wglGetLayerPaletteEntries</code>]</b><br />'
  example: []
  syntax:
    content: public static int GetLayerPaletteEntries(nint hdc, int iLayerPlane, int iStart, int cEntries, ColorRef* pcr)
    parameters:
    - id: hdc
      type: System.IntPtr
    - id: iLayerPlane
      type: System.Int32
    - id: iStart
      type: System.Int32
    - id: cEntries
      type: System.Int32
    - id: pcr
      type: OpenTK.Graphics.Wgl.ColorRef*
    return:
      type: System.Int32
    content.vb: Public Shared Function GetLayerPaletteEntries(hdc As IntPtr, iLayerPlane As Integer, iStart As Integer, cEntries As Integer, pcr As ColorRef*) As Integer
  overload: OpenTK.Graphics.Wgl.Wgl.GetLayerPaletteEntries*
  nameWithType.vb: Wgl.GetLayerPaletteEntries(IntPtr, Integer, Integer, Integer, ColorRef*)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.GetLayerPaletteEntries(System.IntPtr, Integer, Integer, Integer, OpenTK.Graphics.Wgl.ColorRef*)
  name.vb: GetLayerPaletteEntries(IntPtr, Integer, Integer, Integer, ColorRef*)
- uid: OpenTK.Graphics.Wgl.Wgl.GetPixelFormat(System.IntPtr)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.GetPixelFormat(System.IntPtr)
  id: GetPixelFormat(System.IntPtr)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: GetPixelFormat(nint)
  nameWithType: Wgl.GetPixelFormat(nint)
  fullName: OpenTK.Graphics.Wgl.Wgl.GetPixelFormat(nint)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Native.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: GetPixelFormat
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Native.cs
    startLine: 45
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: '<b>[requires: v1.0]</b> <b>[entry point: <code>GetPixelFormat</code>]</b><br />'
  example: []
  syntax:
    content: public static int GetPixelFormat(nint hdc)
    parameters:
    - id: hdc
      type: System.IntPtr
    return:
      type: System.Int32
    content.vb: Public Shared Function GetPixelFormat(hdc As IntPtr) As Integer
  overload: OpenTK.Graphics.Wgl.Wgl.GetPixelFormat*
  nameWithType.vb: Wgl.GetPixelFormat(IntPtr)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.GetPixelFormat(System.IntPtr)
  name.vb: GetPixelFormat(IntPtr)
- uid: OpenTK.Graphics.Wgl.Wgl.GetProcAddress(System.Byte*)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.GetProcAddress(System.Byte*)
  id: GetProcAddress(System.Byte*)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: GetProcAddress(byte*)
  nameWithType: Wgl.GetProcAddress(byte*)
  fullName: OpenTK.Graphics.Wgl.Wgl.GetProcAddress(byte*)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Native.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: GetProcAddress
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Native.cs
    startLine: 48
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: '<b>[requires: v1.0]</b> <b>[entry point: <code>wglGetProcAddress</code>]</b><br />'
  example: []
  syntax:
    content: public static nint GetProcAddress(byte* lpszProc)
    parameters:
    - id: lpszProc
      type: System.Byte*
    return:
      type: System.IntPtr
    content.vb: Public Shared Function GetProcAddress(lpszProc As Byte*) As IntPtr
  overload: OpenTK.Graphics.Wgl.Wgl.GetProcAddress*
  nameWithType.vb: Wgl.GetProcAddress(Byte*)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.GetProcAddress(Byte*)
  name.vb: GetProcAddress(Byte*)
- uid: OpenTK.Graphics.Wgl.Wgl.MakeCurrent_(System.IntPtr,System.IntPtr)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.MakeCurrent_(System.IntPtr,System.IntPtr)
  id: MakeCurrent_(System.IntPtr,System.IntPtr)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: MakeCurrent_(nint, nint)
  nameWithType: Wgl.MakeCurrent_(nint, nint)
  fullName: OpenTK.Graphics.Wgl.Wgl.MakeCurrent_(nint, nint)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Native.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: MakeCurrent_
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Native.cs
    startLine: 51
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: '<b>[requires: v1.0]</b> <b>[entry point: <code>wglMakeCurrent</code>]</b><br />'
  example: []
  syntax:
    content: public static int MakeCurrent_(nint hDc, nint newContext)
    parameters:
    - id: hDc
      type: System.IntPtr
    - id: newContext
      type: System.IntPtr
    return:
      type: System.Int32
    content.vb: Public Shared Function MakeCurrent_(hDc As IntPtr, newContext As IntPtr) As Integer
  overload: OpenTK.Graphics.Wgl.Wgl.MakeCurrent_*
  nameWithType.vb: Wgl.MakeCurrent_(IntPtr, IntPtr)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.MakeCurrent_(System.IntPtr, System.IntPtr)
  name.vb: MakeCurrent_(IntPtr, IntPtr)
- uid: OpenTK.Graphics.Wgl.Wgl.RealizeLayerPalette_(System.IntPtr,System.Int32,System.Int32)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.RealizeLayerPalette_(System.IntPtr,System.Int32,System.Int32)
  id: RealizeLayerPalette_(System.IntPtr,System.Int32,System.Int32)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: RealizeLayerPalette_(nint, int, int)
  nameWithType: Wgl.RealizeLayerPalette_(nint, int, int)
  fullName: OpenTK.Graphics.Wgl.Wgl.RealizeLayerPalette_(nint, int, int)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Native.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: RealizeLayerPalette_
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Native.cs
    startLine: 54
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: '<b>[requires: v1.0]</b> <b>[entry point: <code>wglRealizeLayerPalette</code>]</b><br />'
  example: []
  syntax:
    content: public static int RealizeLayerPalette_(nint hdc, int iLayerPlane, int bRealize)
    parameters:
    - id: hdc
      type: System.IntPtr
    - id: iLayerPlane
      type: System.Int32
    - id: bRealize
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function RealizeLayerPalette_(hdc As IntPtr, iLayerPlane As Integer, bRealize As Integer) As Integer
  overload: OpenTK.Graphics.Wgl.Wgl.RealizeLayerPalette_*
  nameWithType.vb: Wgl.RealizeLayerPalette_(IntPtr, Integer, Integer)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.RealizeLayerPalette_(System.IntPtr, Integer, Integer)
  name.vb: RealizeLayerPalette_(IntPtr, Integer, Integer)
- uid: OpenTK.Graphics.Wgl.Wgl.SetLayerPaletteEntries(System.IntPtr,System.Int32,System.Int32,System.Int32,OpenTK.Graphics.Wgl.ColorRef*)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.SetLayerPaletteEntries(System.IntPtr,System.Int32,System.Int32,System.Int32,OpenTK.Graphics.Wgl.ColorRef*)
  id: SetLayerPaletteEntries(System.IntPtr,System.Int32,System.Int32,System.Int32,OpenTK.Graphics.Wgl.ColorRef*)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: SetLayerPaletteEntries(nint, int, int, int, ColorRef*)
  nameWithType: Wgl.SetLayerPaletteEntries(nint, int, int, int, ColorRef*)
  fullName: OpenTK.Graphics.Wgl.Wgl.SetLayerPaletteEntries(nint, int, int, int, OpenTK.Graphics.Wgl.ColorRef*)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Native.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: SetLayerPaletteEntries
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Native.cs
    startLine: 57
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: '<b>[requires: v1.0]</b> <b>[entry point: <code>wglSetLayerPaletteEntries</code>]</b><br />'
  example: []
  syntax:
    content: public static int SetLayerPaletteEntries(nint hdc, int iLayerPlane, int iStart, int cEntries, ColorRef* pcr)
    parameters:
    - id: hdc
      type: System.IntPtr
    - id: iLayerPlane
      type: System.Int32
    - id: iStart
      type: System.Int32
    - id: cEntries
      type: System.Int32
    - id: pcr
      type: OpenTK.Graphics.Wgl.ColorRef*
    return:
      type: System.Int32
    content.vb: Public Shared Function SetLayerPaletteEntries(hdc As IntPtr, iLayerPlane As Integer, iStart As Integer, cEntries As Integer, pcr As ColorRef*) As Integer
  overload: OpenTK.Graphics.Wgl.Wgl.SetLayerPaletteEntries*
  nameWithType.vb: Wgl.SetLayerPaletteEntries(IntPtr, Integer, Integer, Integer, ColorRef*)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.SetLayerPaletteEntries(System.IntPtr, Integer, Integer, Integer, OpenTK.Graphics.Wgl.ColorRef*)
  name.vb: SetLayerPaletteEntries(IntPtr, Integer, Integer, Integer, ColorRef*)
- uid: OpenTK.Graphics.Wgl.Wgl.SetPixelFormat(System.IntPtr,System.Int32,OpenTK.Graphics.Wgl.PixelFormatDescriptor*)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.SetPixelFormat(System.IntPtr,System.Int32,OpenTK.Graphics.Wgl.PixelFormatDescriptor*)
  id: SetPixelFormat(System.IntPtr,System.Int32,OpenTK.Graphics.Wgl.PixelFormatDescriptor*)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: SetPixelFormat(nint, int, PixelFormatDescriptor*)
  nameWithType: Wgl.SetPixelFormat(nint, int, PixelFormatDescriptor*)
  fullName: OpenTK.Graphics.Wgl.Wgl.SetPixelFormat(nint, int, OpenTK.Graphics.Wgl.PixelFormatDescriptor*)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Native.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: SetPixelFormat
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Native.cs
    startLine: 60
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: '<b>[requires: v1.0]</b> <b>[entry point: <code>SetPixelFormat</code>]</b><br />'
  example: []
  syntax:
    content: public static int SetPixelFormat(nint hdc, int ipfd, PixelFormatDescriptor* ppfd)
    parameters:
    - id: hdc
      type: System.IntPtr
    - id: ipfd
      type: System.Int32
    - id: ppfd
      type: OpenTK.Graphics.Wgl.PixelFormatDescriptor*
    return:
      type: System.Int32
    content.vb: Public Shared Function SetPixelFormat(hdc As IntPtr, ipfd As Integer, ppfd As PixelFormatDescriptor*) As Integer
  overload: OpenTK.Graphics.Wgl.Wgl.SetPixelFormat*
  nameWithType.vb: Wgl.SetPixelFormat(IntPtr, Integer, PixelFormatDescriptor*)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.SetPixelFormat(System.IntPtr, Integer, OpenTK.Graphics.Wgl.PixelFormatDescriptor*)
  name.vb: SetPixelFormat(IntPtr, Integer, PixelFormatDescriptor*)
- uid: OpenTK.Graphics.Wgl.Wgl.ShareLists_(System.IntPtr,System.IntPtr)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.ShareLists_(System.IntPtr,System.IntPtr)
  id: ShareLists_(System.IntPtr,System.IntPtr)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: ShareLists_(nint, nint)
  nameWithType: Wgl.ShareLists_(nint, nint)
  fullName: OpenTK.Graphics.Wgl.Wgl.ShareLists_(nint, nint)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Native.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: ShareLists_
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Native.cs
    startLine: 63
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: '<b>[requires: v1.0]</b> <b>[entry point: <code>wglShareLists</code>]</b><br />'
  example: []
  syntax:
    content: public static int ShareLists_(nint hrcSrvShare, nint hrcSrvSource)
    parameters:
    - id: hrcSrvShare
      type: System.IntPtr
    - id: hrcSrvSource
      type: System.IntPtr
    return:
      type: System.Int32
    content.vb: Public Shared Function ShareLists_(hrcSrvShare As IntPtr, hrcSrvSource As IntPtr) As Integer
  overload: OpenTK.Graphics.Wgl.Wgl.ShareLists_*
  nameWithType.vb: Wgl.ShareLists_(IntPtr, IntPtr)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.ShareLists_(System.IntPtr, System.IntPtr)
  name.vb: ShareLists_(IntPtr, IntPtr)
- uid: OpenTK.Graphics.Wgl.Wgl.SwapBuffers_(System.IntPtr)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.SwapBuffers_(System.IntPtr)
  id: SwapBuffers_(System.IntPtr)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: SwapBuffers_(nint)
  nameWithType: Wgl.SwapBuffers_(nint)
  fullName: OpenTK.Graphics.Wgl.Wgl.SwapBuffers_(nint)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Native.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: SwapBuffers_
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Native.cs
    startLine: 66
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: '<b>[requires: v1.0]</b> <b>[entry point: <code>SwapBuffers</code>]</b><br />'
  example: []
  syntax:
    content: public static int SwapBuffers_(nint hdc)
    parameters:
    - id: hdc
      type: System.IntPtr
    return:
      type: System.Int32
    content.vb: Public Shared Function SwapBuffers_(hdc As IntPtr) As Integer
  overload: OpenTK.Graphics.Wgl.Wgl.SwapBuffers_*
  nameWithType.vb: Wgl.SwapBuffers_(IntPtr)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.SwapBuffers_(System.IntPtr)
  name.vb: SwapBuffers_(IntPtr)
- uid: OpenTK.Graphics.Wgl.Wgl.SwapLayerBuffers_(System.IntPtr,OpenTK.Graphics.Wgl.WGLLayerPlaneMask)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.SwapLayerBuffers_(System.IntPtr,OpenTK.Graphics.Wgl.WGLLayerPlaneMask)
  id: SwapLayerBuffers_(System.IntPtr,OpenTK.Graphics.Wgl.WGLLayerPlaneMask)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: SwapLayerBuffers_(nint, WGLLayerPlaneMask)
  nameWithType: Wgl.SwapLayerBuffers_(nint, WGLLayerPlaneMask)
  fullName: OpenTK.Graphics.Wgl.Wgl.SwapLayerBuffers_(nint, OpenTK.Graphics.Wgl.WGLLayerPlaneMask)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Native.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: SwapLayerBuffers_
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Native.cs
    startLine: 69
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: '<b>[requires: v1.0]</b> <b>[entry point: <code>wglSwapLayerBuffers</code>]</b><br />'
  example: []
  syntax:
    content: public static int SwapLayerBuffers_(nint hdc, WGLLayerPlaneMask fuFlags)
    parameters:
    - id: hdc
      type: System.IntPtr
    - id: fuFlags
      type: OpenTK.Graphics.Wgl.WGLLayerPlaneMask
    return:
      type: System.Int32
    content.vb: Public Shared Function SwapLayerBuffers_(hdc As IntPtr, fuFlags As WGLLayerPlaneMask) As Integer
  overload: OpenTK.Graphics.Wgl.Wgl.SwapLayerBuffers_*
  nameWithType.vb: Wgl.SwapLayerBuffers_(IntPtr, WGLLayerPlaneMask)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.SwapLayerBuffers_(System.IntPtr, OpenTK.Graphics.Wgl.WGLLayerPlaneMask)
  name.vb: SwapLayerBuffers_(IntPtr, WGLLayerPlaneMask)
- uid: OpenTK.Graphics.Wgl.Wgl.UseFontBitmaps_(System.IntPtr,System.UInt32,System.UInt32,System.UInt32)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.UseFontBitmaps_(System.IntPtr,System.UInt32,System.UInt32,System.UInt32)
  id: UseFontBitmaps_(System.IntPtr,System.UInt32,System.UInt32,System.UInt32)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: UseFontBitmaps_(nint, uint, uint, uint)
  nameWithType: Wgl.UseFontBitmaps_(nint, uint, uint, uint)
  fullName: OpenTK.Graphics.Wgl.Wgl.UseFontBitmaps_(nint, uint, uint, uint)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Native.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: UseFontBitmaps_
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Native.cs
    startLine: 72
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: '<b>[requires: v1.0]</b> <b>[entry point: <code>wglUseFontBitmaps</code>]</b><br />'
  example: []
  syntax:
    content: public static int UseFontBitmaps_(nint hDC, uint first, uint count, uint listBase)
    parameters:
    - id: hDC
      type: System.IntPtr
    - id: first
      type: System.UInt32
    - id: count
      type: System.UInt32
    - id: listBase
      type: System.UInt32
    return:
      type: System.Int32
    content.vb: Public Shared Function UseFontBitmaps_(hDC As IntPtr, first As UInteger, count As UInteger, listBase As UInteger) As Integer
  overload: OpenTK.Graphics.Wgl.Wgl.UseFontBitmaps_*
  nameWithType.vb: Wgl.UseFontBitmaps_(IntPtr, UInteger, UInteger, UInteger)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.UseFontBitmaps_(System.IntPtr, UInteger, UInteger, UInteger)
  name.vb: UseFontBitmaps_(IntPtr, UInteger, UInteger, UInteger)
- uid: OpenTK.Graphics.Wgl.Wgl.UseFontBitmapsA_(System.IntPtr,System.UInt32,System.UInt32,System.UInt32)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.UseFontBitmapsA_(System.IntPtr,System.UInt32,System.UInt32,System.UInt32)
  id: UseFontBitmapsA_(System.IntPtr,System.UInt32,System.UInt32,System.UInt32)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: UseFontBitmapsA_(nint, uint, uint, uint)
  nameWithType: Wgl.UseFontBitmapsA_(nint, uint, uint, uint)
  fullName: OpenTK.Graphics.Wgl.Wgl.UseFontBitmapsA_(nint, uint, uint, uint)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Native.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: UseFontBitmapsA_
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Native.cs
    startLine: 75
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: '<b>[requires: v1.0]</b> <b>[entry point: <code>wglUseFontBitmapsA</code>]</b><br />'
  example: []
  syntax:
    content: public static int UseFontBitmapsA_(nint hDC, uint first, uint count, uint listBase)
    parameters:
    - id: hDC
      type: System.IntPtr
    - id: first
      type: System.UInt32
    - id: count
      type: System.UInt32
    - id: listBase
      type: System.UInt32
    return:
      type: System.Int32
    content.vb: Public Shared Function UseFontBitmapsA_(hDC As IntPtr, first As UInteger, count As UInteger, listBase As UInteger) As Integer
  overload: OpenTK.Graphics.Wgl.Wgl.UseFontBitmapsA_*
  nameWithType.vb: Wgl.UseFontBitmapsA_(IntPtr, UInteger, UInteger, UInteger)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.UseFontBitmapsA_(System.IntPtr, UInteger, UInteger, UInteger)
  name.vb: UseFontBitmapsA_(IntPtr, UInteger, UInteger, UInteger)
- uid: OpenTK.Graphics.Wgl.Wgl.UseFontBitmapsW_(System.IntPtr,System.UInt32,System.UInt32,System.UInt32)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.UseFontBitmapsW_(System.IntPtr,System.UInt32,System.UInt32,System.UInt32)
  id: UseFontBitmapsW_(System.IntPtr,System.UInt32,System.UInt32,System.UInt32)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: UseFontBitmapsW_(nint, uint, uint, uint)
  nameWithType: Wgl.UseFontBitmapsW_(nint, uint, uint, uint)
  fullName: OpenTK.Graphics.Wgl.Wgl.UseFontBitmapsW_(nint, uint, uint, uint)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Native.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: UseFontBitmapsW_
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Native.cs
    startLine: 78
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: '<b>[requires: v1.0]</b> <b>[entry point: <code>wglUseFontBitmapsW</code>]</b><br />'
  example: []
  syntax:
    content: public static int UseFontBitmapsW_(nint hDC, uint first, uint count, uint listBase)
    parameters:
    - id: hDC
      type: System.IntPtr
    - id: first
      type: System.UInt32
    - id: count
      type: System.UInt32
    - id: listBase
      type: System.UInt32
    return:
      type: System.Int32
    content.vb: Public Shared Function UseFontBitmapsW_(hDC As IntPtr, first As UInteger, count As UInteger, listBase As UInteger) As Integer
  overload: OpenTK.Graphics.Wgl.Wgl.UseFontBitmapsW_*
  nameWithType.vb: Wgl.UseFontBitmapsW_(IntPtr, UInteger, UInteger, UInteger)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.UseFontBitmapsW_(System.IntPtr, UInteger, UInteger, UInteger)
  name.vb: UseFontBitmapsW_(IntPtr, UInteger, UInteger, UInteger)
- uid: OpenTK.Graphics.Wgl.Wgl.UseFontOutlines_(System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.Single,System.Single,OpenTK.Graphics.Wgl.FontFormat,System.IntPtr)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.UseFontOutlines_(System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.Single,System.Single,OpenTK.Graphics.Wgl.FontFormat,System.IntPtr)
  id: UseFontOutlines_(System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.Single,System.Single,OpenTK.Graphics.Wgl.FontFormat,System.IntPtr)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: UseFontOutlines_(nint, uint, uint, uint, float, float, FontFormat, nint)
  nameWithType: Wgl.UseFontOutlines_(nint, uint, uint, uint, float, float, FontFormat, nint)
  fullName: OpenTK.Graphics.Wgl.Wgl.UseFontOutlines_(nint, uint, uint, uint, float, float, OpenTK.Graphics.Wgl.FontFormat, nint)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Native.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: UseFontOutlines_
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Native.cs
    startLine: 81
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: '<b>[requires: v1.0]</b> <b>[entry point: <code>wglUseFontOutlines</code>]</b><br />'
  example: []
  syntax:
    content: public static int UseFontOutlines_(nint hDC, uint first, uint count, uint listBase, float deviation, float extrusion, FontFormat format, nint lpgmf)
    parameters:
    - id: hDC
      type: System.IntPtr
    - id: first
      type: System.UInt32
    - id: count
      type: System.UInt32
    - id: listBase
      type: System.UInt32
    - id: deviation
      type: System.Single
    - id: extrusion
      type: System.Single
    - id: format
      type: OpenTK.Graphics.Wgl.FontFormat
    - id: lpgmf
      type: System.IntPtr
    return:
      type: System.Int32
    content.vb: Public Shared Function UseFontOutlines_(hDC As IntPtr, first As UInteger, count As UInteger, listBase As UInteger, deviation As Single, extrusion As Single, format As FontFormat, lpgmf As IntPtr) As Integer
  overload: OpenTK.Graphics.Wgl.Wgl.UseFontOutlines_*
  nameWithType.vb: Wgl.UseFontOutlines_(IntPtr, UInteger, UInteger, UInteger, Single, Single, FontFormat, IntPtr)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.UseFontOutlines_(System.IntPtr, UInteger, UInteger, UInteger, Single, Single, OpenTK.Graphics.Wgl.FontFormat, System.IntPtr)
  name.vb: UseFontOutlines_(IntPtr, UInteger, UInteger, UInteger, Single, Single, FontFormat, IntPtr)
- uid: OpenTK.Graphics.Wgl.Wgl.UseFontOutlinesA_(System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.Single,System.Single,OpenTK.Graphics.Wgl.FontFormat,System.IntPtr)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.UseFontOutlinesA_(System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.Single,System.Single,OpenTK.Graphics.Wgl.FontFormat,System.IntPtr)
  id: UseFontOutlinesA_(System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.Single,System.Single,OpenTK.Graphics.Wgl.FontFormat,System.IntPtr)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: UseFontOutlinesA_(nint, uint, uint, uint, float, float, FontFormat, nint)
  nameWithType: Wgl.UseFontOutlinesA_(nint, uint, uint, uint, float, float, FontFormat, nint)
  fullName: OpenTK.Graphics.Wgl.Wgl.UseFontOutlinesA_(nint, uint, uint, uint, float, float, OpenTK.Graphics.Wgl.FontFormat, nint)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Native.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: UseFontOutlinesA_
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Native.cs
    startLine: 84
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: '<b>[requires: v1.0]</b> <b>[entry point: <code>wglUseFontOutlinesA</code>]</b><br />'
  example: []
  syntax:
    content: public static int UseFontOutlinesA_(nint hDC, uint first, uint count, uint listBase, float deviation, float extrusion, FontFormat format, nint lpgmf)
    parameters:
    - id: hDC
      type: System.IntPtr
    - id: first
      type: System.UInt32
    - id: count
      type: System.UInt32
    - id: listBase
      type: System.UInt32
    - id: deviation
      type: System.Single
    - id: extrusion
      type: System.Single
    - id: format
      type: OpenTK.Graphics.Wgl.FontFormat
    - id: lpgmf
      type: System.IntPtr
    return:
      type: System.Int32
    content.vb: Public Shared Function UseFontOutlinesA_(hDC As IntPtr, first As UInteger, count As UInteger, listBase As UInteger, deviation As Single, extrusion As Single, format As FontFormat, lpgmf As IntPtr) As Integer
  overload: OpenTK.Graphics.Wgl.Wgl.UseFontOutlinesA_*
  nameWithType.vb: Wgl.UseFontOutlinesA_(IntPtr, UInteger, UInteger, UInteger, Single, Single, FontFormat, IntPtr)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.UseFontOutlinesA_(System.IntPtr, UInteger, UInteger, UInteger, Single, Single, OpenTK.Graphics.Wgl.FontFormat, System.IntPtr)
  name.vb: UseFontOutlinesA_(IntPtr, UInteger, UInteger, UInteger, Single, Single, FontFormat, IntPtr)
- uid: OpenTK.Graphics.Wgl.Wgl.UseFontOutlinesW_(System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.Single,System.Single,OpenTK.Graphics.Wgl.FontFormat,System.IntPtr)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.UseFontOutlinesW_(System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.Single,System.Single,OpenTK.Graphics.Wgl.FontFormat,System.IntPtr)
  id: UseFontOutlinesW_(System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.Single,System.Single,OpenTK.Graphics.Wgl.FontFormat,System.IntPtr)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: UseFontOutlinesW_(nint, uint, uint, uint, float, float, FontFormat, nint)
  nameWithType: Wgl.UseFontOutlinesW_(nint, uint, uint, uint, float, float, FontFormat, nint)
  fullName: OpenTK.Graphics.Wgl.Wgl.UseFontOutlinesW_(nint, uint, uint, uint, float, float, OpenTK.Graphics.Wgl.FontFormat, nint)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Native.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: UseFontOutlinesW_
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Native.cs
    startLine: 87
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: '<b>[requires: v1.0]</b> <b>[entry point: <code>wglUseFontOutlinesW</code>]</b><br />'
  example: []
  syntax:
    content: public static int UseFontOutlinesW_(nint hDC, uint first, uint count, uint listBase, float deviation, float extrusion, FontFormat format, nint lpgmf)
    parameters:
    - id: hDC
      type: System.IntPtr
    - id: first
      type: System.UInt32
    - id: count
      type: System.UInt32
    - id: listBase
      type: System.UInt32
    - id: deviation
      type: System.Single
    - id: extrusion
      type: System.Single
    - id: format
      type: OpenTK.Graphics.Wgl.FontFormat
    - id: lpgmf
      type: System.IntPtr
    return:
      type: System.Int32
    content.vb: Public Shared Function UseFontOutlinesW_(hDC As IntPtr, first As UInteger, count As UInteger, listBase As UInteger, deviation As Single, extrusion As Single, format As FontFormat, lpgmf As IntPtr) As Integer
  overload: OpenTK.Graphics.Wgl.Wgl.UseFontOutlinesW_*
  nameWithType.vb: Wgl.UseFontOutlinesW_(IntPtr, UInteger, UInteger, UInteger, Single, Single, FontFormat, IntPtr)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.UseFontOutlinesW_(System.IntPtr, UInteger, UInteger, UInteger, Single, Single, OpenTK.Graphics.Wgl.FontFormat, System.IntPtr)
  name.vb: UseFontOutlinesW_(IntPtr, UInteger, UInteger, UInteger, Single, Single, FontFormat, IntPtr)
- uid: OpenTK.Graphics.Wgl.Wgl.ChoosePixelFormat(System.IntPtr,System.ReadOnlySpan{OpenTK.Graphics.Wgl.PixelFormatDescriptor})
  commentId: M:OpenTK.Graphics.Wgl.Wgl.ChoosePixelFormat(System.IntPtr,System.ReadOnlySpan{OpenTK.Graphics.Wgl.PixelFormatDescriptor})
  id: ChoosePixelFormat(System.IntPtr,System.ReadOnlySpan{OpenTK.Graphics.Wgl.PixelFormatDescriptor})
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: ChoosePixelFormat(nint, ReadOnlySpan<PixelFormatDescriptor>)
  nameWithType: Wgl.ChoosePixelFormat(nint, ReadOnlySpan<PixelFormatDescriptor>)
  fullName: OpenTK.Graphics.Wgl.Wgl.ChoosePixelFormat(nint, System.ReadOnlySpan<OpenTK.Graphics.Wgl.PixelFormatDescriptor>)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: ChoosePixelFormat
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
    startLine: 14
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>ChoosePixelFormat</code>]</b>

    <br />
  example: []
  syntax:
    content: public static int ChoosePixelFormat(nint hDc, ReadOnlySpan<PixelFormatDescriptor> pPfd)
    parameters:
    - id: hDc
      type: System.IntPtr
    - id: pPfd
      type: System.ReadOnlySpan{OpenTK.Graphics.Wgl.PixelFormatDescriptor}
    return:
      type: System.Int32
    content.vb: Public Shared Function ChoosePixelFormat(hDc As IntPtr, pPfd As ReadOnlySpan(Of PixelFormatDescriptor)) As Integer
  overload: OpenTK.Graphics.Wgl.Wgl.ChoosePixelFormat*
  nameWithType.vb: Wgl.ChoosePixelFormat(IntPtr, ReadOnlySpan(Of PixelFormatDescriptor))
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.ChoosePixelFormat(System.IntPtr, System.ReadOnlySpan(Of OpenTK.Graphics.Wgl.PixelFormatDescriptor))
  name.vb: ChoosePixelFormat(IntPtr, ReadOnlySpan(Of PixelFormatDescriptor))
- uid: OpenTK.Graphics.Wgl.Wgl.ChoosePixelFormat(System.IntPtr,OpenTK.Graphics.Wgl.PixelFormatDescriptor[])
  commentId: M:OpenTK.Graphics.Wgl.Wgl.ChoosePixelFormat(System.IntPtr,OpenTK.Graphics.Wgl.PixelFormatDescriptor[])
  id: ChoosePixelFormat(System.IntPtr,OpenTK.Graphics.Wgl.PixelFormatDescriptor[])
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: ChoosePixelFormat(nint, PixelFormatDescriptor[])
  nameWithType: Wgl.ChoosePixelFormat(nint, PixelFormatDescriptor[])
  fullName: OpenTK.Graphics.Wgl.Wgl.ChoosePixelFormat(nint, OpenTK.Graphics.Wgl.PixelFormatDescriptor[])
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: ChoosePixelFormat
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
    startLine: 24
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>ChoosePixelFormat</code>]</b>

    <br />
  example: []
  syntax:
    content: public static int ChoosePixelFormat(nint hDc, PixelFormatDescriptor[] pPfd)
    parameters:
    - id: hDc
      type: System.IntPtr
    - id: pPfd
      type: OpenTK.Graphics.Wgl.PixelFormatDescriptor[]
    return:
      type: System.Int32
    content.vb: Public Shared Function ChoosePixelFormat(hDc As IntPtr, pPfd As PixelFormatDescriptor()) As Integer
  overload: OpenTK.Graphics.Wgl.Wgl.ChoosePixelFormat*
  nameWithType.vb: Wgl.ChoosePixelFormat(IntPtr, PixelFormatDescriptor())
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.ChoosePixelFormat(System.IntPtr, OpenTK.Graphics.Wgl.PixelFormatDescriptor())
  name.vb: ChoosePixelFormat(IntPtr, PixelFormatDescriptor())
- uid: OpenTK.Graphics.Wgl.Wgl.ChoosePixelFormat(System.IntPtr,OpenTK.Graphics.Wgl.PixelFormatDescriptor@)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.ChoosePixelFormat(System.IntPtr,OpenTK.Graphics.Wgl.PixelFormatDescriptor@)
  id: ChoosePixelFormat(System.IntPtr,OpenTK.Graphics.Wgl.PixelFormatDescriptor@)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: ChoosePixelFormat(nint, in PixelFormatDescriptor)
  nameWithType: Wgl.ChoosePixelFormat(nint, in PixelFormatDescriptor)
  fullName: OpenTK.Graphics.Wgl.Wgl.ChoosePixelFormat(nint, in OpenTK.Graphics.Wgl.PixelFormatDescriptor)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: ChoosePixelFormat
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
    startLine: 34
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>ChoosePixelFormat</code>]</b>

    <br />
  example: []
  syntax:
    content: public static int ChoosePixelFormat(nint hDc, in PixelFormatDescriptor pPfd)
    parameters:
    - id: hDc
      type: System.IntPtr
    - id: pPfd
      type: OpenTK.Graphics.Wgl.PixelFormatDescriptor
    return:
      type: System.Int32
    content.vb: Public Shared Function ChoosePixelFormat(hDc As IntPtr, pPfd As PixelFormatDescriptor) As Integer
  overload: OpenTK.Graphics.Wgl.Wgl.ChoosePixelFormat*
  nameWithType.vb: Wgl.ChoosePixelFormat(IntPtr, PixelFormatDescriptor)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.ChoosePixelFormat(System.IntPtr, OpenTK.Graphics.Wgl.PixelFormatDescriptor)
  name.vb: ChoosePixelFormat(IntPtr, PixelFormatDescriptor)
- uid: OpenTK.Graphics.Wgl.Wgl.CopyContext(System.IntPtr,System.IntPtr,OpenTK.Graphics.OpenGL.AttribMask)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.CopyContext(System.IntPtr,System.IntPtr,OpenTK.Graphics.OpenGL.AttribMask)
  id: CopyContext(System.IntPtr,System.IntPtr,OpenTK.Graphics.OpenGL.AttribMask)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: CopyContext(nint, nint, AttribMask)
  nameWithType: Wgl.CopyContext(nint, nint, AttribMask)
  fullName: OpenTK.Graphics.Wgl.Wgl.CopyContext(nint, nint, OpenTK.Graphics.OpenGL.AttribMask)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: CopyContext
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
    startLine: 44
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  example: []
  syntax:
    content: public static bool CopyContext(nint hglrcSrc, nint hglrcDst, AttribMask mask)
    parameters:
    - id: hglrcSrc
      type: System.IntPtr
    - id: hglrcDst
      type: System.IntPtr
    - id: mask
      type: OpenTK.Graphics.OpenGL.AttribMask
    return:
      type: System.Boolean
    content.vb: Public Shared Function CopyContext(hglrcSrc As IntPtr, hglrcDst As IntPtr, mask As AttribMask) As Boolean
  overload: OpenTK.Graphics.Wgl.Wgl.CopyContext*
  nameWithType.vb: Wgl.CopyContext(IntPtr, IntPtr, AttribMask)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.CopyContext(System.IntPtr, System.IntPtr, OpenTK.Graphics.OpenGL.AttribMask)
  name.vb: CopyContext(IntPtr, IntPtr, AttribMask)
- uid: OpenTK.Graphics.Wgl.Wgl.DeleteContext(System.IntPtr)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.DeleteContext(System.IntPtr)
  id: DeleteContext(System.IntPtr)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: DeleteContext(nint)
  nameWithType: Wgl.DeleteContext(nint)
  fullName: OpenTK.Graphics.Wgl.Wgl.DeleteContext(nint)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: DeleteContext
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
    startLine: 53
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  example: []
  syntax:
    content: public static bool DeleteContext(nint oldContext)
    parameters:
    - id: oldContext
      type: System.IntPtr
    return:
      type: System.Boolean
    content.vb: Public Shared Function DeleteContext(oldContext As IntPtr) As Boolean
  overload: OpenTK.Graphics.Wgl.Wgl.DeleteContext*
  nameWithType.vb: Wgl.DeleteContext(IntPtr)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.DeleteContext(System.IntPtr)
  name.vb: DeleteContext(IntPtr)
- uid: OpenTK.Graphics.Wgl.Wgl.DescribeLayerPlane(System.IntPtr,System.Int32,System.Int32,System.UInt32,System.Span{OpenTK.Graphics.Wgl.LayerPlaneDescriptor})
  commentId: M:OpenTK.Graphics.Wgl.Wgl.DescribeLayerPlane(System.IntPtr,System.Int32,System.Int32,System.UInt32,System.Span{OpenTK.Graphics.Wgl.LayerPlaneDescriptor})
  id: DescribeLayerPlane(System.IntPtr,System.Int32,System.Int32,System.UInt32,System.Span{OpenTK.Graphics.Wgl.LayerPlaneDescriptor})
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: DescribeLayerPlane(nint, int, int, uint, Span<LayerPlaneDescriptor>)
  nameWithType: Wgl.DescribeLayerPlane(nint, int, int, uint, Span<LayerPlaneDescriptor>)
  fullName: OpenTK.Graphics.Wgl.Wgl.DescribeLayerPlane(nint, int, int, uint, System.Span<OpenTK.Graphics.Wgl.LayerPlaneDescriptor>)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: DescribeLayerPlane
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
    startLine: 62
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>wglDescribeLayerPlane</code>]</b>

    <br />
  example: []
  syntax:
    content: public static bool DescribeLayerPlane(nint hDc, int pixelFormat, int layerPlane, uint nBytes, Span<LayerPlaneDescriptor> plpd)
    parameters:
    - id: hDc
      type: System.IntPtr
    - id: pixelFormat
      type: System.Int32
    - id: layerPlane
      type: System.Int32
    - id: nBytes
      type: System.UInt32
    - id: plpd
      type: System.Span{OpenTK.Graphics.Wgl.LayerPlaneDescriptor}
    return:
      type: System.Boolean
    content.vb: Public Shared Function DescribeLayerPlane(hDc As IntPtr, pixelFormat As Integer, layerPlane As Integer, nBytes As UInteger, plpd As Span(Of LayerPlaneDescriptor)) As Boolean
  overload: OpenTK.Graphics.Wgl.Wgl.DescribeLayerPlane*
  nameWithType.vb: Wgl.DescribeLayerPlane(IntPtr, Integer, Integer, UInteger, Span(Of LayerPlaneDescriptor))
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.DescribeLayerPlane(System.IntPtr, Integer, Integer, UInteger, System.Span(Of OpenTK.Graphics.Wgl.LayerPlaneDescriptor))
  name.vb: DescribeLayerPlane(IntPtr, Integer, Integer, UInteger, Span(Of LayerPlaneDescriptor))
- uid: OpenTK.Graphics.Wgl.Wgl.DescribeLayerPlane(System.IntPtr,System.Int32,System.Int32,System.UInt32,OpenTK.Graphics.Wgl.LayerPlaneDescriptor[])
  commentId: M:OpenTK.Graphics.Wgl.Wgl.DescribeLayerPlane(System.IntPtr,System.Int32,System.Int32,System.UInt32,OpenTK.Graphics.Wgl.LayerPlaneDescriptor[])
  id: DescribeLayerPlane(System.IntPtr,System.Int32,System.Int32,System.UInt32,OpenTK.Graphics.Wgl.LayerPlaneDescriptor[])
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: DescribeLayerPlane(nint, int, int, uint, LayerPlaneDescriptor[])
  nameWithType: Wgl.DescribeLayerPlane(nint, int, int, uint, LayerPlaneDescriptor[])
  fullName: OpenTK.Graphics.Wgl.Wgl.DescribeLayerPlane(nint, int, int, uint, OpenTK.Graphics.Wgl.LayerPlaneDescriptor[])
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: DescribeLayerPlane
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
    startLine: 74
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>wglDescribeLayerPlane</code>]</b>

    <br />
  example: []
  syntax:
    content: public static bool DescribeLayerPlane(nint hDc, int pixelFormat, int layerPlane, uint nBytes, LayerPlaneDescriptor[] plpd)
    parameters:
    - id: hDc
      type: System.IntPtr
    - id: pixelFormat
      type: System.Int32
    - id: layerPlane
      type: System.Int32
    - id: nBytes
      type: System.UInt32
    - id: plpd
      type: OpenTK.Graphics.Wgl.LayerPlaneDescriptor[]
    return:
      type: System.Boolean
    content.vb: Public Shared Function DescribeLayerPlane(hDc As IntPtr, pixelFormat As Integer, layerPlane As Integer, nBytes As UInteger, plpd As LayerPlaneDescriptor()) As Boolean
  overload: OpenTK.Graphics.Wgl.Wgl.DescribeLayerPlane*
  nameWithType.vb: Wgl.DescribeLayerPlane(IntPtr, Integer, Integer, UInteger, LayerPlaneDescriptor())
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.DescribeLayerPlane(System.IntPtr, Integer, Integer, UInteger, OpenTK.Graphics.Wgl.LayerPlaneDescriptor())
  name.vb: DescribeLayerPlane(IntPtr, Integer, Integer, UInteger, LayerPlaneDescriptor())
- uid: OpenTK.Graphics.Wgl.Wgl.DescribeLayerPlane(System.IntPtr,System.Int32,System.Int32,System.UInt32,OpenTK.Graphics.Wgl.LayerPlaneDescriptor@)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.DescribeLayerPlane(System.IntPtr,System.Int32,System.Int32,System.UInt32,OpenTK.Graphics.Wgl.LayerPlaneDescriptor@)
  id: DescribeLayerPlane(System.IntPtr,System.Int32,System.Int32,System.UInt32,OpenTK.Graphics.Wgl.LayerPlaneDescriptor@)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: DescribeLayerPlane(nint, int, int, uint, ref LayerPlaneDescriptor)
  nameWithType: Wgl.DescribeLayerPlane(nint, int, int, uint, ref LayerPlaneDescriptor)
  fullName: OpenTK.Graphics.Wgl.Wgl.DescribeLayerPlane(nint, int, int, uint, ref OpenTK.Graphics.Wgl.LayerPlaneDescriptor)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: DescribeLayerPlane
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
    startLine: 86
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>wglDescribeLayerPlane</code>]</b>

    <br />
  example: []
  syntax:
    content: public static bool DescribeLayerPlane(nint hDc, int pixelFormat, int layerPlane, uint nBytes, ref LayerPlaneDescriptor plpd)
    parameters:
    - id: hDc
      type: System.IntPtr
    - id: pixelFormat
      type: System.Int32
    - id: layerPlane
      type: System.Int32
    - id: nBytes
      type: System.UInt32
    - id: plpd
      type: OpenTK.Graphics.Wgl.LayerPlaneDescriptor
    return:
      type: System.Boolean
    content.vb: Public Shared Function DescribeLayerPlane(hDc As IntPtr, pixelFormat As Integer, layerPlane As Integer, nBytes As UInteger, plpd As LayerPlaneDescriptor) As Boolean
  overload: OpenTK.Graphics.Wgl.Wgl.DescribeLayerPlane*
  nameWithType.vb: Wgl.DescribeLayerPlane(IntPtr, Integer, Integer, UInteger, LayerPlaneDescriptor)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.DescribeLayerPlane(System.IntPtr, Integer, Integer, UInteger, OpenTK.Graphics.Wgl.LayerPlaneDescriptor)
  name.vb: DescribeLayerPlane(IntPtr, Integer, Integer, UInteger, LayerPlaneDescriptor)
- uid: OpenTK.Graphics.Wgl.Wgl.DescribePixelFormat(System.IntPtr,System.Int32,System.UInt32,System.Span{OpenTK.Graphics.Wgl.PixelFormatDescriptor})
  commentId: M:OpenTK.Graphics.Wgl.Wgl.DescribePixelFormat(System.IntPtr,System.Int32,System.UInt32,System.Span{OpenTK.Graphics.Wgl.PixelFormatDescriptor})
  id: DescribePixelFormat(System.IntPtr,System.Int32,System.UInt32,System.Span{OpenTK.Graphics.Wgl.PixelFormatDescriptor})
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: DescribePixelFormat(nint, int, uint, Span<PixelFormatDescriptor>)
  nameWithType: Wgl.DescribePixelFormat(nint, int, uint, Span<PixelFormatDescriptor>)
  fullName: OpenTK.Graphics.Wgl.Wgl.DescribePixelFormat(nint, int, uint, System.Span<OpenTK.Graphics.Wgl.PixelFormatDescriptor>)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: DescribePixelFormat
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
    startLine: 98
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>DescribePixelFormat</code>]</b>

    <br />
  example: []
  syntax:
    content: public static int DescribePixelFormat(nint hdc, int ipfd, uint cjpfd, Span<PixelFormatDescriptor> ppfd)
    parameters:
    - id: hdc
      type: System.IntPtr
    - id: ipfd
      type: System.Int32
    - id: cjpfd
      type: System.UInt32
    - id: ppfd
      type: System.Span{OpenTK.Graphics.Wgl.PixelFormatDescriptor}
    return:
      type: System.Int32
    content.vb: Public Shared Function DescribePixelFormat(hdc As IntPtr, ipfd As Integer, cjpfd As UInteger, ppfd As Span(Of PixelFormatDescriptor)) As Integer
  overload: OpenTK.Graphics.Wgl.Wgl.DescribePixelFormat*
  nameWithType.vb: Wgl.DescribePixelFormat(IntPtr, Integer, UInteger, Span(Of PixelFormatDescriptor))
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.DescribePixelFormat(System.IntPtr, Integer, UInteger, System.Span(Of OpenTK.Graphics.Wgl.PixelFormatDescriptor))
  name.vb: DescribePixelFormat(IntPtr, Integer, UInteger, Span(Of PixelFormatDescriptor))
- uid: OpenTK.Graphics.Wgl.Wgl.DescribePixelFormat(System.IntPtr,System.Int32,System.UInt32,OpenTK.Graphics.Wgl.PixelFormatDescriptor[])
  commentId: M:OpenTK.Graphics.Wgl.Wgl.DescribePixelFormat(System.IntPtr,System.Int32,System.UInt32,OpenTK.Graphics.Wgl.PixelFormatDescriptor[])
  id: DescribePixelFormat(System.IntPtr,System.Int32,System.UInt32,OpenTK.Graphics.Wgl.PixelFormatDescriptor[])
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: DescribePixelFormat(nint, int, uint, PixelFormatDescriptor[])
  nameWithType: Wgl.DescribePixelFormat(nint, int, uint, PixelFormatDescriptor[])
  fullName: OpenTK.Graphics.Wgl.Wgl.DescribePixelFormat(nint, int, uint, OpenTK.Graphics.Wgl.PixelFormatDescriptor[])
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: DescribePixelFormat
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
    startLine: 108
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>DescribePixelFormat</code>]</b>

    <br />
  example: []
  syntax:
    content: public static int DescribePixelFormat(nint hdc, int ipfd, uint cjpfd, PixelFormatDescriptor[] ppfd)
    parameters:
    - id: hdc
      type: System.IntPtr
    - id: ipfd
      type: System.Int32
    - id: cjpfd
      type: System.UInt32
    - id: ppfd
      type: OpenTK.Graphics.Wgl.PixelFormatDescriptor[]
    return:
      type: System.Int32
    content.vb: Public Shared Function DescribePixelFormat(hdc As IntPtr, ipfd As Integer, cjpfd As UInteger, ppfd As PixelFormatDescriptor()) As Integer
  overload: OpenTK.Graphics.Wgl.Wgl.DescribePixelFormat*
  nameWithType.vb: Wgl.DescribePixelFormat(IntPtr, Integer, UInteger, PixelFormatDescriptor())
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.DescribePixelFormat(System.IntPtr, Integer, UInteger, OpenTK.Graphics.Wgl.PixelFormatDescriptor())
  name.vb: DescribePixelFormat(IntPtr, Integer, UInteger, PixelFormatDescriptor())
- uid: OpenTK.Graphics.Wgl.Wgl.DescribePixelFormat(System.IntPtr,System.Int32,System.UInt32,OpenTK.Graphics.Wgl.PixelFormatDescriptor@)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.DescribePixelFormat(System.IntPtr,System.Int32,System.UInt32,OpenTK.Graphics.Wgl.PixelFormatDescriptor@)
  id: DescribePixelFormat(System.IntPtr,System.Int32,System.UInt32,OpenTK.Graphics.Wgl.PixelFormatDescriptor@)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: DescribePixelFormat(nint, int, uint, ref PixelFormatDescriptor)
  nameWithType: Wgl.DescribePixelFormat(nint, int, uint, ref PixelFormatDescriptor)
  fullName: OpenTK.Graphics.Wgl.Wgl.DescribePixelFormat(nint, int, uint, ref OpenTK.Graphics.Wgl.PixelFormatDescriptor)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: DescribePixelFormat
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
    startLine: 118
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>DescribePixelFormat</code>]</b>

    <br />
  example: []
  syntax:
    content: public static int DescribePixelFormat(nint hdc, int ipfd, uint cjpfd, ref PixelFormatDescriptor ppfd)
    parameters:
    - id: hdc
      type: System.IntPtr
    - id: ipfd
      type: System.Int32
    - id: cjpfd
      type: System.UInt32
    - id: ppfd
      type: OpenTK.Graphics.Wgl.PixelFormatDescriptor
    return:
      type: System.Int32
    content.vb: Public Shared Function DescribePixelFormat(hdc As IntPtr, ipfd As Integer, cjpfd As UInteger, ppfd As PixelFormatDescriptor) As Integer
  overload: OpenTK.Graphics.Wgl.Wgl.DescribePixelFormat*
  nameWithType.vb: Wgl.DescribePixelFormat(IntPtr, Integer, UInteger, PixelFormatDescriptor)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.DescribePixelFormat(System.IntPtr, Integer, UInteger, OpenTK.Graphics.Wgl.PixelFormatDescriptor)
  name.vb: DescribePixelFormat(IntPtr, Integer, UInteger, PixelFormatDescriptor)
- uid: OpenTK.Graphics.Wgl.Wgl.GetEnhMetaFilePixelFormat(System.IntPtr,System.UInt32,System.Span{OpenTK.Graphics.Wgl.PixelFormatDescriptor})
  commentId: M:OpenTK.Graphics.Wgl.Wgl.GetEnhMetaFilePixelFormat(System.IntPtr,System.UInt32,System.Span{OpenTK.Graphics.Wgl.PixelFormatDescriptor})
  id: GetEnhMetaFilePixelFormat(System.IntPtr,System.UInt32,System.Span{OpenTK.Graphics.Wgl.PixelFormatDescriptor})
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: GetEnhMetaFilePixelFormat(nint, uint, Span<PixelFormatDescriptor>)
  nameWithType: Wgl.GetEnhMetaFilePixelFormat(nint, uint, Span<PixelFormatDescriptor>)
  fullName: OpenTK.Graphics.Wgl.Wgl.GetEnhMetaFilePixelFormat(nint, uint, System.Span<OpenTK.Graphics.Wgl.PixelFormatDescriptor>)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: GetEnhMetaFilePixelFormat
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
    startLine: 128
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>GetEnhMetaFilePixelFormat</code>]</b>

    <br />
  example: []
  syntax:
    content: public static uint GetEnhMetaFilePixelFormat(nint hemf, uint cbBuffer, Span<PixelFormatDescriptor> ppfd)
    parameters:
    - id: hemf
      type: System.IntPtr
    - id: cbBuffer
      type: System.UInt32
    - id: ppfd
      type: System.Span{OpenTK.Graphics.Wgl.PixelFormatDescriptor}
    return:
      type: System.UInt32
    content.vb: Public Shared Function GetEnhMetaFilePixelFormat(hemf As IntPtr, cbBuffer As UInteger, ppfd As Span(Of PixelFormatDescriptor)) As UInteger
  overload: OpenTK.Graphics.Wgl.Wgl.GetEnhMetaFilePixelFormat*
  nameWithType.vb: Wgl.GetEnhMetaFilePixelFormat(IntPtr, UInteger, Span(Of PixelFormatDescriptor))
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.GetEnhMetaFilePixelFormat(System.IntPtr, UInteger, System.Span(Of OpenTK.Graphics.Wgl.PixelFormatDescriptor))
  name.vb: GetEnhMetaFilePixelFormat(IntPtr, UInteger, Span(Of PixelFormatDescriptor))
- uid: OpenTK.Graphics.Wgl.Wgl.GetEnhMetaFilePixelFormat(System.IntPtr,System.UInt32,OpenTK.Graphics.Wgl.PixelFormatDescriptor[])
  commentId: M:OpenTK.Graphics.Wgl.Wgl.GetEnhMetaFilePixelFormat(System.IntPtr,System.UInt32,OpenTK.Graphics.Wgl.PixelFormatDescriptor[])
  id: GetEnhMetaFilePixelFormat(System.IntPtr,System.UInt32,OpenTK.Graphics.Wgl.PixelFormatDescriptor[])
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: GetEnhMetaFilePixelFormat(nint, uint, PixelFormatDescriptor[])
  nameWithType: Wgl.GetEnhMetaFilePixelFormat(nint, uint, PixelFormatDescriptor[])
  fullName: OpenTK.Graphics.Wgl.Wgl.GetEnhMetaFilePixelFormat(nint, uint, OpenTK.Graphics.Wgl.PixelFormatDescriptor[])
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: GetEnhMetaFilePixelFormat
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
    startLine: 138
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>GetEnhMetaFilePixelFormat</code>]</b>

    <br />
  example: []
  syntax:
    content: public static uint GetEnhMetaFilePixelFormat(nint hemf, uint cbBuffer, PixelFormatDescriptor[] ppfd)
    parameters:
    - id: hemf
      type: System.IntPtr
    - id: cbBuffer
      type: System.UInt32
    - id: ppfd
      type: OpenTK.Graphics.Wgl.PixelFormatDescriptor[]
    return:
      type: System.UInt32
    content.vb: Public Shared Function GetEnhMetaFilePixelFormat(hemf As IntPtr, cbBuffer As UInteger, ppfd As PixelFormatDescriptor()) As UInteger
  overload: OpenTK.Graphics.Wgl.Wgl.GetEnhMetaFilePixelFormat*
  nameWithType.vb: Wgl.GetEnhMetaFilePixelFormat(IntPtr, UInteger, PixelFormatDescriptor())
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.GetEnhMetaFilePixelFormat(System.IntPtr, UInteger, OpenTK.Graphics.Wgl.PixelFormatDescriptor())
  name.vb: GetEnhMetaFilePixelFormat(IntPtr, UInteger, PixelFormatDescriptor())
- uid: OpenTK.Graphics.Wgl.Wgl.GetEnhMetaFilePixelFormat(System.IntPtr,System.UInt32,OpenTK.Graphics.Wgl.PixelFormatDescriptor@)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.GetEnhMetaFilePixelFormat(System.IntPtr,System.UInt32,OpenTK.Graphics.Wgl.PixelFormatDescriptor@)
  id: GetEnhMetaFilePixelFormat(System.IntPtr,System.UInt32,OpenTK.Graphics.Wgl.PixelFormatDescriptor@)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: GetEnhMetaFilePixelFormat(nint, uint, ref PixelFormatDescriptor)
  nameWithType: Wgl.GetEnhMetaFilePixelFormat(nint, uint, ref PixelFormatDescriptor)
  fullName: OpenTK.Graphics.Wgl.Wgl.GetEnhMetaFilePixelFormat(nint, uint, ref OpenTK.Graphics.Wgl.PixelFormatDescriptor)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: GetEnhMetaFilePixelFormat
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
    startLine: 148
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>GetEnhMetaFilePixelFormat</code>]</b>

    <br />
  example: []
  syntax:
    content: public static uint GetEnhMetaFilePixelFormat(nint hemf, uint cbBuffer, ref PixelFormatDescriptor ppfd)
    parameters:
    - id: hemf
      type: System.IntPtr
    - id: cbBuffer
      type: System.UInt32
    - id: ppfd
      type: OpenTK.Graphics.Wgl.PixelFormatDescriptor
    return:
      type: System.UInt32
    content.vb: Public Shared Function GetEnhMetaFilePixelFormat(hemf As IntPtr, cbBuffer As UInteger, ppfd As PixelFormatDescriptor) As UInteger
  overload: OpenTK.Graphics.Wgl.Wgl.GetEnhMetaFilePixelFormat*
  nameWithType.vb: Wgl.GetEnhMetaFilePixelFormat(IntPtr, UInteger, PixelFormatDescriptor)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.GetEnhMetaFilePixelFormat(System.IntPtr, UInteger, OpenTK.Graphics.Wgl.PixelFormatDescriptor)
  name.vb: GetEnhMetaFilePixelFormat(IntPtr, UInteger, PixelFormatDescriptor)
- uid: OpenTK.Graphics.Wgl.Wgl.GetLayerPaletteEntries(System.IntPtr,System.Int32,System.Int32,System.Span{OpenTK.Graphics.Wgl.ColorRef})
  commentId: M:OpenTK.Graphics.Wgl.Wgl.GetLayerPaletteEntries(System.IntPtr,System.Int32,System.Int32,System.Span{OpenTK.Graphics.Wgl.ColorRef})
  id: GetLayerPaletteEntries(System.IntPtr,System.Int32,System.Int32,System.Span{OpenTK.Graphics.Wgl.ColorRef})
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: GetLayerPaletteEntries(nint, int, int, Span<ColorRef>)
  nameWithType: Wgl.GetLayerPaletteEntries(nint, int, int, Span<ColorRef>)
  fullName: OpenTK.Graphics.Wgl.Wgl.GetLayerPaletteEntries(nint, int, int, System.Span<OpenTK.Graphics.Wgl.ColorRef>)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: GetLayerPaletteEntries
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
    startLine: 158
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>wglGetLayerPaletteEntries</code>]</b>

    <br />
  example: []
  syntax:
    content: public static int GetLayerPaletteEntries(nint hdc, int iLayerPlane, int iStart, Span<ColorRef> pcr)
    parameters:
    - id: hdc
      type: System.IntPtr
    - id: iLayerPlane
      type: System.Int32
    - id: iStart
      type: System.Int32
    - id: pcr
      type: System.Span{OpenTK.Graphics.Wgl.ColorRef}
    return:
      type: System.Int32
    content.vb: Public Shared Function GetLayerPaletteEntries(hdc As IntPtr, iLayerPlane As Integer, iStart As Integer, pcr As Span(Of ColorRef)) As Integer
  overload: OpenTK.Graphics.Wgl.Wgl.GetLayerPaletteEntries*
  nameWithType.vb: Wgl.GetLayerPaletteEntries(IntPtr, Integer, Integer, Span(Of ColorRef))
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.GetLayerPaletteEntries(System.IntPtr, Integer, Integer, System.Span(Of OpenTK.Graphics.Wgl.ColorRef))
  name.vb: GetLayerPaletteEntries(IntPtr, Integer, Integer, Span(Of ColorRef))
- uid: OpenTK.Graphics.Wgl.Wgl.GetLayerPaletteEntries(System.IntPtr,System.Int32,System.Int32,OpenTK.Graphics.Wgl.ColorRef[])
  commentId: M:OpenTK.Graphics.Wgl.Wgl.GetLayerPaletteEntries(System.IntPtr,System.Int32,System.Int32,OpenTK.Graphics.Wgl.ColorRef[])
  id: GetLayerPaletteEntries(System.IntPtr,System.Int32,System.Int32,OpenTK.Graphics.Wgl.ColorRef[])
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: GetLayerPaletteEntries(nint, int, int, ColorRef[])
  nameWithType: Wgl.GetLayerPaletteEntries(nint, int, int, ColorRef[])
  fullName: OpenTK.Graphics.Wgl.Wgl.GetLayerPaletteEntries(nint, int, int, OpenTK.Graphics.Wgl.ColorRef[])
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: GetLayerPaletteEntries
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
    startLine: 169
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>wglGetLayerPaletteEntries</code>]</b>

    <br />
  example: []
  syntax:
    content: public static int GetLayerPaletteEntries(nint hdc, int iLayerPlane, int iStart, ColorRef[] pcr)
    parameters:
    - id: hdc
      type: System.IntPtr
    - id: iLayerPlane
      type: System.Int32
    - id: iStart
      type: System.Int32
    - id: pcr
      type: OpenTK.Graphics.Wgl.ColorRef[]
    return:
      type: System.Int32
    content.vb: Public Shared Function GetLayerPaletteEntries(hdc As IntPtr, iLayerPlane As Integer, iStart As Integer, pcr As ColorRef()) As Integer
  overload: OpenTK.Graphics.Wgl.Wgl.GetLayerPaletteEntries*
  nameWithType.vb: Wgl.GetLayerPaletteEntries(IntPtr, Integer, Integer, ColorRef())
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.GetLayerPaletteEntries(System.IntPtr, Integer, Integer, OpenTK.Graphics.Wgl.ColorRef())
  name.vb: GetLayerPaletteEntries(IntPtr, Integer, Integer, ColorRef())
- uid: OpenTK.Graphics.Wgl.Wgl.GetLayerPaletteEntries(System.IntPtr,System.Int32,System.Int32,System.Int32,OpenTK.Graphics.Wgl.ColorRef@)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.GetLayerPaletteEntries(System.IntPtr,System.Int32,System.Int32,System.Int32,OpenTK.Graphics.Wgl.ColorRef@)
  id: GetLayerPaletteEntries(System.IntPtr,System.Int32,System.Int32,System.Int32,OpenTK.Graphics.Wgl.ColorRef@)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: GetLayerPaletteEntries(nint, int, int, int, ref ColorRef)
  nameWithType: Wgl.GetLayerPaletteEntries(nint, int, int, int, ref ColorRef)
  fullName: OpenTK.Graphics.Wgl.Wgl.GetLayerPaletteEntries(nint, int, int, int, ref OpenTK.Graphics.Wgl.ColorRef)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: GetLayerPaletteEntries
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
    startLine: 180
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>wglGetLayerPaletteEntries</code>]</b>

    <br />
  example: []
  syntax:
    content: public static int GetLayerPaletteEntries(nint hdc, int iLayerPlane, int iStart, int cEntries, ref ColorRef pcr)
    parameters:
    - id: hdc
      type: System.IntPtr
    - id: iLayerPlane
      type: System.Int32
    - id: iStart
      type: System.Int32
    - id: cEntries
      type: System.Int32
    - id: pcr
      type: OpenTK.Graphics.Wgl.ColorRef
    return:
      type: System.Int32
    content.vb: Public Shared Function GetLayerPaletteEntries(hdc As IntPtr, iLayerPlane As Integer, iStart As Integer, cEntries As Integer, pcr As ColorRef) As Integer
  overload: OpenTK.Graphics.Wgl.Wgl.GetLayerPaletteEntries*
  nameWithType.vb: Wgl.GetLayerPaletteEntries(IntPtr, Integer, Integer, Integer, ColorRef)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.GetLayerPaletteEntries(System.IntPtr, Integer, Integer, Integer, OpenTK.Graphics.Wgl.ColorRef)
  name.vb: GetLayerPaletteEntries(IntPtr, Integer, Integer, Integer, ColorRef)
- uid: OpenTK.Graphics.Wgl.Wgl.GetProcAddress(System.String)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.GetProcAddress(System.String)
  id: GetProcAddress(System.String)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: GetProcAddress(string)
  nameWithType: Wgl.GetProcAddress(string)
  fullName: OpenTK.Graphics.Wgl.Wgl.GetProcAddress(string)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: GetProcAddress
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
    startLine: 190
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>wglGetProcAddress</code>]</b>

    <br />
  example: []
  syntax:
    content: public static nint GetProcAddress(string lpszProc)
    parameters:
    - id: lpszProc
      type: System.String
    return:
      type: System.IntPtr
    content.vb: Public Shared Function GetProcAddress(lpszProc As String) As IntPtr
  overload: OpenTK.Graphics.Wgl.Wgl.GetProcAddress*
  nameWithType.vb: Wgl.GetProcAddress(String)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.GetProcAddress(String)
  name.vb: GetProcAddress(String)
- uid: OpenTK.Graphics.Wgl.Wgl.MakeCurrent(System.IntPtr,System.IntPtr)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.MakeCurrent(System.IntPtr,System.IntPtr)
  id: MakeCurrent(System.IntPtr,System.IntPtr)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: MakeCurrent(nint, nint)
  nameWithType: Wgl.MakeCurrent(nint, nint)
  fullName: OpenTK.Graphics.Wgl.Wgl.MakeCurrent(nint, nint)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: MakeCurrent
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
    startLine: 199
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  example: []
  syntax:
    content: public static bool MakeCurrent(nint hDc, nint newContext)
    parameters:
    - id: hDc
      type: System.IntPtr
    - id: newContext
      type: System.IntPtr
    return:
      type: System.Boolean
    content.vb: Public Shared Function MakeCurrent(hDc As IntPtr, newContext As IntPtr) As Boolean
  overload: OpenTK.Graphics.Wgl.Wgl.MakeCurrent*
  nameWithType.vb: Wgl.MakeCurrent(IntPtr, IntPtr)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.MakeCurrent(System.IntPtr, System.IntPtr)
  name.vb: MakeCurrent(IntPtr, IntPtr)
- uid: OpenTK.Graphics.Wgl.Wgl.RealizeLayerPalette(System.IntPtr,System.Int32,System.Int32)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.RealizeLayerPalette(System.IntPtr,System.Int32,System.Int32)
  id: RealizeLayerPalette(System.IntPtr,System.Int32,System.Int32)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: RealizeLayerPalette(nint, int, int)
  nameWithType: Wgl.RealizeLayerPalette(nint, int, int)
  fullName: OpenTK.Graphics.Wgl.Wgl.RealizeLayerPalette(nint, int, int)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: RealizeLayerPalette
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
    startLine: 208
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  example: []
  syntax:
    content: public static bool RealizeLayerPalette(nint hdc, int iLayerPlane, int bRealize)
    parameters:
    - id: hdc
      type: System.IntPtr
    - id: iLayerPlane
      type: System.Int32
    - id: bRealize
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function RealizeLayerPalette(hdc As IntPtr, iLayerPlane As Integer, bRealize As Integer) As Boolean
  overload: OpenTK.Graphics.Wgl.Wgl.RealizeLayerPalette*
  nameWithType.vb: Wgl.RealizeLayerPalette(IntPtr, Integer, Integer)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.RealizeLayerPalette(System.IntPtr, Integer, Integer)
  name.vb: RealizeLayerPalette(IntPtr, Integer, Integer)
- uid: OpenTK.Graphics.Wgl.Wgl.SetLayerPaletteEntries(System.IntPtr,System.Int32,System.Int32,System.ReadOnlySpan{OpenTK.Graphics.Wgl.ColorRef})
  commentId: M:OpenTK.Graphics.Wgl.Wgl.SetLayerPaletteEntries(System.IntPtr,System.Int32,System.Int32,System.ReadOnlySpan{OpenTK.Graphics.Wgl.ColorRef})
  id: SetLayerPaletteEntries(System.IntPtr,System.Int32,System.Int32,System.ReadOnlySpan{OpenTK.Graphics.Wgl.ColorRef})
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: SetLayerPaletteEntries(nint, int, int, ReadOnlySpan<ColorRef>)
  nameWithType: Wgl.SetLayerPaletteEntries(nint, int, int, ReadOnlySpan<ColorRef>)
  fullName: OpenTK.Graphics.Wgl.Wgl.SetLayerPaletteEntries(nint, int, int, System.ReadOnlySpan<OpenTK.Graphics.Wgl.ColorRef>)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: SetLayerPaletteEntries
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
    startLine: 217
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>wglSetLayerPaletteEntries</code>]</b>

    <br />
  example: []
  syntax:
    content: public static int SetLayerPaletteEntries(nint hdc, int iLayerPlane, int iStart, ReadOnlySpan<ColorRef> pcr)
    parameters:
    - id: hdc
      type: System.IntPtr
    - id: iLayerPlane
      type: System.Int32
    - id: iStart
      type: System.Int32
    - id: pcr
      type: System.ReadOnlySpan{OpenTK.Graphics.Wgl.ColorRef}
    return:
      type: System.Int32
    content.vb: Public Shared Function SetLayerPaletteEntries(hdc As IntPtr, iLayerPlane As Integer, iStart As Integer, pcr As ReadOnlySpan(Of ColorRef)) As Integer
  overload: OpenTK.Graphics.Wgl.Wgl.SetLayerPaletteEntries*
  nameWithType.vb: Wgl.SetLayerPaletteEntries(IntPtr, Integer, Integer, ReadOnlySpan(Of ColorRef))
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.SetLayerPaletteEntries(System.IntPtr, Integer, Integer, System.ReadOnlySpan(Of OpenTK.Graphics.Wgl.ColorRef))
  name.vb: SetLayerPaletteEntries(IntPtr, Integer, Integer, ReadOnlySpan(Of ColorRef))
- uid: OpenTK.Graphics.Wgl.Wgl.SetLayerPaletteEntries(System.IntPtr,System.Int32,System.Int32,OpenTK.Graphics.Wgl.ColorRef[])
  commentId: M:OpenTK.Graphics.Wgl.Wgl.SetLayerPaletteEntries(System.IntPtr,System.Int32,System.Int32,OpenTK.Graphics.Wgl.ColorRef[])
  id: SetLayerPaletteEntries(System.IntPtr,System.Int32,System.Int32,OpenTK.Graphics.Wgl.ColorRef[])
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: SetLayerPaletteEntries(nint, int, int, ColorRef[])
  nameWithType: Wgl.SetLayerPaletteEntries(nint, int, int, ColorRef[])
  fullName: OpenTK.Graphics.Wgl.Wgl.SetLayerPaletteEntries(nint, int, int, OpenTK.Graphics.Wgl.ColorRef[])
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: SetLayerPaletteEntries
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
    startLine: 228
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>wglSetLayerPaletteEntries</code>]</b>

    <br />
  example: []
  syntax:
    content: public static int SetLayerPaletteEntries(nint hdc, int iLayerPlane, int iStart, ColorRef[] pcr)
    parameters:
    - id: hdc
      type: System.IntPtr
    - id: iLayerPlane
      type: System.Int32
    - id: iStart
      type: System.Int32
    - id: pcr
      type: OpenTK.Graphics.Wgl.ColorRef[]
    return:
      type: System.Int32
    content.vb: Public Shared Function SetLayerPaletteEntries(hdc As IntPtr, iLayerPlane As Integer, iStart As Integer, pcr As ColorRef()) As Integer
  overload: OpenTK.Graphics.Wgl.Wgl.SetLayerPaletteEntries*
  nameWithType.vb: Wgl.SetLayerPaletteEntries(IntPtr, Integer, Integer, ColorRef())
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.SetLayerPaletteEntries(System.IntPtr, Integer, Integer, OpenTK.Graphics.Wgl.ColorRef())
  name.vb: SetLayerPaletteEntries(IntPtr, Integer, Integer, ColorRef())
- uid: OpenTK.Graphics.Wgl.Wgl.SetLayerPaletteEntries(System.IntPtr,System.Int32,System.Int32,System.Int32,OpenTK.Graphics.Wgl.ColorRef@)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.SetLayerPaletteEntries(System.IntPtr,System.Int32,System.Int32,System.Int32,OpenTK.Graphics.Wgl.ColorRef@)
  id: SetLayerPaletteEntries(System.IntPtr,System.Int32,System.Int32,System.Int32,OpenTK.Graphics.Wgl.ColorRef@)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: SetLayerPaletteEntries(nint, int, int, int, in ColorRef)
  nameWithType: Wgl.SetLayerPaletteEntries(nint, int, int, int, in ColorRef)
  fullName: OpenTK.Graphics.Wgl.Wgl.SetLayerPaletteEntries(nint, int, int, int, in OpenTK.Graphics.Wgl.ColorRef)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: SetLayerPaletteEntries
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
    startLine: 239
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>wglSetLayerPaletteEntries</code>]</b>

    <br />
  example: []
  syntax:
    content: public static int SetLayerPaletteEntries(nint hdc, int iLayerPlane, int iStart, int cEntries, in ColorRef pcr)
    parameters:
    - id: hdc
      type: System.IntPtr
    - id: iLayerPlane
      type: System.Int32
    - id: iStart
      type: System.Int32
    - id: cEntries
      type: System.Int32
    - id: pcr
      type: OpenTK.Graphics.Wgl.ColorRef
    return:
      type: System.Int32
    content.vb: Public Shared Function SetLayerPaletteEntries(hdc As IntPtr, iLayerPlane As Integer, iStart As Integer, cEntries As Integer, pcr As ColorRef) As Integer
  overload: OpenTK.Graphics.Wgl.Wgl.SetLayerPaletteEntries*
  nameWithType.vb: Wgl.SetLayerPaletteEntries(IntPtr, Integer, Integer, Integer, ColorRef)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.SetLayerPaletteEntries(System.IntPtr, Integer, Integer, Integer, OpenTK.Graphics.Wgl.ColorRef)
  name.vb: SetLayerPaletteEntries(IntPtr, Integer, Integer, Integer, ColorRef)
- uid: OpenTK.Graphics.Wgl.Wgl.SetPixelFormat(System.IntPtr,System.Int32,System.ReadOnlySpan{OpenTK.Graphics.Wgl.PixelFormatDescriptor})
  commentId: M:OpenTK.Graphics.Wgl.Wgl.SetPixelFormat(System.IntPtr,System.Int32,System.ReadOnlySpan{OpenTK.Graphics.Wgl.PixelFormatDescriptor})
  id: SetPixelFormat(System.IntPtr,System.Int32,System.ReadOnlySpan{OpenTK.Graphics.Wgl.PixelFormatDescriptor})
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: SetPixelFormat(nint, int, ReadOnlySpan<PixelFormatDescriptor>)
  nameWithType: Wgl.SetPixelFormat(nint, int, ReadOnlySpan<PixelFormatDescriptor>)
  fullName: OpenTK.Graphics.Wgl.Wgl.SetPixelFormat(nint, int, System.ReadOnlySpan<OpenTK.Graphics.Wgl.PixelFormatDescriptor>)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: SetPixelFormat
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
    startLine: 249
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>SetPixelFormat</code>]</b>

    <br />
  example: []
  syntax:
    content: public static bool SetPixelFormat(nint hdc, int ipfd, ReadOnlySpan<PixelFormatDescriptor> ppfd)
    parameters:
    - id: hdc
      type: System.IntPtr
    - id: ipfd
      type: System.Int32
    - id: ppfd
      type: System.ReadOnlySpan{OpenTK.Graphics.Wgl.PixelFormatDescriptor}
    return:
      type: System.Boolean
    content.vb: Public Shared Function SetPixelFormat(hdc As IntPtr, ipfd As Integer, ppfd As ReadOnlySpan(Of PixelFormatDescriptor)) As Boolean
  overload: OpenTK.Graphics.Wgl.Wgl.SetPixelFormat*
  nameWithType.vb: Wgl.SetPixelFormat(IntPtr, Integer, ReadOnlySpan(Of PixelFormatDescriptor))
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.SetPixelFormat(System.IntPtr, Integer, System.ReadOnlySpan(Of OpenTK.Graphics.Wgl.PixelFormatDescriptor))
  name.vb: SetPixelFormat(IntPtr, Integer, ReadOnlySpan(Of PixelFormatDescriptor))
- uid: OpenTK.Graphics.Wgl.Wgl.SetPixelFormat(System.IntPtr,System.Int32,OpenTK.Graphics.Wgl.PixelFormatDescriptor[])
  commentId: M:OpenTK.Graphics.Wgl.Wgl.SetPixelFormat(System.IntPtr,System.Int32,OpenTK.Graphics.Wgl.PixelFormatDescriptor[])
  id: SetPixelFormat(System.IntPtr,System.Int32,OpenTK.Graphics.Wgl.PixelFormatDescriptor[])
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: SetPixelFormat(nint, int, PixelFormatDescriptor[])
  nameWithType: Wgl.SetPixelFormat(nint, int, PixelFormatDescriptor[])
  fullName: OpenTK.Graphics.Wgl.Wgl.SetPixelFormat(nint, int, OpenTK.Graphics.Wgl.PixelFormatDescriptor[])
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: SetPixelFormat
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
    startLine: 261
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>SetPixelFormat</code>]</b>

    <br />
  example: []
  syntax:
    content: public static bool SetPixelFormat(nint hdc, int ipfd, PixelFormatDescriptor[] ppfd)
    parameters:
    - id: hdc
      type: System.IntPtr
    - id: ipfd
      type: System.Int32
    - id: ppfd
      type: OpenTK.Graphics.Wgl.PixelFormatDescriptor[]
    return:
      type: System.Boolean
    content.vb: Public Shared Function SetPixelFormat(hdc As IntPtr, ipfd As Integer, ppfd As PixelFormatDescriptor()) As Boolean
  overload: OpenTK.Graphics.Wgl.Wgl.SetPixelFormat*
  nameWithType.vb: Wgl.SetPixelFormat(IntPtr, Integer, PixelFormatDescriptor())
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.SetPixelFormat(System.IntPtr, Integer, OpenTK.Graphics.Wgl.PixelFormatDescriptor())
  name.vb: SetPixelFormat(IntPtr, Integer, PixelFormatDescriptor())
- uid: OpenTK.Graphics.Wgl.Wgl.SetPixelFormat(System.IntPtr,System.Int32,OpenTK.Graphics.Wgl.PixelFormatDescriptor@)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.SetPixelFormat(System.IntPtr,System.Int32,OpenTK.Graphics.Wgl.PixelFormatDescriptor@)
  id: SetPixelFormat(System.IntPtr,System.Int32,OpenTK.Graphics.Wgl.PixelFormatDescriptor@)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: SetPixelFormat(nint, int, in PixelFormatDescriptor)
  nameWithType: Wgl.SetPixelFormat(nint, int, in PixelFormatDescriptor)
  fullName: OpenTK.Graphics.Wgl.Wgl.SetPixelFormat(nint, int, in OpenTK.Graphics.Wgl.PixelFormatDescriptor)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: SetPixelFormat
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
    startLine: 273
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>SetPixelFormat</code>]</b>

    <br />
  example: []
  syntax:
    content: public static bool SetPixelFormat(nint hdc, int ipfd, in PixelFormatDescriptor ppfd)
    parameters:
    - id: hdc
      type: System.IntPtr
    - id: ipfd
      type: System.Int32
    - id: ppfd
      type: OpenTK.Graphics.Wgl.PixelFormatDescriptor
    return:
      type: System.Boolean
    content.vb: Public Shared Function SetPixelFormat(hdc As IntPtr, ipfd As Integer, ppfd As PixelFormatDescriptor) As Boolean
  overload: OpenTK.Graphics.Wgl.Wgl.SetPixelFormat*
  nameWithType.vb: Wgl.SetPixelFormat(IntPtr, Integer, PixelFormatDescriptor)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.SetPixelFormat(System.IntPtr, Integer, OpenTK.Graphics.Wgl.PixelFormatDescriptor)
  name.vb: SetPixelFormat(IntPtr, Integer, PixelFormatDescriptor)
- uid: OpenTK.Graphics.Wgl.Wgl.ShareLists(System.IntPtr,System.IntPtr)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.ShareLists(System.IntPtr,System.IntPtr)
  id: ShareLists(System.IntPtr,System.IntPtr)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: ShareLists(nint, nint)
  nameWithType: Wgl.ShareLists(nint, nint)
  fullName: OpenTK.Graphics.Wgl.Wgl.ShareLists(nint, nint)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: ShareLists
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
    startLine: 285
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  example: []
  syntax:
    content: public static bool ShareLists(nint hrcSrvShare, nint hrcSrvSource)
    parameters:
    - id: hrcSrvShare
      type: System.IntPtr
    - id: hrcSrvSource
      type: System.IntPtr
    return:
      type: System.Boolean
    content.vb: Public Shared Function ShareLists(hrcSrvShare As IntPtr, hrcSrvSource As IntPtr) As Boolean
  overload: OpenTK.Graphics.Wgl.Wgl.ShareLists*
  nameWithType.vb: Wgl.ShareLists(IntPtr, IntPtr)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.ShareLists(System.IntPtr, System.IntPtr)
  name.vb: ShareLists(IntPtr, IntPtr)
- uid: OpenTK.Graphics.Wgl.Wgl.SwapBuffers(System.IntPtr)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.SwapBuffers(System.IntPtr)
  id: SwapBuffers(System.IntPtr)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: SwapBuffers(nint)
  nameWithType: Wgl.SwapBuffers(nint)
  fullName: OpenTK.Graphics.Wgl.Wgl.SwapBuffers(nint)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: SwapBuffers
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
    startLine: 294
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  example: []
  syntax:
    content: public static bool SwapBuffers(nint hdc)
    parameters:
    - id: hdc
      type: System.IntPtr
    return:
      type: System.Boolean
    content.vb: Public Shared Function SwapBuffers(hdc As IntPtr) As Boolean
  overload: OpenTK.Graphics.Wgl.Wgl.SwapBuffers*
  nameWithType.vb: Wgl.SwapBuffers(IntPtr)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.SwapBuffers(System.IntPtr)
  name.vb: SwapBuffers(IntPtr)
- uid: OpenTK.Graphics.Wgl.Wgl.SwapLayerBuffers(System.IntPtr,OpenTK.Graphics.Wgl.WGLLayerPlaneMask)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.SwapLayerBuffers(System.IntPtr,OpenTK.Graphics.Wgl.WGLLayerPlaneMask)
  id: SwapLayerBuffers(System.IntPtr,OpenTK.Graphics.Wgl.WGLLayerPlaneMask)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: SwapLayerBuffers(nint, WGLLayerPlaneMask)
  nameWithType: Wgl.SwapLayerBuffers(nint, WGLLayerPlaneMask)
  fullName: OpenTK.Graphics.Wgl.Wgl.SwapLayerBuffers(nint, OpenTK.Graphics.Wgl.WGLLayerPlaneMask)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: SwapLayerBuffers
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
    startLine: 303
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  example: []
  syntax:
    content: public static bool SwapLayerBuffers(nint hdc, WGLLayerPlaneMask fuFlags)
    parameters:
    - id: hdc
      type: System.IntPtr
    - id: fuFlags
      type: OpenTK.Graphics.Wgl.WGLLayerPlaneMask
    return:
      type: System.Boolean
    content.vb: Public Shared Function SwapLayerBuffers(hdc As IntPtr, fuFlags As WGLLayerPlaneMask) As Boolean
  overload: OpenTK.Graphics.Wgl.Wgl.SwapLayerBuffers*
  nameWithType.vb: Wgl.SwapLayerBuffers(IntPtr, WGLLayerPlaneMask)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.SwapLayerBuffers(System.IntPtr, OpenTK.Graphics.Wgl.WGLLayerPlaneMask)
  name.vb: SwapLayerBuffers(IntPtr, WGLLayerPlaneMask)
- uid: OpenTK.Graphics.Wgl.Wgl.UseFontBitmaps(System.IntPtr,System.UInt32,System.UInt32,System.UInt32)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.UseFontBitmaps(System.IntPtr,System.UInt32,System.UInt32,System.UInt32)
  id: UseFontBitmaps(System.IntPtr,System.UInt32,System.UInt32,System.UInt32)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: UseFontBitmaps(nint, uint, uint, uint)
  nameWithType: Wgl.UseFontBitmaps(nint, uint, uint, uint)
  fullName: OpenTK.Graphics.Wgl.Wgl.UseFontBitmaps(nint, uint, uint, uint)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: UseFontBitmaps
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
    startLine: 312
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  example: []
  syntax:
    content: public static bool UseFontBitmaps(nint hDC, uint first, uint count, uint listBase)
    parameters:
    - id: hDC
      type: System.IntPtr
    - id: first
      type: System.UInt32
    - id: count
      type: System.UInt32
    - id: listBase
      type: System.UInt32
    return:
      type: System.Boolean
    content.vb: Public Shared Function UseFontBitmaps(hDC As IntPtr, first As UInteger, count As UInteger, listBase As UInteger) As Boolean
  overload: OpenTK.Graphics.Wgl.Wgl.UseFontBitmaps*
  nameWithType.vb: Wgl.UseFontBitmaps(IntPtr, UInteger, UInteger, UInteger)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.UseFontBitmaps(System.IntPtr, UInteger, UInteger, UInteger)
  name.vb: UseFontBitmaps(IntPtr, UInteger, UInteger, UInteger)
- uid: OpenTK.Graphics.Wgl.Wgl.UseFontBitmapsA(System.IntPtr,System.UInt32,System.UInt32,System.UInt32)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.UseFontBitmapsA(System.IntPtr,System.UInt32,System.UInt32,System.UInt32)
  id: UseFontBitmapsA(System.IntPtr,System.UInt32,System.UInt32,System.UInt32)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: UseFontBitmapsA(nint, uint, uint, uint)
  nameWithType: Wgl.UseFontBitmapsA(nint, uint, uint, uint)
  fullName: OpenTK.Graphics.Wgl.Wgl.UseFontBitmapsA(nint, uint, uint, uint)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: UseFontBitmapsA
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
    startLine: 321
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  example: []
  syntax:
    content: public static bool UseFontBitmapsA(nint hDC, uint first, uint count, uint listBase)
    parameters:
    - id: hDC
      type: System.IntPtr
    - id: first
      type: System.UInt32
    - id: count
      type: System.UInt32
    - id: listBase
      type: System.UInt32
    return:
      type: System.Boolean
    content.vb: Public Shared Function UseFontBitmapsA(hDC As IntPtr, first As UInteger, count As UInteger, listBase As UInteger) As Boolean
  overload: OpenTK.Graphics.Wgl.Wgl.UseFontBitmapsA*
  nameWithType.vb: Wgl.UseFontBitmapsA(IntPtr, UInteger, UInteger, UInteger)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.UseFontBitmapsA(System.IntPtr, UInteger, UInteger, UInteger)
  name.vb: UseFontBitmapsA(IntPtr, UInteger, UInteger, UInteger)
- uid: OpenTK.Graphics.Wgl.Wgl.UseFontBitmapsW(System.IntPtr,System.UInt32,System.UInt32,System.UInt32)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.UseFontBitmapsW(System.IntPtr,System.UInt32,System.UInt32,System.UInt32)
  id: UseFontBitmapsW(System.IntPtr,System.UInt32,System.UInt32,System.UInt32)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: UseFontBitmapsW(nint, uint, uint, uint)
  nameWithType: Wgl.UseFontBitmapsW(nint, uint, uint, uint)
  fullName: OpenTK.Graphics.Wgl.Wgl.UseFontBitmapsW(nint, uint, uint, uint)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: UseFontBitmapsW
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
    startLine: 330
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  example: []
  syntax:
    content: public static bool UseFontBitmapsW(nint hDC, uint first, uint count, uint listBase)
    parameters:
    - id: hDC
      type: System.IntPtr
    - id: first
      type: System.UInt32
    - id: count
      type: System.UInt32
    - id: listBase
      type: System.UInt32
    return:
      type: System.Boolean
    content.vb: Public Shared Function UseFontBitmapsW(hDC As IntPtr, first As UInteger, count As UInteger, listBase As UInteger) As Boolean
  overload: OpenTK.Graphics.Wgl.Wgl.UseFontBitmapsW*
  nameWithType.vb: Wgl.UseFontBitmapsW(IntPtr, UInteger, UInteger, UInteger)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.UseFontBitmapsW(System.IntPtr, UInteger, UInteger, UInteger)
  name.vb: UseFontBitmapsW(IntPtr, UInteger, UInteger, UInteger)
- uid: OpenTK.Graphics.Wgl.Wgl.UseFontOutlines(System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.Single,System.Single,OpenTK.Graphics.Wgl.FontFormat,System.IntPtr)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.UseFontOutlines(System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.Single,System.Single,OpenTK.Graphics.Wgl.FontFormat,System.IntPtr)
  id: UseFontOutlines(System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.Single,System.Single,OpenTK.Graphics.Wgl.FontFormat,System.IntPtr)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: UseFontOutlines(nint, uint, uint, uint, float, float, FontFormat, nint)
  nameWithType: Wgl.UseFontOutlines(nint, uint, uint, uint, float, float, FontFormat, nint)
  fullName: OpenTK.Graphics.Wgl.Wgl.UseFontOutlines(nint, uint, uint, uint, float, float, OpenTK.Graphics.Wgl.FontFormat, nint)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: UseFontOutlines
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
    startLine: 339
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  example: []
  syntax:
    content: public static bool UseFontOutlines(nint hDC, uint first, uint count, uint listBase, float deviation, float extrusion, FontFormat format, nint lpgmf)
    parameters:
    - id: hDC
      type: System.IntPtr
    - id: first
      type: System.UInt32
    - id: count
      type: System.UInt32
    - id: listBase
      type: System.UInt32
    - id: deviation
      type: System.Single
    - id: extrusion
      type: System.Single
    - id: format
      type: OpenTK.Graphics.Wgl.FontFormat
    - id: lpgmf
      type: System.IntPtr
    return:
      type: System.Boolean
    content.vb: Public Shared Function UseFontOutlines(hDC As IntPtr, first As UInteger, count As UInteger, listBase As UInteger, deviation As Single, extrusion As Single, format As FontFormat, lpgmf As IntPtr) As Boolean
  overload: OpenTK.Graphics.Wgl.Wgl.UseFontOutlines*
  nameWithType.vb: Wgl.UseFontOutlines(IntPtr, UInteger, UInteger, UInteger, Single, Single, FontFormat, IntPtr)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.UseFontOutlines(System.IntPtr, UInteger, UInteger, UInteger, Single, Single, OpenTK.Graphics.Wgl.FontFormat, System.IntPtr)
  name.vb: UseFontOutlines(IntPtr, UInteger, UInteger, UInteger, Single, Single, FontFormat, IntPtr)
- uid: OpenTK.Graphics.Wgl.Wgl.UseFontOutlinesA(System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.Single,System.Single,OpenTK.Graphics.Wgl.FontFormat,System.IntPtr)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.UseFontOutlinesA(System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.Single,System.Single,OpenTK.Graphics.Wgl.FontFormat,System.IntPtr)
  id: UseFontOutlinesA(System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.Single,System.Single,OpenTK.Graphics.Wgl.FontFormat,System.IntPtr)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: UseFontOutlinesA(nint, uint, uint, uint, float, float, FontFormat, nint)
  nameWithType: Wgl.UseFontOutlinesA(nint, uint, uint, uint, float, float, FontFormat, nint)
  fullName: OpenTK.Graphics.Wgl.Wgl.UseFontOutlinesA(nint, uint, uint, uint, float, float, OpenTK.Graphics.Wgl.FontFormat, nint)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: UseFontOutlinesA
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
    startLine: 348
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  example: []
  syntax:
    content: public static bool UseFontOutlinesA(nint hDC, uint first, uint count, uint listBase, float deviation, float extrusion, FontFormat format, nint lpgmf)
    parameters:
    - id: hDC
      type: System.IntPtr
    - id: first
      type: System.UInt32
    - id: count
      type: System.UInt32
    - id: listBase
      type: System.UInt32
    - id: deviation
      type: System.Single
    - id: extrusion
      type: System.Single
    - id: format
      type: OpenTK.Graphics.Wgl.FontFormat
    - id: lpgmf
      type: System.IntPtr
    return:
      type: System.Boolean
    content.vb: Public Shared Function UseFontOutlinesA(hDC As IntPtr, first As UInteger, count As UInteger, listBase As UInteger, deviation As Single, extrusion As Single, format As FontFormat, lpgmf As IntPtr) As Boolean
  overload: OpenTK.Graphics.Wgl.Wgl.UseFontOutlinesA*
  nameWithType.vb: Wgl.UseFontOutlinesA(IntPtr, UInteger, UInteger, UInteger, Single, Single, FontFormat, IntPtr)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.UseFontOutlinesA(System.IntPtr, UInteger, UInteger, UInteger, Single, Single, OpenTK.Graphics.Wgl.FontFormat, System.IntPtr)
  name.vb: UseFontOutlinesA(IntPtr, UInteger, UInteger, UInteger, Single, Single, FontFormat, IntPtr)
- uid: OpenTK.Graphics.Wgl.Wgl.UseFontOutlinesW(System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.Single,System.Single,OpenTK.Graphics.Wgl.FontFormat,System.IntPtr)
  commentId: M:OpenTK.Graphics.Wgl.Wgl.UseFontOutlinesW(System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.Single,System.Single,OpenTK.Graphics.Wgl.FontFormat,System.IntPtr)
  id: UseFontOutlinesW(System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.Single,System.Single,OpenTK.Graphics.Wgl.FontFormat,System.IntPtr)
  parent: OpenTK.Graphics.Wgl.Wgl
  langs:
  - csharp
  - vb
  name: UseFontOutlinesW(nint, uint, uint, uint, float, float, FontFormat, nint)
  nameWithType: Wgl.UseFontOutlinesW(nint, uint, uint, uint, float, float, FontFormat, nint)
  fullName: OpenTK.Graphics.Wgl.Wgl.UseFontOutlinesW(nint, uint, uint, uint, float, float, OpenTK.Graphics.Wgl.FontFormat, nint)
  type: Method
  source:
    remote:
      path: src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
      branch: pal2-work
      repo: https://github.com/opentk/opentk.git
    id: UseFontOutlinesW
    path: opentk/src/OpenTK.Graphics/Wgl/WGL.Overloads.cs
    startLine: 357
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Wgl
  example: []
  syntax:
    content: public static bool UseFontOutlinesW(nint hDC, uint first, uint count, uint listBase, float deviation, float extrusion, FontFormat format, nint lpgmf)
    parameters:
    - id: hDC
      type: System.IntPtr
    - id: first
      type: System.UInt32
    - id: count
      type: System.UInt32
    - id: listBase
      type: System.UInt32
    - id: deviation
      type: System.Single
    - id: extrusion
      type: System.Single
    - id: format
      type: OpenTK.Graphics.Wgl.FontFormat
    - id: lpgmf
      type: System.IntPtr
    return:
      type: System.Boolean
    content.vb: Public Shared Function UseFontOutlinesW(hDC As IntPtr, first As UInteger, count As UInteger, listBase As UInteger, deviation As Single, extrusion As Single, format As FontFormat, lpgmf As IntPtr) As Boolean
  overload: OpenTK.Graphics.Wgl.Wgl.UseFontOutlinesW*
  nameWithType.vb: Wgl.UseFontOutlinesW(IntPtr, UInteger, UInteger, UInteger, Single, Single, FontFormat, IntPtr)
  fullName.vb: OpenTK.Graphics.Wgl.Wgl.UseFontOutlinesW(System.IntPtr, UInteger, UInteger, UInteger, Single, Single, OpenTK.Graphics.Wgl.FontFormat, System.IntPtr)
  name.vb: UseFontOutlinesW(IntPtr, UInteger, UInteger, UInteger, Single, Single, FontFormat, IntPtr)
references:
- uid: OpenTK.Graphics.Wgl
  commentId: N:OpenTK.Graphics.Wgl
  href: OpenTK.html
  name: OpenTK.Graphics.Wgl
  nameWithType: OpenTK.Graphics.Wgl
  fullName: OpenTK.Graphics.Wgl
  spec.csharp:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Graphics
    name: Graphics
    href: OpenTK.Graphics.html
  - name: .
  - uid: OpenTK.Graphics.Wgl
    name: Wgl
    href: OpenTK.Graphics.Wgl.html
  spec.vb:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Graphics
    name: Graphics
    href: OpenTK.Graphics.html
  - name: .
  - uid: OpenTK.Graphics.Wgl
    name: Wgl
    href: OpenTK.Graphics.Wgl.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: OpenTK.Graphics.Wgl.Wgl.ChoosePixelFormat*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.ChoosePixelFormat
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_ChoosePixelFormat_System_IntPtr_OpenTK_Graphics_Wgl_PixelFormatDescriptor__
  name: ChoosePixelFormat
  nameWithType: Wgl.ChoosePixelFormat
  fullName: OpenTK.Graphics.Wgl.Wgl.ChoosePixelFormat
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.intptr
  name: nint
  nameWithType: nint
  fullName: nint
  nameWithType.vb: IntPtr
  fullName.vb: System.IntPtr
  name.vb: IntPtr
- uid: OpenTK.Graphics.Wgl.PixelFormatDescriptor*
  isExternal: true
  href: OpenTK.Graphics.Wgl.PixelFormatDescriptor.html
  name: PixelFormatDescriptor*
  nameWithType: PixelFormatDescriptor*
  fullName: OpenTK.Graphics.Wgl.PixelFormatDescriptor*
  spec.csharp:
  - uid: OpenTK.Graphics.Wgl.PixelFormatDescriptor
    name: PixelFormatDescriptor
    href: OpenTK.Graphics.Wgl.PixelFormatDescriptor.html
  - name: '*'
  spec.vb:
  - uid: OpenTK.Graphics.Wgl.PixelFormatDescriptor
    name: PixelFormatDescriptor
    href: OpenTK.Graphics.Wgl.PixelFormatDescriptor.html
  - name: '*'
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: OpenTK.Graphics.Wgl.Wgl.CopyContext_*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.CopyContext_
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_CopyContext__System_IntPtr_System_IntPtr_OpenTK_Graphics_OpenGL_AttribMask_
  name: CopyContext_
  nameWithType: Wgl.CopyContext_
  fullName: OpenTK.Graphics.Wgl.Wgl.CopyContext_
- uid: OpenTK.Graphics.OpenGL.AttribMask
  commentId: T:OpenTK.Graphics.OpenGL.AttribMask
  parent: OpenTK.Graphics.OpenGL
  href: OpenTK.Graphics.OpenGL.AttribMask.html
  name: AttribMask
  nameWithType: AttribMask
  fullName: OpenTK.Graphics.OpenGL.AttribMask
- uid: OpenTK.Graphics.OpenGL
  commentId: N:OpenTK.Graphics.OpenGL
  href: OpenTK.html
  name: OpenTK.Graphics.OpenGL
  nameWithType: OpenTK.Graphics.OpenGL
  fullName: OpenTK.Graphics.OpenGL
  spec.csharp:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Graphics
    name: Graphics
    href: OpenTK.Graphics.html
  - name: .
  - uid: OpenTK.Graphics.OpenGL
    name: OpenGL
    href: OpenTK.Graphics.OpenGL.html
  spec.vb:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Graphics
    name: Graphics
    href: OpenTK.Graphics.html
  - name: .
  - uid: OpenTK.Graphics.OpenGL
    name: OpenGL
    href: OpenTK.Graphics.OpenGL.html
- uid: OpenTK.Graphics.Wgl.Wgl.CreateContext*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.CreateContext
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_CreateContext_System_IntPtr_
  name: CreateContext
  nameWithType: Wgl.CreateContext
  fullName: OpenTK.Graphics.Wgl.Wgl.CreateContext
- uid: OpenTK.Graphics.Wgl.Wgl.CreateLayerContext*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.CreateLayerContext
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_CreateLayerContext_System_IntPtr_System_Int32_
  name: CreateLayerContext
  nameWithType: Wgl.CreateLayerContext
  fullName: OpenTK.Graphics.Wgl.Wgl.CreateLayerContext
- uid: OpenTK.Graphics.Wgl.Wgl.DeleteContext_*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.DeleteContext_
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_DeleteContext__System_IntPtr_
  name: DeleteContext_
  nameWithType: Wgl.DeleteContext_
  fullName: OpenTK.Graphics.Wgl.Wgl.DeleteContext_
- uid: OpenTK.Graphics.Wgl.Wgl.DescribeLayerPlane*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.DescribeLayerPlane
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_DescribeLayerPlane_System_IntPtr_System_Int32_System_Int32_System_UInt32_OpenTK_Graphics_Wgl_LayerPlaneDescriptor__
  name: DescribeLayerPlane
  nameWithType: Wgl.DescribeLayerPlane
  fullName: OpenTK.Graphics.Wgl.Wgl.DescribeLayerPlane
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: OpenTK.Graphics.Wgl.LayerPlaneDescriptor*
  isExternal: true
  href: OpenTK.Graphics.Wgl.LayerPlaneDescriptor.html
  name: LayerPlaneDescriptor*
  nameWithType: LayerPlaneDescriptor*
  fullName: OpenTK.Graphics.Wgl.LayerPlaneDescriptor*
  spec.csharp:
  - uid: OpenTK.Graphics.Wgl.LayerPlaneDescriptor
    name: LayerPlaneDescriptor
    href: OpenTK.Graphics.Wgl.LayerPlaneDescriptor.html
  - name: '*'
  spec.vb:
  - uid: OpenTK.Graphics.Wgl.LayerPlaneDescriptor
    name: LayerPlaneDescriptor
    href: OpenTK.Graphics.Wgl.LayerPlaneDescriptor.html
  - name: '*'
- uid: OpenTK.Graphics.Wgl.Wgl.DescribePixelFormat*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.DescribePixelFormat
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_DescribePixelFormat_System_IntPtr_System_Int32_System_UInt32_OpenTK_Graphics_Wgl_PixelFormatDescriptor__
  name: DescribePixelFormat
  nameWithType: Wgl.DescribePixelFormat
  fullName: OpenTK.Graphics.Wgl.Wgl.DescribePixelFormat
- uid: OpenTK.Graphics.Wgl.Wgl.GetCurrentContext*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.GetCurrentContext
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_GetCurrentContext
  name: GetCurrentContext
  nameWithType: Wgl.GetCurrentContext
  fullName: OpenTK.Graphics.Wgl.Wgl.GetCurrentContext
- uid: OpenTK.Graphics.Wgl.Wgl.GetCurrentDC*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.GetCurrentDC
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_GetCurrentDC
  name: GetCurrentDC
  nameWithType: Wgl.GetCurrentDC
  fullName: OpenTK.Graphics.Wgl.Wgl.GetCurrentDC
- uid: OpenTK.Graphics.Wgl.Wgl.GetEnhMetaFilePixelFormat*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.GetEnhMetaFilePixelFormat
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_GetEnhMetaFilePixelFormat_System_IntPtr_System_UInt32_OpenTK_Graphics_Wgl_PixelFormatDescriptor__
  name: GetEnhMetaFilePixelFormat
  nameWithType: Wgl.GetEnhMetaFilePixelFormat
  fullName: OpenTK.Graphics.Wgl.Wgl.GetEnhMetaFilePixelFormat
- uid: OpenTK.Graphics.Wgl.Wgl.GetLayerPaletteEntries*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.GetLayerPaletteEntries
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_GetLayerPaletteEntries_System_IntPtr_System_Int32_System_Int32_System_Int32_OpenTK_Graphics_Wgl_ColorRef__
  name: GetLayerPaletteEntries
  nameWithType: Wgl.GetLayerPaletteEntries
  fullName: OpenTK.Graphics.Wgl.Wgl.GetLayerPaletteEntries
- uid: OpenTK.Graphics.Wgl.ColorRef*
  isExternal: true
  href: OpenTK.Graphics.Wgl.ColorRef.html
  name: ColorRef*
  nameWithType: ColorRef*
  fullName: OpenTK.Graphics.Wgl.ColorRef*
  spec.csharp:
  - uid: OpenTK.Graphics.Wgl.ColorRef
    name: ColorRef
    href: OpenTK.Graphics.Wgl.ColorRef.html
  - name: '*'
  spec.vb:
  - uid: OpenTK.Graphics.Wgl.ColorRef
    name: ColorRef
    href: OpenTK.Graphics.Wgl.ColorRef.html
  - name: '*'
- uid: OpenTK.Graphics.Wgl.Wgl.GetPixelFormat*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.GetPixelFormat
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_GetPixelFormat_System_IntPtr_
  name: GetPixelFormat
  nameWithType: Wgl.GetPixelFormat
  fullName: OpenTK.Graphics.Wgl.Wgl.GetPixelFormat
- uid: OpenTK.Graphics.Wgl.Wgl.GetProcAddress*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.GetProcAddress
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_GetProcAddress_System_Byte__
  name: GetProcAddress
  nameWithType: Wgl.GetProcAddress
  fullName: OpenTK.Graphics.Wgl.Wgl.GetProcAddress
- uid: System.Byte*
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte*
  nameWithType: byte*
  fullName: byte*
  nameWithType.vb: Byte*
  fullName.vb: Byte*
  name.vb: Byte*
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '*'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '*'
- uid: OpenTK.Graphics.Wgl.Wgl.MakeCurrent_*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.MakeCurrent_
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_MakeCurrent__System_IntPtr_System_IntPtr_
  name: MakeCurrent_
  nameWithType: Wgl.MakeCurrent_
  fullName: OpenTK.Graphics.Wgl.Wgl.MakeCurrent_
- uid: OpenTK.Graphics.Wgl.Wgl.RealizeLayerPalette_*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.RealizeLayerPalette_
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_RealizeLayerPalette__System_IntPtr_System_Int32_System_Int32_
  name: RealizeLayerPalette_
  nameWithType: Wgl.RealizeLayerPalette_
  fullName: OpenTK.Graphics.Wgl.Wgl.RealizeLayerPalette_
- uid: OpenTK.Graphics.Wgl.Wgl.SetLayerPaletteEntries*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.SetLayerPaletteEntries
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_SetLayerPaletteEntries_System_IntPtr_System_Int32_System_Int32_System_Int32_OpenTK_Graphics_Wgl_ColorRef__
  name: SetLayerPaletteEntries
  nameWithType: Wgl.SetLayerPaletteEntries
  fullName: OpenTK.Graphics.Wgl.Wgl.SetLayerPaletteEntries
- uid: OpenTK.Graphics.Wgl.Wgl.SetPixelFormat*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.SetPixelFormat
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_SetPixelFormat_System_IntPtr_System_Int32_OpenTK_Graphics_Wgl_PixelFormatDescriptor__
  name: SetPixelFormat
  nameWithType: Wgl.SetPixelFormat
  fullName: OpenTK.Graphics.Wgl.Wgl.SetPixelFormat
- uid: OpenTK.Graphics.Wgl.Wgl.ShareLists_*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.ShareLists_
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_ShareLists__System_IntPtr_System_IntPtr_
  name: ShareLists_
  nameWithType: Wgl.ShareLists_
  fullName: OpenTK.Graphics.Wgl.Wgl.ShareLists_
- uid: OpenTK.Graphics.Wgl.Wgl.SwapBuffers_*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.SwapBuffers_
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_SwapBuffers__System_IntPtr_
  name: SwapBuffers_
  nameWithType: Wgl.SwapBuffers_
  fullName: OpenTK.Graphics.Wgl.Wgl.SwapBuffers_
- uid: OpenTK.Graphics.Wgl.Wgl.SwapLayerBuffers_*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.SwapLayerBuffers_
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_SwapLayerBuffers__System_IntPtr_OpenTK_Graphics_Wgl_WGLLayerPlaneMask_
  name: SwapLayerBuffers_
  nameWithType: Wgl.SwapLayerBuffers_
  fullName: OpenTK.Graphics.Wgl.Wgl.SwapLayerBuffers_
- uid: OpenTK.Graphics.Wgl.WGLLayerPlaneMask
  commentId: T:OpenTK.Graphics.Wgl.WGLLayerPlaneMask
  parent: OpenTK.Graphics.Wgl
  href: OpenTK.Graphics.Wgl.WGLLayerPlaneMask.html
  name: WGLLayerPlaneMask
  nameWithType: WGLLayerPlaneMask
  fullName: OpenTK.Graphics.Wgl.WGLLayerPlaneMask
- uid: OpenTK.Graphics.Wgl.Wgl.UseFontBitmaps_*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.UseFontBitmaps_
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_UseFontBitmaps__System_IntPtr_System_UInt32_System_UInt32_System_UInt32_
  name: UseFontBitmaps_
  nameWithType: Wgl.UseFontBitmaps_
  fullName: OpenTK.Graphics.Wgl.Wgl.UseFontBitmaps_
- uid: OpenTK.Graphics.Wgl.Wgl.UseFontBitmapsA_*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.UseFontBitmapsA_
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_UseFontBitmapsA__System_IntPtr_System_UInt32_System_UInt32_System_UInt32_
  name: UseFontBitmapsA_
  nameWithType: Wgl.UseFontBitmapsA_
  fullName: OpenTK.Graphics.Wgl.Wgl.UseFontBitmapsA_
- uid: OpenTK.Graphics.Wgl.Wgl.UseFontBitmapsW_*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.UseFontBitmapsW_
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_UseFontBitmapsW__System_IntPtr_System_UInt32_System_UInt32_System_UInt32_
  name: UseFontBitmapsW_
  nameWithType: Wgl.UseFontBitmapsW_
  fullName: OpenTK.Graphics.Wgl.Wgl.UseFontBitmapsW_
- uid: OpenTK.Graphics.Wgl.Wgl.UseFontOutlines_*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.UseFontOutlines_
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_UseFontOutlines__System_IntPtr_System_UInt32_System_UInt32_System_UInt32_System_Single_System_Single_OpenTK_Graphics_Wgl_FontFormat_System_IntPtr_
  name: UseFontOutlines_
  nameWithType: Wgl.UseFontOutlines_
  fullName: OpenTK.Graphics.Wgl.Wgl.UseFontOutlines_
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: OpenTK.Graphics.Wgl.FontFormat
  commentId: T:OpenTK.Graphics.Wgl.FontFormat
  parent: OpenTK.Graphics.Wgl
  href: OpenTK.Graphics.Wgl.FontFormat.html
  name: FontFormat
  nameWithType: FontFormat
  fullName: OpenTK.Graphics.Wgl.FontFormat
- uid: OpenTK.Graphics.Wgl.Wgl.UseFontOutlinesA_*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.UseFontOutlinesA_
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_UseFontOutlinesA__System_IntPtr_System_UInt32_System_UInt32_System_UInt32_System_Single_System_Single_OpenTK_Graphics_Wgl_FontFormat_System_IntPtr_
  name: UseFontOutlinesA_
  nameWithType: Wgl.UseFontOutlinesA_
  fullName: OpenTK.Graphics.Wgl.Wgl.UseFontOutlinesA_
- uid: OpenTK.Graphics.Wgl.Wgl.UseFontOutlinesW_*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.UseFontOutlinesW_
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_UseFontOutlinesW__System_IntPtr_System_UInt32_System_UInt32_System_UInt32_System_Single_System_Single_OpenTK_Graphics_Wgl_FontFormat_System_IntPtr_
  name: UseFontOutlinesW_
  nameWithType: Wgl.UseFontOutlinesW_
  fullName: OpenTK.Graphics.Wgl.Wgl.UseFontOutlinesW_
- uid: System.ReadOnlySpan{OpenTK.Graphics.Wgl.PixelFormatDescriptor}
  commentId: T:System.ReadOnlySpan{OpenTK.Graphics.Wgl.PixelFormatDescriptor}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<PixelFormatDescriptor>
  nameWithType: ReadOnlySpan<PixelFormatDescriptor>
  fullName: System.ReadOnlySpan<OpenTK.Graphics.Wgl.PixelFormatDescriptor>
  nameWithType.vb: ReadOnlySpan(Of PixelFormatDescriptor)
  fullName.vb: System.ReadOnlySpan(Of OpenTK.Graphics.Wgl.PixelFormatDescriptor)
  name.vb: ReadOnlySpan(Of PixelFormatDescriptor)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: OpenTK.Graphics.Wgl.PixelFormatDescriptor
    name: PixelFormatDescriptor
    href: OpenTK.Graphics.Wgl.PixelFormatDescriptor.html
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: OpenTK.Graphics.Wgl.PixelFormatDescriptor
    name: PixelFormatDescriptor
    href: OpenTK.Graphics.Wgl.PixelFormatDescriptor.html
  - name: )
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: OpenTK.Graphics.Wgl.PixelFormatDescriptor[]
  isExternal: true
  href: OpenTK.Graphics.Wgl.PixelFormatDescriptor.html
  name: PixelFormatDescriptor[]
  nameWithType: PixelFormatDescriptor[]
  fullName: OpenTK.Graphics.Wgl.PixelFormatDescriptor[]
  nameWithType.vb: PixelFormatDescriptor()
  fullName.vb: OpenTK.Graphics.Wgl.PixelFormatDescriptor()
  name.vb: PixelFormatDescriptor()
  spec.csharp:
  - uid: OpenTK.Graphics.Wgl.PixelFormatDescriptor
    name: PixelFormatDescriptor
    href: OpenTK.Graphics.Wgl.PixelFormatDescriptor.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: OpenTK.Graphics.Wgl.PixelFormatDescriptor
    name: PixelFormatDescriptor
    href: OpenTK.Graphics.Wgl.PixelFormatDescriptor.html
  - name: (
  - name: )
- uid: OpenTK.Graphics.Wgl.PixelFormatDescriptor
  commentId: T:OpenTK.Graphics.Wgl.PixelFormatDescriptor
  parent: OpenTK.Graphics.Wgl
  href: OpenTK.Graphics.Wgl.PixelFormatDescriptor.html
  name: PixelFormatDescriptor
  nameWithType: PixelFormatDescriptor
  fullName: OpenTK.Graphics.Wgl.PixelFormatDescriptor
- uid: OpenTK.Graphics.Wgl.Wgl.CopyContext*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.CopyContext
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_CopyContext_System_IntPtr_System_IntPtr_OpenTK_Graphics_OpenGL_AttribMask_
  name: CopyContext
  nameWithType: Wgl.CopyContext
  fullName: OpenTK.Graphics.Wgl.Wgl.CopyContext
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: OpenTK.Graphics.Wgl.Wgl.DeleteContext*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.DeleteContext
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_DeleteContext_System_IntPtr_
  name: DeleteContext
  nameWithType: Wgl.DeleteContext
  fullName: OpenTK.Graphics.Wgl.Wgl.DeleteContext
- uid: System.Span{OpenTK.Graphics.Wgl.LayerPlaneDescriptor}
  commentId: T:System.Span{OpenTK.Graphics.Wgl.LayerPlaneDescriptor}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<LayerPlaneDescriptor>
  nameWithType: Span<LayerPlaneDescriptor>
  fullName: System.Span<OpenTK.Graphics.Wgl.LayerPlaneDescriptor>
  nameWithType.vb: Span(Of LayerPlaneDescriptor)
  fullName.vb: System.Span(Of OpenTK.Graphics.Wgl.LayerPlaneDescriptor)
  name.vb: Span(Of LayerPlaneDescriptor)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: OpenTK.Graphics.Wgl.LayerPlaneDescriptor
    name: LayerPlaneDescriptor
    href: OpenTK.Graphics.Wgl.LayerPlaneDescriptor.html
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: OpenTK.Graphics.Wgl.LayerPlaneDescriptor
    name: LayerPlaneDescriptor
    href: OpenTK.Graphics.Wgl.LayerPlaneDescriptor.html
  - name: )
- uid: System.Span`1
  commentId: T:System.Span`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<T>
  nameWithType: Span<T>
  fullName: System.Span<T>
  nameWithType.vb: Span(Of T)
  fullName.vb: System.Span(Of T)
  name.vb: Span(Of T)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: OpenTK.Graphics.Wgl.LayerPlaneDescriptor[]
  isExternal: true
  href: OpenTK.Graphics.Wgl.LayerPlaneDescriptor.html
  name: LayerPlaneDescriptor[]
  nameWithType: LayerPlaneDescriptor[]
  fullName: OpenTK.Graphics.Wgl.LayerPlaneDescriptor[]
  nameWithType.vb: LayerPlaneDescriptor()
  fullName.vb: OpenTK.Graphics.Wgl.LayerPlaneDescriptor()
  name.vb: LayerPlaneDescriptor()
  spec.csharp:
  - uid: OpenTK.Graphics.Wgl.LayerPlaneDescriptor
    name: LayerPlaneDescriptor
    href: OpenTK.Graphics.Wgl.LayerPlaneDescriptor.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: OpenTK.Graphics.Wgl.LayerPlaneDescriptor
    name: LayerPlaneDescriptor
    href: OpenTK.Graphics.Wgl.LayerPlaneDescriptor.html
  - name: (
  - name: )
- uid: OpenTK.Graphics.Wgl.LayerPlaneDescriptor
  commentId: T:OpenTK.Graphics.Wgl.LayerPlaneDescriptor
  parent: OpenTK.Graphics.Wgl
  href: OpenTK.Graphics.Wgl.LayerPlaneDescriptor.html
  name: LayerPlaneDescriptor
  nameWithType: LayerPlaneDescriptor
  fullName: OpenTK.Graphics.Wgl.LayerPlaneDescriptor
- uid: System.Span{OpenTK.Graphics.Wgl.PixelFormatDescriptor}
  commentId: T:System.Span{OpenTK.Graphics.Wgl.PixelFormatDescriptor}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<PixelFormatDescriptor>
  nameWithType: Span<PixelFormatDescriptor>
  fullName: System.Span<OpenTK.Graphics.Wgl.PixelFormatDescriptor>
  nameWithType.vb: Span(Of PixelFormatDescriptor)
  fullName.vb: System.Span(Of OpenTK.Graphics.Wgl.PixelFormatDescriptor)
  name.vb: Span(Of PixelFormatDescriptor)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: OpenTK.Graphics.Wgl.PixelFormatDescriptor
    name: PixelFormatDescriptor
    href: OpenTK.Graphics.Wgl.PixelFormatDescriptor.html
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: OpenTK.Graphics.Wgl.PixelFormatDescriptor
    name: PixelFormatDescriptor
    href: OpenTK.Graphics.Wgl.PixelFormatDescriptor.html
  - name: )
- uid: System.Span{OpenTK.Graphics.Wgl.ColorRef}
  commentId: T:System.Span{OpenTK.Graphics.Wgl.ColorRef}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<ColorRef>
  nameWithType: Span<ColorRef>
  fullName: System.Span<OpenTK.Graphics.Wgl.ColorRef>
  nameWithType.vb: Span(Of ColorRef)
  fullName.vb: System.Span(Of OpenTK.Graphics.Wgl.ColorRef)
  name.vb: Span(Of ColorRef)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: OpenTK.Graphics.Wgl.ColorRef
    name: ColorRef
    href: OpenTK.Graphics.Wgl.ColorRef.html
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: OpenTK.Graphics.Wgl.ColorRef
    name: ColorRef
    href: OpenTK.Graphics.Wgl.ColorRef.html
  - name: )
- uid: OpenTK.Graphics.Wgl.ColorRef[]
  isExternal: true
  href: OpenTK.Graphics.Wgl.ColorRef.html
  name: ColorRef[]
  nameWithType: ColorRef[]
  fullName: OpenTK.Graphics.Wgl.ColorRef[]
  nameWithType.vb: ColorRef()
  fullName.vb: OpenTK.Graphics.Wgl.ColorRef()
  name.vb: ColorRef()
  spec.csharp:
  - uid: OpenTK.Graphics.Wgl.ColorRef
    name: ColorRef
    href: OpenTK.Graphics.Wgl.ColorRef.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: OpenTK.Graphics.Wgl.ColorRef
    name: ColorRef
    href: OpenTK.Graphics.Wgl.ColorRef.html
  - name: (
  - name: )
- uid: OpenTK.Graphics.Wgl.ColorRef
  commentId: T:OpenTK.Graphics.Wgl.ColorRef
  parent: OpenTK.Graphics.Wgl
  href: OpenTK.Graphics.Wgl.ColorRef.html
  name: ColorRef
  nameWithType: ColorRef
  fullName: OpenTK.Graphics.Wgl.ColorRef
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: OpenTK.Graphics.Wgl.Wgl.MakeCurrent*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.MakeCurrent
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_MakeCurrent_System_IntPtr_System_IntPtr_
  name: MakeCurrent
  nameWithType: Wgl.MakeCurrent
  fullName: OpenTK.Graphics.Wgl.Wgl.MakeCurrent
- uid: OpenTK.Graphics.Wgl.Wgl.RealizeLayerPalette*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.RealizeLayerPalette
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_RealizeLayerPalette_System_IntPtr_System_Int32_System_Int32_
  name: RealizeLayerPalette
  nameWithType: Wgl.RealizeLayerPalette
  fullName: OpenTK.Graphics.Wgl.Wgl.RealizeLayerPalette
- uid: System.ReadOnlySpan{OpenTK.Graphics.Wgl.ColorRef}
  commentId: T:System.ReadOnlySpan{OpenTK.Graphics.Wgl.ColorRef}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<ColorRef>
  nameWithType: ReadOnlySpan<ColorRef>
  fullName: System.ReadOnlySpan<OpenTK.Graphics.Wgl.ColorRef>
  nameWithType.vb: ReadOnlySpan(Of ColorRef)
  fullName.vb: System.ReadOnlySpan(Of OpenTK.Graphics.Wgl.ColorRef)
  name.vb: ReadOnlySpan(Of ColorRef)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: OpenTK.Graphics.Wgl.ColorRef
    name: ColorRef
    href: OpenTK.Graphics.Wgl.ColorRef.html
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: OpenTK.Graphics.Wgl.ColorRef
    name: ColorRef
    href: OpenTK.Graphics.Wgl.ColorRef.html
  - name: )
- uid: OpenTK.Graphics.Wgl.Wgl.ShareLists*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.ShareLists
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_ShareLists_System_IntPtr_System_IntPtr_
  name: ShareLists
  nameWithType: Wgl.ShareLists
  fullName: OpenTK.Graphics.Wgl.Wgl.ShareLists
- uid: OpenTK.Graphics.Wgl.Wgl.SwapBuffers*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.SwapBuffers
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_SwapBuffers_System_IntPtr_
  name: SwapBuffers
  nameWithType: Wgl.SwapBuffers
  fullName: OpenTK.Graphics.Wgl.Wgl.SwapBuffers
- uid: OpenTK.Graphics.Wgl.Wgl.SwapLayerBuffers*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.SwapLayerBuffers
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_SwapLayerBuffers_System_IntPtr_OpenTK_Graphics_Wgl_WGLLayerPlaneMask_
  name: SwapLayerBuffers
  nameWithType: Wgl.SwapLayerBuffers
  fullName: OpenTK.Graphics.Wgl.Wgl.SwapLayerBuffers
- uid: OpenTK.Graphics.Wgl.Wgl.UseFontBitmaps*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.UseFontBitmaps
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_UseFontBitmaps_System_IntPtr_System_UInt32_System_UInt32_System_UInt32_
  name: UseFontBitmaps
  nameWithType: Wgl.UseFontBitmaps
  fullName: OpenTK.Graphics.Wgl.Wgl.UseFontBitmaps
- uid: OpenTK.Graphics.Wgl.Wgl.UseFontBitmapsA*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.UseFontBitmapsA
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_UseFontBitmapsA_System_IntPtr_System_UInt32_System_UInt32_System_UInt32_
  name: UseFontBitmapsA
  nameWithType: Wgl.UseFontBitmapsA
  fullName: OpenTK.Graphics.Wgl.Wgl.UseFontBitmapsA
- uid: OpenTK.Graphics.Wgl.Wgl.UseFontBitmapsW*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.UseFontBitmapsW
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_UseFontBitmapsW_System_IntPtr_System_UInt32_System_UInt32_System_UInt32_
  name: UseFontBitmapsW
  nameWithType: Wgl.UseFontBitmapsW
  fullName: OpenTK.Graphics.Wgl.Wgl.UseFontBitmapsW
- uid: OpenTK.Graphics.Wgl.Wgl.UseFontOutlines*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.UseFontOutlines
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_UseFontOutlines_System_IntPtr_System_UInt32_System_UInt32_System_UInt32_System_Single_System_Single_OpenTK_Graphics_Wgl_FontFormat_System_IntPtr_
  name: UseFontOutlines
  nameWithType: Wgl.UseFontOutlines
  fullName: OpenTK.Graphics.Wgl.Wgl.UseFontOutlines
- uid: OpenTK.Graphics.Wgl.Wgl.UseFontOutlinesA*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.UseFontOutlinesA
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_UseFontOutlinesA_System_IntPtr_System_UInt32_System_UInt32_System_UInt32_System_Single_System_Single_OpenTK_Graphics_Wgl_FontFormat_System_IntPtr_
  name: UseFontOutlinesA
  nameWithType: Wgl.UseFontOutlinesA
  fullName: OpenTK.Graphics.Wgl.Wgl.UseFontOutlinesA
- uid: OpenTK.Graphics.Wgl.Wgl.UseFontOutlinesW*
  commentId: Overload:OpenTK.Graphics.Wgl.Wgl.UseFontOutlinesW
  href: OpenTK.Graphics.Wgl.Wgl.html#OpenTK_Graphics_Wgl_Wgl_UseFontOutlinesW_System_IntPtr_System_UInt32_System_UInt32_System_UInt32_System_Single_System_Single_OpenTK_Graphics_Wgl_FontFormat_System_IntPtr_
  name: UseFontOutlinesW
  nameWithType: Wgl.UseFontOutlinesW
  fullName: OpenTK.Graphics.Wgl.Wgl.UseFontOutlinesW
