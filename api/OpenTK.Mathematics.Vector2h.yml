### YamlMime:ManagedReference
items:
- uid: OpenTK.Mathematics.Vector2h
  commentId: T:OpenTK.Mathematics.Vector2h
  id: Vector2h
  parent: OpenTK.Mathematics
  children:
  - OpenTK.Mathematics.Vector2h.#ctor(OpenTK.Mathematics.Half,OpenTK.Mathematics.Half)
  - OpenTK.Mathematics.Vector2h.#ctor(OpenTK.Mathematics.Half)
  - OpenTK.Mathematics.Vector2h.#ctor(OpenTK.Mathematics.Vector2,System.Boolean)
  - OpenTK.Mathematics.Vector2h.#ctor(OpenTK.Mathematics.Vector2)
  - OpenTK.Mathematics.Vector2h.#ctor(OpenTK.Mathematics.Vector2@,System.Boolean)
  - OpenTK.Mathematics.Vector2h.#ctor(OpenTK.Mathematics.Vector2@)
  - OpenTK.Mathematics.Vector2h.#ctor(OpenTK.Mathematics.Vector2d,System.Boolean)
  - OpenTK.Mathematics.Vector2h.#ctor(OpenTK.Mathematics.Vector2d)
  - OpenTK.Mathematics.Vector2h.#ctor(OpenTK.Mathematics.Vector2d@,System.Boolean)
  - OpenTK.Mathematics.Vector2h.#ctor(OpenTK.Mathematics.Vector2d@)
  - OpenTK.Mathematics.Vector2h.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - OpenTK.Mathematics.Vector2h.#ctor(System.Single,System.Single,System.Boolean)
  - OpenTK.Mathematics.Vector2h.#ctor(System.Single,System.Single)
  - OpenTK.Mathematics.Vector2h.#ctor(System.Single)
  - OpenTK.Mathematics.Vector2h.Deconstruct(OpenTK.Mathematics.Half@,OpenTK.Mathematics.Half@)
  - OpenTK.Mathematics.Vector2h.Equals(OpenTK.Mathematics.Vector2h)
  - OpenTK.Mathematics.Vector2h.Equals(System.Object)
  - OpenTK.Mathematics.Vector2h.FromBinaryStream(System.IO.BinaryReader)
  - OpenTK.Mathematics.Vector2h.FromBytes(System.Byte[],System.Int32)
  - OpenTK.Mathematics.Vector2h.GetBytes(OpenTK.Mathematics.Vector2h)
  - OpenTK.Mathematics.Vector2h.GetHashCode
  - OpenTK.Mathematics.Vector2h.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - OpenTK.Mathematics.Vector2h.op_Equality(OpenTK.Mathematics.Vector2h,OpenTK.Mathematics.Vector2h)
  - OpenTK.Mathematics.Vector2h.op_Explicit(OpenTK.Mathematics.Vector2h)~OpenTK.Mathematics.Vector2i
  - OpenTK.Mathematics.Vector2h.op_Implicit(OpenTK.Mathematics.Vector2h)~OpenTK.Mathematics.Vector2
  - OpenTK.Mathematics.Vector2h.op_Implicit(OpenTK.Mathematics.Vector2h)~OpenTK.Mathematics.Vector2d
  - OpenTK.Mathematics.Vector2h.op_Implicit(System.ValueTuple{OpenTK.Mathematics.Half,OpenTK.Mathematics.Half})~OpenTK.Mathematics.Vector2h
  - OpenTK.Mathematics.Vector2h.op_Inequality(OpenTK.Mathematics.Vector2h,OpenTK.Mathematics.Vector2h)
  - OpenTK.Mathematics.Vector2h.SizeInBytes
  - OpenTK.Mathematics.Vector2h.ToBinaryStream(System.IO.BinaryWriter)
  - OpenTK.Mathematics.Vector2h.ToString
  - OpenTK.Mathematics.Vector2h.ToString(System.IFormatProvider)
  - OpenTK.Mathematics.Vector2h.ToString(System.String,System.IFormatProvider)
  - OpenTK.Mathematics.Vector2h.ToString(System.String)
  - OpenTK.Mathematics.Vector2h.ToVector2
  - OpenTK.Mathematics.Vector2h.ToVector2d
  - OpenTK.Mathematics.Vector2h.X
  - OpenTK.Mathematics.Vector2h.Y
  - OpenTK.Mathematics.Vector2h.Yx
  langs:
  - csharp
  - vb
  name: Vector2h
  nameWithType: Vector2h
  fullName: OpenTK.Mathematics.Vector2h
  type: Struct
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Vector2h
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 36
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: 2-component Vector of the Half type. Occupies 4 Byte total.
  example: []
  syntax:
    content: >-
      [Serializable]

      public struct Vector2h : ISerializable, IEquatable<Vector2h>, IFormattable
    content.vb: >-
      <Serializable>

      Public Structure Vector2h Implements ISerializable, IEquatable(Of Vector2h), IFormattable
  implements:
  - System.Runtime.Serialization.ISerializable
  - System.IEquatable{OpenTK.Mathematics.Vector2h}
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector2h.X
  commentId: F:OpenTK.Mathematics.Vector2h.X
  id: X
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: X
  nameWithType: Vector2h.X
  fullName: OpenTK.Mathematics.Vector2h.X
  type: Field
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: X
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 43
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: The X component of the Half2.
  example: []
  syntax:
    content: public Half X
    return:
      type: OpenTK.Mathematics.Half
    content.vb: Public X As Half
- uid: OpenTK.Mathematics.Vector2h.Y
  commentId: F:OpenTK.Mathematics.Vector2h.Y
  id: Y
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: Vector2h.Y
  fullName: OpenTK.Mathematics.Vector2h.Y
  type: Field
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Y
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 48
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: The Y component of the Half2.
  example: []
  syntax:
    content: public Half Y
    return:
      type: OpenTK.Mathematics.Half
    content.vb: Public Y As Half
- uid: OpenTK.Mathematics.Vector2h.#ctor(OpenTK.Mathematics.Half)
  commentId: M:OpenTK.Mathematics.Vector2h.#ctor(OpenTK.Mathematics.Half)
  id: '#ctor(OpenTK.Mathematics.Half)'
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: Vector2h(Half)
  nameWithType: Vector2h.Vector2h(Half)
  fullName: OpenTK.Mathematics.Vector2h.Vector2h(OpenTK.Mathematics.Half)
  type: Constructor
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: .ctor
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 54
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector2h" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector2h(Half value)
    parameters:
    - id: value
      type: OpenTK.Mathematics.Half
      description: The value that will initialize this instance.
    content.vb: Public Sub New(value As Half)
  overload: OpenTK.Mathematics.Vector2h.#ctor*
  nameWithType.vb: Vector2h.New(Half)
  fullName.vb: OpenTK.Mathematics.Vector2h.New(OpenTK.Mathematics.Half)
  name.vb: New(Half)
- uid: OpenTK.Mathematics.Vector2h.#ctor(System.Single)
  commentId: M:OpenTK.Mathematics.Vector2h.#ctor(System.Single)
  id: '#ctor(System.Single)'
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: Vector2h(float)
  nameWithType: Vector2h.Vector2h(float)
  fullName: OpenTK.Mathematics.Vector2h.Vector2h(float)
  type: Constructor
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: .ctor
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 64
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector2h" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector2h(float value)
    parameters:
    - id: value
      type: System.Single
      description: The value that will initialize this instance.
    content.vb: Public Sub New(value As Single)
  overload: OpenTK.Mathematics.Vector2h.#ctor*
  nameWithType.vb: Vector2h.New(Single)
  fullName.vb: OpenTK.Mathematics.Vector2h.New(Single)
  name.vb: New(Single)
- uid: OpenTK.Mathematics.Vector2h.#ctor(OpenTK.Mathematics.Half,OpenTK.Mathematics.Half)
  commentId: M:OpenTK.Mathematics.Vector2h.#ctor(OpenTK.Mathematics.Half,OpenTK.Mathematics.Half)
  id: '#ctor(OpenTK.Mathematics.Half,OpenTK.Mathematics.Half)'
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: Vector2h(Half, Half)
  nameWithType: Vector2h.Vector2h(Half, Half)
  fullName: OpenTK.Mathematics.Vector2h.Vector2h(OpenTK.Mathematics.Half, OpenTK.Mathematics.Half)
  type: Constructor
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: .ctor
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 75
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector2h" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector2h(Half x, Half y)
    parameters:
    - id: x
      type: OpenTK.Mathematics.Half
      description: The X component of the vector.
    - id: y
      type: OpenTK.Mathematics.Half
      description: The Y component of the vector.
    content.vb: Public Sub New(x As Half, y As Half)
  overload: OpenTK.Mathematics.Vector2h.#ctor*
  nameWithType.vb: Vector2h.New(Half, Half)
  fullName.vb: OpenTK.Mathematics.Vector2h.New(OpenTK.Mathematics.Half, OpenTK.Mathematics.Half)
  name.vb: New(Half, Half)
- uid: OpenTK.Mathematics.Vector2h.#ctor(System.Single,System.Single)
  commentId: M:OpenTK.Mathematics.Vector2h.#ctor(System.Single,System.Single)
  id: '#ctor(System.Single,System.Single)'
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: Vector2h(float, float)
  nameWithType: Vector2h.Vector2h(float, float)
  fullName: OpenTK.Mathematics.Vector2h.Vector2h(float, float)
  type: Constructor
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: .ctor
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 86
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector2h" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector2h(float x, float y)
    parameters:
    - id: x
      type: System.Single
      description: The X component of the vector.
    - id: y
      type: System.Single
      description: The Y component of the vector.
    content.vb: Public Sub New(x As Single, y As Single)
  overload: OpenTK.Mathematics.Vector2h.#ctor*
  nameWithType.vb: Vector2h.New(Single, Single)
  fullName.vb: OpenTK.Mathematics.Vector2h.New(Single, Single)
  name.vb: New(Single, Single)
- uid: OpenTK.Mathematics.Vector2h.#ctor(System.Single,System.Single,System.Boolean)
  commentId: M:OpenTK.Mathematics.Vector2h.#ctor(System.Single,System.Single,System.Boolean)
  id: '#ctor(System.Single,System.Single,System.Boolean)'
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: Vector2h(float, float, bool)
  nameWithType: Vector2h.Vector2h(float, float, bool)
  fullName: OpenTK.Mathematics.Vector2h.Vector2h(float, float, bool)
  type: Constructor
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: .ctor
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 98
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector2h" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector2h(float x, float y, bool throwOnError)
    parameters:
    - id: x
      type: System.Single
      description: The X component of the vector.
    - id: y
      type: System.Single
      description: The Y component of the vector.
    - id: throwOnError
      type: System.Boolean
      description: Enable checks that will throw if the conversion result is not meaningful.
    content.vb: Public Sub New(x As Single, y As Single, throwOnError As Boolean)
  overload: OpenTK.Mathematics.Vector2h.#ctor*
  nameWithType.vb: Vector2h.New(Single, Single, Boolean)
  fullName.vb: OpenTK.Mathematics.Vector2h.New(Single, Single, Boolean)
  name.vb: New(Single, Single, Boolean)
- uid: OpenTK.Mathematics.Vector2h.#ctor(OpenTK.Mathematics.Vector2)
  commentId: M:OpenTK.Mathematics.Vector2h.#ctor(OpenTK.Mathematics.Vector2)
  id: '#ctor(OpenTK.Mathematics.Vector2)'
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: Vector2h(Vector2)
  nameWithType: Vector2h.Vector2h(Vector2)
  fullName: OpenTK.Mathematics.Vector2h.Vector2h(OpenTK.Mathematics.Vector2)
  type: Constructor
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: .ctor
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 108
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector2h" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector2h(Vector2 v)
    parameters:
    - id: v
      type: OpenTK.Mathematics.Vector2
      description: The <xref href="OpenTK.Mathematics.Vector2" data-throw-if-not-resolved="false"></xref> to convert.
    content.vb: Public Sub New(v As Vector2)
  overload: OpenTK.Mathematics.Vector2h.#ctor*
  nameWithType.vb: Vector2h.New(Vector2)
  fullName.vb: OpenTK.Mathematics.Vector2h.New(OpenTK.Mathematics.Vector2)
  name.vb: New(Vector2)
- uid: OpenTK.Mathematics.Vector2h.#ctor(OpenTK.Mathematics.Vector2,System.Boolean)
  commentId: M:OpenTK.Mathematics.Vector2h.#ctor(OpenTK.Mathematics.Vector2,System.Boolean)
  id: '#ctor(OpenTK.Mathematics.Vector2,System.Boolean)'
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: Vector2h(Vector2, bool)
  nameWithType: Vector2h.Vector2h(Vector2, bool)
  fullName: OpenTK.Mathematics.Vector2h.Vector2h(OpenTK.Mathematics.Vector2, bool)
  type: Constructor
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: .ctor
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 119
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector2h" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector2h(Vector2 v, bool throwOnError)
    parameters:
    - id: v
      type: OpenTK.Mathematics.Vector2
      description: The <xref href="OpenTK.Mathematics.Vector2" data-throw-if-not-resolved="false"></xref> to convert.
    - id: throwOnError
      type: System.Boolean
      description: Enable checks that will throw if the conversion result is not meaningful.
    content.vb: Public Sub New(v As Vector2, throwOnError As Boolean)
  overload: OpenTK.Mathematics.Vector2h.#ctor*
  nameWithType.vb: Vector2h.New(Vector2, Boolean)
  fullName.vb: OpenTK.Mathematics.Vector2h.New(OpenTK.Mathematics.Vector2, Boolean)
  name.vb: New(Vector2, Boolean)
- uid: OpenTK.Mathematics.Vector2h.#ctor(OpenTK.Mathematics.Vector2@)
  commentId: M:OpenTK.Mathematics.Vector2h.#ctor(OpenTK.Mathematics.Vector2@)
  id: '#ctor(OpenTK.Mathematics.Vector2@)'
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: Vector2h(in Vector2)
  nameWithType: Vector2h.Vector2h(in Vector2)
  fullName: OpenTK.Mathematics.Vector2h.Vector2h(in OpenTK.Mathematics.Vector2)
  type: Constructor
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: .ctor
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 129
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector2h" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector2h(in Vector2 v)
    parameters:
    - id: v
      type: OpenTK.Mathematics.Vector2
      description: The <xref href="OpenTK.Mathematics.Vector2" data-throw-if-not-resolved="false"></xref> to convert.
    content.vb: Public Sub New(v As Vector2)
  overload: OpenTK.Mathematics.Vector2h.#ctor*
  nameWithType.vb: Vector2h.New(Vector2)
  fullName.vb: OpenTK.Mathematics.Vector2h.New(OpenTK.Mathematics.Vector2)
  name.vb: New(Vector2)
- uid: OpenTK.Mathematics.Vector2h.#ctor(OpenTK.Mathematics.Vector2@,System.Boolean)
  commentId: M:OpenTK.Mathematics.Vector2h.#ctor(OpenTK.Mathematics.Vector2@,System.Boolean)
  id: '#ctor(OpenTK.Mathematics.Vector2@,System.Boolean)'
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: Vector2h(in Vector2, bool)
  nameWithType: Vector2h.Vector2h(in Vector2, bool)
  fullName: OpenTK.Mathematics.Vector2h.Vector2h(in OpenTK.Mathematics.Vector2, bool)
  type: Constructor
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: .ctor
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 140
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector2h" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector2h(in Vector2 v, bool throwOnError)
    parameters:
    - id: v
      type: OpenTK.Mathematics.Vector2
      description: The <xref href="OpenTK.Mathematics.Vector2" data-throw-if-not-resolved="false"></xref> to convert.
    - id: throwOnError
      type: System.Boolean
      description: Enable checks that will throw if the conversion result is not meaningful.
    content.vb: Public Sub New(v As Vector2, throwOnError As Boolean)
  overload: OpenTK.Mathematics.Vector2h.#ctor*
  nameWithType.vb: Vector2h.New(Vector2, Boolean)
  fullName.vb: OpenTK.Mathematics.Vector2h.New(OpenTK.Mathematics.Vector2, Boolean)
  name.vb: New(Vector2, Boolean)
- uid: OpenTK.Mathematics.Vector2h.#ctor(OpenTK.Mathematics.Vector2d)
  commentId: M:OpenTK.Mathematics.Vector2h.#ctor(OpenTK.Mathematics.Vector2d)
  id: '#ctor(OpenTK.Mathematics.Vector2d)'
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: Vector2h(Vector2d)
  nameWithType: Vector2h.Vector2h(Vector2d)
  fullName: OpenTK.Mathematics.Vector2h.Vector2h(OpenTK.Mathematics.Vector2d)
  type: Constructor
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: .ctor
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 150
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector2h" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector2h(Vector2d v)
    parameters:
    - id: v
      type: OpenTK.Mathematics.Vector2d
      description: The <xref href="OpenTK.Mathematics.Vector2d" data-throw-if-not-resolved="false"></xref> to convert.
    content.vb: Public Sub New(v As Vector2d)
  overload: OpenTK.Mathematics.Vector2h.#ctor*
  nameWithType.vb: Vector2h.New(Vector2d)
  fullName.vb: OpenTK.Mathematics.Vector2h.New(OpenTK.Mathematics.Vector2d)
  name.vb: New(Vector2d)
- uid: OpenTK.Mathematics.Vector2h.#ctor(OpenTK.Mathematics.Vector2d,System.Boolean)
  commentId: M:OpenTK.Mathematics.Vector2h.#ctor(OpenTK.Mathematics.Vector2d,System.Boolean)
  id: '#ctor(OpenTK.Mathematics.Vector2d,System.Boolean)'
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: Vector2h(Vector2d, bool)
  nameWithType: Vector2h.Vector2h(Vector2d, bool)
  fullName: OpenTK.Mathematics.Vector2h.Vector2h(OpenTK.Mathematics.Vector2d, bool)
  type: Constructor
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: .ctor
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 161
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector2h" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector2h(Vector2d v, bool throwOnError)
    parameters:
    - id: v
      type: OpenTK.Mathematics.Vector2d
      description: The <xref href="OpenTK.Mathematics.Vector2d" data-throw-if-not-resolved="false"></xref> to convert.
    - id: throwOnError
      type: System.Boolean
      description: Enable checks that will throw if the conversion result is not meaningful.
    content.vb: Public Sub New(v As Vector2d, throwOnError As Boolean)
  overload: OpenTK.Mathematics.Vector2h.#ctor*
  nameWithType.vb: Vector2h.New(Vector2d, Boolean)
  fullName.vb: OpenTK.Mathematics.Vector2h.New(OpenTK.Mathematics.Vector2d, Boolean)
  name.vb: New(Vector2d, Boolean)
- uid: OpenTK.Mathematics.Vector2h.#ctor(OpenTK.Mathematics.Vector2d@)
  commentId: M:OpenTK.Mathematics.Vector2h.#ctor(OpenTK.Mathematics.Vector2d@)
  id: '#ctor(OpenTK.Mathematics.Vector2d@)'
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: Vector2h(in Vector2d)
  nameWithType: Vector2h.Vector2h(in Vector2d)
  fullName: OpenTK.Mathematics.Vector2h.Vector2h(in OpenTK.Mathematics.Vector2d)
  type: Constructor
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: .ctor
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 171
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector2h" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector2h(in Vector2d v)
    parameters:
    - id: v
      type: OpenTK.Mathematics.Vector2d
      description: The <xref href="OpenTK.Mathematics.Vector2d" data-throw-if-not-resolved="false"></xref> to convert.
    content.vb: Public Sub New(v As Vector2d)
  overload: OpenTK.Mathematics.Vector2h.#ctor*
  nameWithType.vb: Vector2h.New(Vector2d)
  fullName.vb: OpenTK.Mathematics.Vector2h.New(OpenTK.Mathematics.Vector2d)
  name.vb: New(Vector2d)
- uid: OpenTK.Mathematics.Vector2h.#ctor(OpenTK.Mathematics.Vector2d@,System.Boolean)
  commentId: M:OpenTK.Mathematics.Vector2h.#ctor(OpenTK.Mathematics.Vector2d@,System.Boolean)
  id: '#ctor(OpenTK.Mathematics.Vector2d@,System.Boolean)'
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: Vector2h(in Vector2d, bool)
  nameWithType: Vector2h.Vector2h(in Vector2d, bool)
  fullName: OpenTK.Mathematics.Vector2h.Vector2h(in OpenTK.Mathematics.Vector2d, bool)
  type: Constructor
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: .ctor
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 182
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector2h" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector2h(in Vector2d v, bool throwOnError)
    parameters:
    - id: v
      type: OpenTK.Mathematics.Vector2d
      description: The <xref href="OpenTK.Mathematics.Vector2d" data-throw-if-not-resolved="false"></xref> to convert.
    - id: throwOnError
      type: System.Boolean
      description: Enable checks that will throw if the conversion result is not meaningful.
    content.vb: Public Sub New(v As Vector2d, throwOnError As Boolean)
  overload: OpenTK.Mathematics.Vector2h.#ctor*
  nameWithType.vb: Vector2h.New(Vector2d, Boolean)
  fullName.vb: OpenTK.Mathematics.Vector2h.New(OpenTK.Mathematics.Vector2d, Boolean)
  name.vb: New(Vector2d, Boolean)
- uid: OpenTK.Mathematics.Vector2h.Yx
  commentId: P:OpenTK.Mathematics.Vector2h.Yx
  id: Yx
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: Yx
  nameWithType: Vector2h.Yx
  fullName: OpenTK.Mathematics.Vector2h.Yx
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Yx
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 191
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector2h with the Y and X components of this instance.
  example: []
  syntax:
    content: public Vector2h Yx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2h
    content.vb: Public Property Yx As Vector2h
  overload: OpenTK.Mathematics.Vector2h.Yx*
- uid: OpenTK.Mathematics.Vector2h.ToVector2
  commentId: M:OpenTK.Mathematics.Vector2h.ToVector2
  id: ToVector2
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: ToVector2()
  nameWithType: Vector2h.ToVector2()
  fullName: OpenTK.Mathematics.Vector2h.ToVector2()
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: ToVector2
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 206
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns this Half2 instance's contents as Vector2.
  example: []
  syntax:
    content: public readonly Vector2 ToVector2()
    return:
      type: OpenTK.Mathematics.Vector2
      description: The vector.
    content.vb: Public Function ToVector2() As Vector2
  overload: OpenTK.Mathematics.Vector2h.ToVector2*
- uid: OpenTK.Mathematics.Vector2h.ToVector2d
  commentId: M:OpenTK.Mathematics.Vector2h.ToVector2d
  id: ToVector2d
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: ToVector2d()
  nameWithType: Vector2h.ToVector2d()
  fullName: OpenTK.Mathematics.Vector2h.ToVector2d()
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: ToVector2d
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 215
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns this Half2 instance's contents as Vector2d.
  example: []
  syntax:
    content: public readonly Vector2d ToVector2d()
    return:
      type: OpenTK.Mathematics.Vector2d
      description: The vector.
    content.vb: Public Function ToVector2d() As Vector2d
  overload: OpenTK.Mathematics.Vector2h.ToVector2d*
- uid: OpenTK.Mathematics.Vector2h.op_Implicit(OpenTK.Mathematics.Vector2h)~OpenTK.Mathematics.Vector2
  commentId: M:OpenTK.Mathematics.Vector2h.op_Implicit(OpenTK.Mathematics.Vector2h)~OpenTK.Mathematics.Vector2
  id: op_Implicit(OpenTK.Mathematics.Vector2h)~OpenTK.Mathematics.Vector2
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: implicit operator Vector2(Vector2h)
  nameWithType: Vector2h.implicit operator Vector2(Vector2h)
  fullName: OpenTK.Mathematics.Vector2h.implicit operator OpenTK.Mathematics.Vector2(OpenTK.Mathematics.Vector2h)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: op_Implicit
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 225
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts OpenTK.Vector2h to OpenTK.Vector2.
  example: []
  syntax:
    content: >-
      [Pure]

      public static implicit operator Vector2(Vector2h vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector2h
      description: The Vector2h to convert.
    return:
      type: OpenTK.Mathematics.Vector2
      description: The resulting Vector2.
    content.vb: >-
      <Pure>

      Public Shared Widening Operator CType(vec As Vector2h) As Vector2
  overload: OpenTK.Mathematics.Vector2h.op_Implicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector2h.CType(Vector2h)
  fullName.vb: OpenTK.Mathematics.Vector2h.CType(OpenTK.Mathematics.Vector2h)
  name.vb: CType(Vector2h)
- uid: OpenTK.Mathematics.Vector2h.op_Implicit(OpenTK.Mathematics.Vector2h)~OpenTK.Mathematics.Vector2d
  commentId: M:OpenTK.Mathematics.Vector2h.op_Implicit(OpenTK.Mathematics.Vector2h)~OpenTK.Mathematics.Vector2d
  id: op_Implicit(OpenTK.Mathematics.Vector2h)~OpenTK.Mathematics.Vector2d
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: implicit operator Vector2d(Vector2h)
  nameWithType: Vector2h.implicit operator Vector2d(Vector2h)
  fullName: OpenTK.Mathematics.Vector2h.implicit operator OpenTK.Mathematics.Vector2d(OpenTK.Mathematics.Vector2h)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: op_Implicit
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 236
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts OpenTK.Vector2h to OpenTK.Vector2d.
  example: []
  syntax:
    content: >-
      [Pure]

      public static implicit operator Vector2d(Vector2h vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector2h
      description: The Vector2h to convert.
    return:
      type: OpenTK.Mathematics.Vector2d
      description: The resulting Vector2d.
    content.vb: >-
      <Pure>

      Public Shared Widening Operator CType(vec As Vector2h) As Vector2d
  overload: OpenTK.Mathematics.Vector2h.op_Implicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector2h.CType(Vector2h)
  fullName.vb: OpenTK.Mathematics.Vector2h.CType(OpenTK.Mathematics.Vector2h)
  name.vb: CType(Vector2h)
- uid: OpenTK.Mathematics.Vector2h.op_Explicit(OpenTK.Mathematics.Vector2h)~OpenTK.Mathematics.Vector2i
  commentId: M:OpenTK.Mathematics.Vector2h.op_Explicit(OpenTK.Mathematics.Vector2h)~OpenTK.Mathematics.Vector2i
  id: op_Explicit(OpenTK.Mathematics.Vector2h)~OpenTK.Mathematics.Vector2i
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: explicit operator Vector2i(Vector2h)
  nameWithType: Vector2h.explicit operator Vector2i(Vector2h)
  fullName: OpenTK.Mathematics.Vector2h.explicit operator OpenTK.Mathematics.Vector2i(OpenTK.Mathematics.Vector2h)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: op_Explicit
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 247
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts OpenTK.Vector2h to OpenTK.Vector2i.
  example: []
  syntax:
    content: >-
      [Pure]

      public static explicit operator Vector2i(Vector2h vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector2h
      description: The Vector2h to convert.
    return:
      type: OpenTK.Mathematics.Vector2i
      description: The resulting Vector2i.
    content.vb: >-
      <Pure>

      Public Shared Narrowing Operator CType(vec As Vector2h) As Vector2i
  overload: OpenTK.Mathematics.Vector2h.op_Explicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector2h.CType(Vector2h)
  fullName.vb: OpenTK.Mathematics.Vector2h.CType(OpenTK.Mathematics.Vector2h)
  name.vb: CType(Vector2h)
- uid: OpenTK.Mathematics.Vector2h.op_Implicit(System.ValueTuple{OpenTK.Mathematics.Half,OpenTK.Mathematics.Half})~OpenTK.Mathematics.Vector2h
  commentId: M:OpenTK.Mathematics.Vector2h.op_Implicit(System.ValueTuple{OpenTK.Mathematics.Half,OpenTK.Mathematics.Half})~OpenTK.Mathematics.Vector2h
  id: op_Implicit(System.ValueTuple{OpenTK.Mathematics.Half,OpenTK.Mathematics.Half})~OpenTK.Mathematics.Vector2h
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: implicit operator Vector2h((Half X, Half Y))
  nameWithType: Vector2h.implicit operator Vector2h((Half X, Half Y))
  fullName: OpenTK.Mathematics.Vector2h.implicit operator OpenTK.Mathematics.Vector2h((OpenTK.Mathematics.Half X, OpenTK.Mathematics.Half Y))
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: op_Implicit
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 259
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector2h" data-throw-if-not-resolved="false"></xref> struct using a tuple containing the component

    values.
  example: []
  syntax:
    content: >-
      [Pure]

      public static implicit operator Vector2h((Half X, Half Y) values)
    parameters:
    - id: values
      type: System.ValueTuple{OpenTK.Mathematics.Half,OpenTK.Mathematics.Half}
      description: A tuple containing the component values.
    return:
      type: OpenTK.Mathematics.Vector2h
      description: A new instance of the <xref href="OpenTK.Mathematics.Vector2h" data-throw-if-not-resolved="false"></xref> struct with the given component values.
    content.vb: >-
      <Pure>

      Public Shared Widening Operator CType(values As (X As Half, Y As Half)) As Vector2h
  overload: OpenTK.Mathematics.Vector2h.op_Implicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector2h.CType((X As Half, Y As Half))
  fullName.vb: OpenTK.Mathematics.Vector2h.CType((X As OpenTK.Mathematics.Half, Y As OpenTK.Mathematics.Half))
  name.vb: CType((X As Half, Y As Half))
- uid: OpenTK.Mathematics.Vector2h.op_Equality(OpenTK.Mathematics.Vector2h,OpenTK.Mathematics.Vector2h)
  commentId: M:OpenTK.Mathematics.Vector2h.op_Equality(OpenTK.Mathematics.Vector2h,OpenTK.Mathematics.Vector2h)
  id: op_Equality(OpenTK.Mathematics.Vector2h,OpenTK.Mathematics.Vector2h)
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: operator ==(Vector2h, Vector2h)
  nameWithType: Vector2h.operator ==(Vector2h, Vector2h)
  fullName: OpenTK.Mathematics.Vector2h.operator ==(OpenTK.Mathematics.Vector2h, OpenTK.Mathematics.Vector2h)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: op_Equality
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 271
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Compares the specified instances for equality.
  example: []
  syntax:
    content: public static bool operator ==(Vector2h left, Vector2h right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector2h
      description: Left operand.
    - id: right
      type: OpenTK.Mathematics.Vector2h
      description: Right operand.
    return:
      type: System.Boolean
      description: True if both instances are equal; false otherwise.
    content.vb: Public Shared Operator =(left As Vector2h, right As Vector2h) As Boolean
  overload: OpenTK.Mathematics.Vector2h.op_Equality*
  nameWithType.vb: Vector2h.=(Vector2h, Vector2h)
  fullName.vb: OpenTK.Mathematics.Vector2h.=(OpenTK.Mathematics.Vector2h, OpenTK.Mathematics.Vector2h)
  name.vb: =(Vector2h, Vector2h)
- uid: OpenTK.Mathematics.Vector2h.op_Inequality(OpenTK.Mathematics.Vector2h,OpenTK.Mathematics.Vector2h)
  commentId: M:OpenTK.Mathematics.Vector2h.op_Inequality(OpenTK.Mathematics.Vector2h,OpenTK.Mathematics.Vector2h)
  id: op_Inequality(OpenTK.Mathematics.Vector2h,OpenTK.Mathematics.Vector2h)
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: operator !=(Vector2h, Vector2h)
  nameWithType: Vector2h.operator !=(Vector2h, Vector2h)
  fullName: OpenTK.Mathematics.Vector2h.operator !=(OpenTK.Mathematics.Vector2h, OpenTK.Mathematics.Vector2h)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: op_Inequality
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 282
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Compares the specified instances for inequality.
  example: []
  syntax:
    content: public static bool operator !=(Vector2h left, Vector2h right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector2h
      description: Left operand.
    - id: right
      type: OpenTK.Mathematics.Vector2h
      description: Right operand.
    return:
      type: System.Boolean
      description: True if both instances are not equal; false otherwise.
    content.vb: Public Shared Operator <>(left As Vector2h, right As Vector2h) As Boolean
  overload: OpenTK.Mathematics.Vector2h.op_Inequality*
  nameWithType.vb: Vector2h.<>(Vector2h, Vector2h)
  fullName.vb: OpenTK.Mathematics.Vector2h.<>(OpenTK.Mathematics.Vector2h, OpenTK.Mathematics.Vector2h)
  name.vb: <>(Vector2h, Vector2h)
- uid: OpenTK.Mathematics.Vector2h.SizeInBytes
  commentId: F:OpenTK.Mathematics.Vector2h.SizeInBytes
  id: SizeInBytes
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: SizeInBytes
  nameWithType: Vector2h.SizeInBytes
  fullName: OpenTK.Mathematics.Vector2h.SizeInBytes
  type: Field
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: SizeInBytes
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 290
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: The size in bytes for an instance of the Half2 struct is 4.
  example: []
  syntax:
    content: public static readonly int SizeInBytes
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly SizeInBytes As Integer
- uid: OpenTK.Mathematics.Vector2h.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:OpenTK.Mathematics.Vector2h.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: Vector2h(SerializationInfo, StreamingContext)
  nameWithType: Vector2h.Vector2h(SerializationInfo, StreamingContext)
  fullName: OpenTK.Mathematics.Vector2h.Vector2h(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Constructor
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: .ctor
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 297
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector2h" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector2h(SerializationInfo info, StreamingContext context)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The serialization info.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The streaming context.
    content.vb: Public Sub New(info As SerializationInfo, context As StreamingContext)
  overload: OpenTK.Mathematics.Vector2h.#ctor*
  nameWithType.vb: Vector2h.New(SerializationInfo, StreamingContext)
  fullName.vb: OpenTK.Mathematics.Vector2h.New(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  name.vb: New(SerializationInfo, StreamingContext)
- uid: OpenTK.Mathematics.Vector2h.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:OpenTK.Mathematics.Vector2h.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: Vector2h.GetObjectData(SerializationInfo, StreamingContext)
  fullName: OpenTK.Mathematics.Vector2h.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: GetObjectData
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 304
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  example: []
  syntax:
    content: public readonly void GetObjectData(SerializationInfo info, StreamingContext context)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
    - id: context
      type: System.Runtime.Serialization.StreamingContext
    content.vb: Public Sub GetObjectData(info As SerializationInfo, context As StreamingContext)
  overload: OpenTK.Mathematics.Vector2h.GetObjectData*
  implements:
  - System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
- uid: OpenTK.Mathematics.Vector2h.FromBinaryStream(System.IO.BinaryReader)
  commentId: M:OpenTK.Mathematics.Vector2h.FromBinaryStream(System.IO.BinaryReader)
  id: FromBinaryStream(System.IO.BinaryReader)
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: FromBinaryStream(BinaryReader)
  nameWithType: Vector2h.FromBinaryStream(BinaryReader)
  fullName: OpenTK.Mathematics.Vector2h.FromBinaryStream(System.IO.BinaryReader)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: FromBinaryStream
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 314
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Updates the X and Y components of this instance by reading from a Stream.
  example: []
  syntax:
    content: public void FromBinaryStream(BinaryReader bin)
    parameters:
    - id: bin
      type: System.IO.BinaryReader
      description: A BinaryReader instance associated with an open Stream.
    content.vb: Public Sub FromBinaryStream(bin As BinaryReader)
  overload: OpenTK.Mathematics.Vector2h.FromBinaryStream*
- uid: OpenTK.Mathematics.Vector2h.ToBinaryStream(System.IO.BinaryWriter)
  commentId: M:OpenTK.Mathematics.Vector2h.ToBinaryStream(System.IO.BinaryWriter)
  id: ToBinaryStream(System.IO.BinaryWriter)
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: ToBinaryStream(BinaryWriter)
  nameWithType: Vector2h.ToBinaryStream(BinaryWriter)
  fullName: OpenTK.Mathematics.Vector2h.ToBinaryStream(System.IO.BinaryWriter)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: ToBinaryStream
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 324
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Writes the X and Y components of this instance into a Stream.
  example: []
  syntax:
    content: public void ToBinaryStream(BinaryWriter bin)
    parameters:
    - id: bin
      type: System.IO.BinaryWriter
      description: A BinaryWriter instance associated with an open Stream.
    content.vb: Public Sub ToBinaryStream(bin As BinaryWriter)
  overload: OpenTK.Mathematics.Vector2h.ToBinaryStream*
- uid: OpenTK.Mathematics.Vector2h.ToString
  commentId: M:OpenTK.Mathematics.Vector2h.ToString
  id: ToString
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Vector2h.ToString()
  fullName: OpenTK.Mathematics.Vector2h.ToString()
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: ToString
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 331
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: OpenTK.Mathematics.Vector2h.ToString*
- uid: OpenTK.Mathematics.Vector2h.ToString(System.String)
  commentId: M:OpenTK.Mathematics.Vector2h.ToString(System.String)
  id: ToString(System.String)
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: ToString(string)
  nameWithType: Vector2h.ToString(string)
  fullName: OpenTK.Mathematics.Vector2h.ToString(string)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: ToString
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 337
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  example: []
  syntax:
    content: public string ToString(string format)
    parameters:
    - id: format
      type: System.String
    return:
      type: System.String
    content.vb: Public Function ToString(format As String) As String
  overload: OpenTK.Mathematics.Vector2h.ToString*
  nameWithType.vb: Vector2h.ToString(String)
  fullName.vb: OpenTK.Mathematics.Vector2h.ToString(String)
  name.vb: ToString(String)
- uid: OpenTK.Mathematics.Vector2h.ToString(System.IFormatProvider)
  commentId: M:OpenTK.Mathematics.Vector2h.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: ToString(IFormatProvider)
  nameWithType: Vector2h.ToString(IFormatProvider)
  fullName: OpenTK.Mathematics.Vector2h.ToString(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: ToString
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 343
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  example: []
  syntax:
    content: public string ToString(IFormatProvider formatProvider)
    parameters:
    - id: formatProvider
      type: System.IFormatProvider
    return:
      type: System.String
    content.vb: Public Function ToString(formatProvider As IFormatProvider) As String
  overload: OpenTK.Mathematics.Vector2h.ToString*
- uid: OpenTK.Mathematics.Vector2h.ToString(System.String,System.IFormatProvider)
  commentId: M:OpenTK.Mathematics.Vector2h.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: ToString(string, IFormatProvider)
  nameWithType: Vector2h.ToString(string, IFormatProvider)
  fullName: OpenTK.Mathematics.Vector2h.ToString(string, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: ToString
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 349
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  example: []
  syntax:
    content: public string ToString(string format, IFormatProvider formatProvider)
    parameters:
    - id: format
      type: System.String
    - id: formatProvider
      type: System.IFormatProvider
    return:
      type: System.String
    content.vb: Public Function ToString(format As String, formatProvider As IFormatProvider) As String
  overload: OpenTK.Mathematics.Vector2h.ToString*
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  nameWithType.vb: Vector2h.ToString(String, IFormatProvider)
  fullName.vb: OpenTK.Mathematics.Vector2h.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
- uid: OpenTK.Mathematics.Vector2h.Equals(System.Object)
  commentId: M:OpenTK.Mathematics.Vector2h.Equals(System.Object)
  id: Equals(System.Object)
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: Vector2h.Equals(object)
  fullName: OpenTK.Mathematics.Vector2h.Equals(object)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Equals
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 359
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: OpenTK.Mathematics.Vector2h.Equals*
  nameWithType.vb: Vector2h.Equals(Object)
  fullName.vb: OpenTK.Mathematics.Vector2h.Equals(Object)
  name.vb: Equals(Object)
- uid: OpenTK.Mathematics.Vector2h.Equals(OpenTK.Mathematics.Vector2h)
  commentId: M:OpenTK.Mathematics.Vector2h.Equals(OpenTK.Mathematics.Vector2h)
  id: Equals(OpenTK.Mathematics.Vector2h)
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: Equals(Vector2h)
  nameWithType: Vector2h.Equals(Vector2h)
  fullName: OpenTK.Mathematics.Vector2h.Equals(OpenTK.Mathematics.Vector2h)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Equals
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 365
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  example: []
  syntax:
    content: public bool Equals(Vector2h other)
    parameters:
    - id: other
      type: OpenTK.Mathematics.Vector2h
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As Vector2h) As Boolean
  overload: OpenTK.Mathematics.Vector2h.Equals*
  implements:
  - System.IEquatable{OpenTK.Mathematics.Vector2h}.Equals(OpenTK.Mathematics.Vector2h)
- uid: OpenTK.Mathematics.Vector2h.GetHashCode
  commentId: M:OpenTK.Mathematics.Vector2h.GetHashCode
  id: GetHashCode
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Vector2h.GetHashCode()
  fullName: OpenTK.Mathematics.Vector2h.GetHashCode()
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: GetHashCode
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 372
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  example: []
  syntax:
    content: public override readonly int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: OpenTK.Mathematics.Vector2h.GetHashCode*
- uid: OpenTK.Mathematics.Vector2h.GetBytes(OpenTK.Mathematics.Vector2h)
  commentId: M:OpenTK.Mathematics.Vector2h.GetBytes(OpenTK.Mathematics.Vector2h)
  id: GetBytes(OpenTK.Mathematics.Vector2h)
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: GetBytes(Vector2h)
  nameWithType: Vector2h.GetBytes(Vector2h)
  fullName: OpenTK.Mathematics.Vector2h.GetBytes(OpenTK.Mathematics.Vector2h)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: GetBytes
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 382
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns the Half2 as an array of bytes.
  example: []
  syntax:
    content: >-
      [Pure]

      public static byte[] GetBytes(Vector2h h)
    parameters:
    - id: h
      type: OpenTK.Mathematics.Vector2h
      description: The Half2 to convert.
    return:
      type: System.Byte[]
      description: The input as byte array.
    content.vb: >-
      <Pure>

      Public Shared Function GetBytes(h As Vector2h) As Byte()
  overload: OpenTK.Mathematics.Vector2h.GetBytes*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector2h.FromBytes(System.Byte[],System.Int32)
  commentId: M:OpenTK.Mathematics.Vector2h.FromBytes(System.Byte[],System.Int32)
  id: FromBytes(System.Byte[],System.Int32)
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: FromBytes(byte[], int)
  nameWithType: Vector2h.FromBytes(byte[], int)
  fullName: OpenTK.Mathematics.Vector2h.FromBytes(byte[], int)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: FromBytes
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 403
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts an array of bytes into Half2.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector2h FromBytes(byte[] value, int startIndex)
    parameters:
    - id: value
      type: System.Byte[]
      description: A Half2 in it's byte[] representation.
    - id: startIndex
      type: System.Int32
      description: The starting position within value.
    return:
      type: OpenTK.Mathematics.Vector2h
      description: A new Half2 instance.
    content.vb: >-
      <Pure>

      Public Shared Function FromBytes(value As Byte(), startIndex As Integer) As Vector2h
  overload: OpenTK.Mathematics.Vector2h.FromBytes*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector2h.FromBytes(Byte(), Integer)
  fullName.vb: OpenTK.Mathematics.Vector2h.FromBytes(Byte(), Integer)
  name.vb: FromBytes(Byte(), Integer)
- uid: OpenTK.Mathematics.Vector2h.Deconstruct(OpenTK.Mathematics.Half@,OpenTK.Mathematics.Half@)
  commentId: M:OpenTK.Mathematics.Vector2h.Deconstruct(OpenTK.Mathematics.Half@,OpenTK.Mathematics.Half@)
  id: Deconstruct(OpenTK.Mathematics.Half@,OpenTK.Mathematics.Half@)
  parent: OpenTK.Mathematics.Vector2h
  langs:
  - csharp
  - vb
  name: Deconstruct(out Half, out Half)
  nameWithType: Vector2h.Deconstruct(out Half, out Half)
  fullName: OpenTK.Mathematics.Vector2h.Deconstruct(out OpenTK.Mathematics.Half, out OpenTK.Mathematics.Half)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector2h.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Deconstruct
    path: opentk/src/OpenTK.Mathematics/Vector/Vector2h.cs
    startLine: 416
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Deconstructs the vector into it's individual components.
  example: []
  syntax:
    content: >-
      [Pure]

      public readonly void Deconstruct(out Half x, out Half y)
    parameters:
    - id: x
      type: OpenTK.Mathematics.Half
      description: The X component of the vector.
    - id: y
      type: OpenTK.Mathematics.Half
      description: The Y component of the vector.
    content.vb: >-
      <Pure>

      Public Sub Deconstruct(x As Half, y As Half)
  overload: OpenTK.Mathematics.Vector2h.Deconstruct*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector2h.Deconstruct(Half, Half)
  fullName.vb: OpenTK.Mathematics.Vector2h.Deconstruct(OpenTK.Mathematics.Half, OpenTK.Mathematics.Half)
  name.vb: Deconstruct(Half, Half)
references:
- uid: OpenTK.Mathematics
  commentId: N:OpenTK.Mathematics
  href: OpenTK.html
  name: OpenTK.Mathematics
  nameWithType: OpenTK.Mathematics
  fullName: OpenTK.Mathematics
  spec.csharp:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Mathematics
    name: Mathematics
    href: OpenTK.Mathematics.html
  spec.vb:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Mathematics
    name: Mathematics
    href: OpenTK.Mathematics.html
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.iserializable
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.IEquatable{OpenTK.Mathematics.Vector2h}
  commentId: T:System.IEquatable{OpenTK.Mathematics.Vector2h}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Vector2h>
  nameWithType: IEquatable<Vector2h>
  fullName: System.IEquatable<OpenTK.Mathematics.Vector2h>
  nameWithType.vb: IEquatable(Of Vector2h)
  fullName.vb: System.IEquatable(Of OpenTK.Mathematics.Vector2h)
  name.vb: IEquatable(Of Vector2h)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: OpenTK.Mathematics.Vector2h
    name: Vector2h
    href: OpenTK.Mathematics.Vector2h.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: OpenTK.Mathematics.Vector2h
    name: Vector2h
    href: OpenTK.Mathematics.Vector2h.html
  - name: )
- uid: System.IFormattable
  commentId: T:System.IFormattable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable
  name: IFormattable
  nameWithType: IFormattable
  fullName: System.IFormattable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Runtime
    name: Runtime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime
  - name: .
  - uid: System.Runtime.Serialization
    name: Serialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Runtime
    name: Runtime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime
  - name: .
  - uid: System.Runtime.Serialization
    name: Serialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: OpenTK.Mathematics.Half
  commentId: T:OpenTK.Mathematics.Half
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Half.html
  name: Half
  nameWithType: Half
  fullName: OpenTK.Mathematics.Half
- uid: OpenTK.Mathematics.Vector2h
  commentId: T:OpenTK.Mathematics.Vector2h
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector2h.html
  name: Vector2h
  nameWithType: Vector2h
  fullName: OpenTK.Mathematics.Vector2h
- uid: OpenTK.Mathematics.Vector2h.#ctor*
  commentId: Overload:OpenTK.Mathematics.Vector2h.#ctor
  href: OpenTK.Mathematics.Vector2h.html#OpenTK.Mathematics.Vector2h.#ctor(OpenTK.Mathematics.Half)
  name: Vector2h
  nameWithType: Vector2h.Vector2h
  fullName: OpenTK.Mathematics.Vector2h.Vector2h
  nameWithType.vb: Vector2h.New
  fullName.vb: OpenTK.Mathematics.Vector2h.New
  name.vb: New
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: OpenTK.Mathematics.Vector2
  commentId: T:OpenTK.Mathematics.Vector2
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector2.html
  name: Vector2
  nameWithType: Vector2
  fullName: OpenTK.Mathematics.Vector2
- uid: OpenTK.Mathematics.Vector2d
  commentId: T:OpenTK.Mathematics.Vector2d
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector2d.html
  name: Vector2d
  nameWithType: Vector2d
  fullName: OpenTK.Mathematics.Vector2d
- uid: OpenTK.Mathematics.Vector2h.Yx*
  commentId: Overload:OpenTK.Mathematics.Vector2h.Yx
  href: OpenTK.Mathematics.Vector2h.html#OpenTK.Mathematics.Vector2h.Yx
  name: Yx
  nameWithType: Vector2h.Yx
  fullName: OpenTK.Mathematics.Vector2h.Yx
- uid: OpenTK.Mathematics.Vector2h.ToVector2*
  commentId: Overload:OpenTK.Mathematics.Vector2h.ToVector2
  href: OpenTK.Mathematics.Vector2h.html#OpenTK.Mathematics.Vector2h.ToVector2
  name: ToVector2
  nameWithType: Vector2h.ToVector2
  fullName: OpenTK.Mathematics.Vector2h.ToVector2
- uid: OpenTK.Mathematics.Vector2h.ToVector2d*
  commentId: Overload:OpenTK.Mathematics.Vector2h.ToVector2d
  href: OpenTK.Mathematics.Vector2h.html#OpenTK.Mathematics.Vector2h.ToVector2d
  name: ToVector2d
  nameWithType: Vector2h.ToVector2d
  fullName: OpenTK.Mathematics.Vector2h.ToVector2d
- uid: OpenTK.Mathematics.Vector2h.op_Implicit*
  commentId: Overload:OpenTK.Mathematics.Vector2h.op_Implicit
  name: implicit operator
  nameWithType: Vector2h.implicit operator
  fullName: OpenTK.Mathematics.Vector2h.implicit operator
  nameWithType.vb: Vector2h.CType
  fullName.vb: OpenTK.Mathematics.Vector2h.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: OpenTK.Mathematics.Vector2h.op_Explicit*
  commentId: Overload:OpenTK.Mathematics.Vector2h.op_Explicit
  name: explicit operator
  nameWithType: Vector2h.explicit operator
  fullName: OpenTK.Mathematics.Vector2h.explicit operator
  nameWithType.vb: Vector2h.CType
  fullName.vb: OpenTK.Mathematics.Vector2h.CType
  name.vb: CType
  spec.csharp:
  - name: explicit
  - name: " "
  - name: operator
- uid: OpenTK.Mathematics.Vector2i
  commentId: T:OpenTK.Mathematics.Vector2i
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector2i.html
  name: Vector2i
  nameWithType: Vector2i
  fullName: OpenTK.Mathematics.Vector2i
- uid: System.ValueTuple{OpenTK.Mathematics.Half,OpenTK.Mathematics.Half}
  commentId: T:System.ValueTuple{OpenTK.Mathematics.Half,OpenTK.Mathematics.Half}
  parent: System
  definition: System.ValueTuple`2
  href: OpenTK.Mathematics.Half.html
  name: (Half X, Half Y)
  nameWithType: (Half X, Half Y)
  fullName: (OpenTK.Mathematics.Half X, OpenTK.Mathematics.Half Y)
  nameWithType.vb: (X As Half, Y As Half)
  fullName.vb: (X As OpenTK.Mathematics.Half, Y As OpenTK.Mathematics.Half)
  name.vb: (X As Half, Y As Half)
  spec.csharp:
  - name: (
  - uid: OpenTK.Mathematics.Half
    name: Half
    href: OpenTK.Mathematics.Half.html
  - name: " "
  - uid: System.ValueTuple{OpenTK.Mathematics.Half,OpenTK.Mathematics.Half}.X
    name: X
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-opentk.mathematics.half,opentk.mathematics.half-.x
  - name: ','
  - name: " "
  - uid: OpenTK.Mathematics.Half
    name: Half
    href: OpenTK.Mathematics.Half.html
  - name: " "
  - uid: System.ValueTuple{OpenTK.Mathematics.Half,OpenTK.Mathematics.Half}.Y
    name: Y
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-opentk.mathematics.half,opentk.mathematics.half-.y
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{OpenTK.Mathematics.Half,OpenTK.Mathematics.Half}.X
    name: X
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-opentk.mathematics.half,opentk.mathematics.half-.x
  - name: " "
  - name: As
  - name: " "
  - uid: OpenTK.Mathematics.Half
    name: Half
    href: OpenTK.Mathematics.Half.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{OpenTK.Mathematics.Half,OpenTK.Mathematics.Half}.Y
    name: Y
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-opentk.mathematics.half,opentk.mathematics.half-.y
  - name: " "
  - name: As
  - name: " "
  - uid: OpenTK.Mathematics.Half
    name: Half
    href: OpenTK.Mathematics.Half.html
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: OpenTK.Mathematics.Vector2h.op_Equality*
  commentId: Overload:OpenTK.Mathematics.Vector2h.op_Equality
  href: OpenTK.Mathematics.Vector2h.html#OpenTK.Mathematics.Vector2h.op_Equality(OpenTK.Mathematics.Vector2h,OpenTK.Mathematics.Vector2h)
  name: operator ==
  nameWithType: Vector2h.operator ==
  fullName: OpenTK.Mathematics.Vector2h.operator ==
  nameWithType.vb: Vector2h.=
  fullName.vb: OpenTK.Mathematics.Vector2h.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector2h.op_Equality*
    name: ==
    href: OpenTK.Mathematics.Vector2h.html#OpenTK.Mathematics.Vector2h.op_Equality(OpenTK.Mathematics.Vector2h,OpenTK.Mathematics.Vector2h)
- uid: OpenTK.Mathematics.Vector2h.op_Inequality*
  commentId: Overload:OpenTK.Mathematics.Vector2h.op_Inequality
  href: OpenTK.Mathematics.Vector2h.html#OpenTK.Mathematics.Vector2h.op_Inequality(OpenTK.Mathematics.Vector2h,OpenTK.Mathematics.Vector2h)
  name: operator !=
  nameWithType: Vector2h.operator !=
  fullName: OpenTK.Mathematics.Vector2h.operator !=
  nameWithType.vb: Vector2h.<>
  fullName.vb: OpenTK.Mathematics.Vector2h.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector2h.op_Inequality*
    name: '!='
    href: OpenTK.Mathematics.Vector2h.html#OpenTK.Mathematics.Vector2h.op_Inequality(OpenTK.Mathematics.Vector2h,OpenTK.Mathematics.Vector2h)
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Runtime.Serialization.SerializationInfo
  commentId: T:System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.serializationinfo
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  commentId: T:System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.streamingcontext
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: OpenTK.Mathematics.Vector2h.GetObjectData*
  commentId: Overload:OpenTK.Mathematics.Vector2h.GetObjectData
  href: OpenTK.Mathematics.Vector2h.html#OpenTK.Mathematics.Vector2h.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: GetObjectData
  nameWithType: Vector2h.GetObjectData
  fullName: OpenTK.Mathematics.Vector2h.GetObjectData
- uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Serialization.ISerializable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.iserializable.getobjectdata
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.iserializable.getobjectdata
  - name: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.serializationinfo
  - name: ','
  - name: " "
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.streamingcontext
  - name: )
  spec.vb:
  - uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.iserializable.getobjectdata
  - name: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.serializationinfo
  - name: ','
  - name: " "
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.streamingcontext
  - name: )
- uid: OpenTK.Mathematics.Vector2h.FromBinaryStream*
  commentId: Overload:OpenTK.Mathematics.Vector2h.FromBinaryStream
  href: OpenTK.Mathematics.Vector2h.html#OpenTK.Mathematics.Vector2h.FromBinaryStream(System.IO.BinaryReader)
  name: FromBinaryStream
  nameWithType: Vector2h.FromBinaryStream
  fullName: OpenTK.Mathematics.Vector2h.FromBinaryStream
- uid: System.IO.BinaryReader
  commentId: T:System.IO.BinaryReader
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binaryreader
  name: BinaryReader
  nameWithType: BinaryReader
  fullName: System.IO.BinaryReader
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: OpenTK.Mathematics.Vector2h.ToBinaryStream*
  commentId: Overload:OpenTK.Mathematics.Vector2h.ToBinaryStream
  href: OpenTK.Mathematics.Vector2h.html#OpenTK.Mathematics.Vector2h.ToBinaryStream(System.IO.BinaryWriter)
  name: ToBinaryStream
  nameWithType: Vector2h.ToBinaryStream
  fullName: OpenTK.Mathematics.Vector2h.ToBinaryStream
- uid: System.IO.BinaryWriter
  commentId: T:System.IO.BinaryWriter
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter
  name: BinaryWriter
  nameWithType: BinaryWriter
  fullName: System.IO.BinaryWriter
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: OpenTK.Mathematics.Vector2h.ToString*
  commentId: Overload:OpenTK.Mathematics.Vector2h.ToString
  href: OpenTK.Mathematics.Vector2h.html#OpenTK.Mathematics.Vector2h.ToString
  name: ToString
  nameWithType: Vector2h.ToString
  fullName: OpenTK.Mathematics.Vector2h.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  name: ToString(string, IFormatProvider)
  nameWithType: IFormattable.ToString(string, IFormatProvider)
  fullName: System.IFormattable.ToString(string, System.IFormatProvider)
  nameWithType.vb: IFormattable.ToString(String, IFormatProvider)
  fullName.vb: System.IFormattable.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: OpenTK.Mathematics.Vector2h.Equals*
  commentId: Overload:OpenTK.Mathematics.Vector2h.Equals
  href: OpenTK.Mathematics.Vector2h.html#OpenTK.Mathematics.Vector2h.Equals(System.Object)
  name: Equals
  nameWithType: Vector2h.Equals
  fullName: OpenTK.Mathematics.Vector2h.Equals
- uid: System.IEquatable{OpenTK.Mathematics.Vector2h}.Equals(OpenTK.Mathematics.Vector2h)
  commentId: M:System.IEquatable{OpenTK.Mathematics.Vector2h}.Equals(OpenTK.Mathematics.Vector2h)
  parent: System.IEquatable{OpenTK.Mathematics.Vector2h}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-opentk.mathematics.vector2h-.equals#system-iequatable((opentk-mathematics-vector2h))-equals(opentk-mathematics-vector2h)
  name: Equals(Vector2h)
  nameWithType: IEquatable<Vector2h>.Equals(Vector2h)
  fullName: System.IEquatable<OpenTK.Mathematics.Vector2h>.Equals(OpenTK.Mathematics.Vector2h)
  nameWithType.vb: IEquatable(Of Vector2h).Equals(Vector2h)
  fullName.vb: System.IEquatable(Of OpenTK.Mathematics.Vector2h).Equals(OpenTK.Mathematics.Vector2h)
  spec.csharp:
  - uid: System.IEquatable{OpenTK.Mathematics.Vector2h}.Equals(OpenTK.Mathematics.Vector2h)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-opentk.mathematics.vector2h-.equals#system-iequatable((opentk-mathematics-vector2h))-equals(opentk-mathematics-vector2h)
  - name: (
  - uid: OpenTK.Mathematics.Vector2h
    name: Vector2h
    href: OpenTK.Mathematics.Vector2h.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{OpenTK.Mathematics.Vector2h}.Equals(OpenTK.Mathematics.Vector2h)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-opentk.mathematics.vector2h-.equals#system-iequatable((opentk-mathematics-vector2h))-equals(opentk-mathematics-vector2h)
  - name: (
  - uid: OpenTK.Mathematics.Vector2h
    name: Vector2h
    href: OpenTK.Mathematics.Vector2h.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: OpenTK.Mathematics.Vector2h.GetHashCode*
  commentId: Overload:OpenTK.Mathematics.Vector2h.GetHashCode
  href: OpenTK.Mathematics.Vector2h.html#OpenTK.Mathematics.Vector2h.GetHashCode
  name: GetHashCode
  nameWithType: Vector2h.GetHashCode
  fullName: OpenTK.Mathematics.Vector2h.GetHashCode
- uid: OpenTK.Mathematics.Vector2h.GetBytes*
  commentId: Overload:OpenTK.Mathematics.Vector2h.GetBytes
  href: OpenTK.Mathematics.Vector2h.html#OpenTK.Mathematics.Vector2h.GetBytes(OpenTK.Mathematics.Vector2h)
  name: GetBytes
  nameWithType: Vector2h.GetBytes
  fullName: OpenTK.Mathematics.Vector2h.GetBytes
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: OpenTK.Mathematics.Vector2h.FromBytes*
  commentId: Overload:OpenTK.Mathematics.Vector2h.FromBytes
  href: OpenTK.Mathematics.Vector2h.html#OpenTK.Mathematics.Vector2h.FromBytes(System.Byte[],System.Int32)
  name: FromBytes
  nameWithType: Vector2h.FromBytes
  fullName: OpenTK.Mathematics.Vector2h.FromBytes
- uid: OpenTK.Mathematics.Vector2h.Deconstruct*
  commentId: Overload:OpenTK.Mathematics.Vector2h.Deconstruct
  href: OpenTK.Mathematics.Vector2h.html#OpenTK.Mathematics.Vector2h.Deconstruct(OpenTK.Mathematics.Half@,OpenTK.Mathematics.Half@)
  name: Deconstruct
  nameWithType: Vector2h.Deconstruct
  fullName: OpenTK.Mathematics.Vector2h.Deconstruct
