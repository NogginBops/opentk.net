### YamlMime:ManagedReference
items:
- uid: OpenTK.Mathematics.Box2i
  commentId: T:OpenTK.Mathematics.Box2i
  id: Box2i
  parent: OpenTK.Mathematics
  children:
  - OpenTK.Mathematics.Box2i.#ctor(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  - OpenTK.Mathematics.Box2i.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  - OpenTK.Mathematics.Box2i.Center
  - OpenTK.Mathematics.Box2i.Contains(OpenTK.Mathematics.Box2i)
  - OpenTK.Mathematics.Box2i.Contains(OpenTK.Mathematics.Vector2i,System.Boolean)
  - OpenTK.Mathematics.Box2i.Contains(OpenTK.Mathematics.Vector2i)
  - OpenTK.Mathematics.Box2i.ContainsExclusive(OpenTK.Mathematics.Vector2i)
  - OpenTK.Mathematics.Box2i.ContainsInclusive(OpenTK.Mathematics.Vector2i)
  - OpenTK.Mathematics.Box2i.DistanceToNearestEdge(OpenTK.Mathematics.Vector2i)
  - OpenTK.Mathematics.Box2i.Empty
  - OpenTK.Mathematics.Box2i.Equals(OpenTK.Mathematics.Box2i)
  - OpenTK.Mathematics.Box2i.Equals(System.Object)
  - OpenTK.Mathematics.Box2i.Extend(OpenTK.Mathematics.Vector2i)
  - OpenTK.Mathematics.Box2i.Extended(OpenTK.Mathematics.Vector2i)
  - OpenTK.Mathematics.Box2i.GetHashCode
  - OpenTK.Mathematics.Box2i.HalfSize
  - OpenTK.Mathematics.Box2i.Inflate(OpenTK.Mathematics.Vector2i)
  - OpenTK.Mathematics.Box2i.Inflated(OpenTK.Mathematics.Vector2i)
  - OpenTK.Mathematics.Box2i.Intersect(OpenTK.Mathematics.Box2i,OpenTK.Mathematics.Box2i)
  - OpenTK.Mathematics.Box2i.Max
  - OpenTK.Mathematics.Box2i.Min
  - OpenTK.Mathematics.Box2i.op_Equality(OpenTK.Mathematics.Box2i,OpenTK.Mathematics.Box2i)
  - OpenTK.Mathematics.Box2i.op_Explicit(OpenTK.Mathematics.Box2i)~System.Drawing.Rectangle
  - OpenTK.Mathematics.Box2i.op_Inequality(OpenTK.Mathematics.Box2i,OpenTK.Mathematics.Box2i)
  - OpenTK.Mathematics.Box2i.Scale(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  - OpenTK.Mathematics.Box2i.Scaled(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  - OpenTK.Mathematics.Box2i.Size
  - OpenTK.Mathematics.Box2i.ToString
  - OpenTK.Mathematics.Box2i.ToString(System.IFormatProvider)
  - OpenTK.Mathematics.Box2i.ToString(System.String,System.IFormatProvider)
  - OpenTK.Mathematics.Box2i.ToString(System.String)
  - OpenTK.Mathematics.Box2i.Translate(OpenTK.Mathematics.Vector2i)
  - OpenTK.Mathematics.Box2i.Translated(OpenTK.Mathematics.Vector2i)
  langs:
  - csharp
  - vb
  name: Box2i
  nameWithType: Box2i
  fullName: OpenTK.Mathematics.Box2i
  type: Struct
  source:
    remote:
      path: src/OpenTK.Mathematics/Geometry/Box2i.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Box2i
    path: opentk/src/OpenTK.Mathematics/Geometry/Box2i.cs
    startLine: 20
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines an axis-aligned 2d box (rectangle).
  example: []
  syntax:
    content: >-
      [Serializable]

      public struct Box2i : IEquatable<Box2i>, IFormattable
    content.vb: >-
      <Serializable>

      Public Structure Box2i Implements IEquatable(Of Box2i), IFormattable
  implements:
  - System.IEquatable{OpenTK.Mathematics.Box2i}
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Box2i.Empty
  commentId: F:OpenTK.Mathematics.Box2i.Empty
  id: Empty
  parent: OpenTK.Mathematics.Box2i
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: Box2i.Empty
  fullName: OpenTK.Mathematics.Box2i.Empty
  type: Field
  source:
    remote:
      path: src/OpenTK.Mathematics/Geometry/Box2i.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Empty
    path: opentk/src/OpenTK.Mathematics/Geometry/Box2i.cs
    startLine: 27
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: An empty box with Min (0, 0) and Max (0, 0).
  example: []
  syntax:
    content: public static readonly Box2i Empty
    return:
      type: OpenTK.Mathematics.Box2i
    content.vb: Public Shared ReadOnly Empty As Box2i
- uid: OpenTK.Mathematics.Box2i.Min
  commentId: P:OpenTK.Mathematics.Box2i.Min
  id: Min
  parent: OpenTK.Mathematics.Box2i
  langs:
  - csharp
  - vb
  name: Min
  nameWithType: Box2i.Min
  fullName: OpenTK.Mathematics.Box2i.Min
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Geometry/Box2i.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Min
    path: opentk/src/OpenTK.Mathematics/Geometry/Box2i.cs
    startLine: 34
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets the minimum boundary of the structure.
  example: []
  syntax:
    content: public Vector2i Min { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2i
    content.vb: Public Property Min As Vector2i
  overload: OpenTK.Mathematics.Box2i.Min*
- uid: OpenTK.Mathematics.Box2i.Max
  commentId: P:OpenTK.Mathematics.Box2i.Max
  id: Max
  parent: OpenTK.Mathematics.Box2i
  langs:
  - csharp
  - vb
  name: Max
  nameWithType: Box2i.Max
  fullName: OpenTK.Mathematics.Box2i.Max
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Geometry/Box2i.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Max
    path: opentk/src/OpenTK.Mathematics/Geometry/Box2i.cs
    startLine: 49
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets the maximum boundary of the structure.
  example: []
  syntax:
    content: public Vector2i Max { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2i
    content.vb: Public Property Max As Vector2i
  overload: OpenTK.Mathematics.Box2i.Max*
- uid: OpenTK.Mathematics.Box2i.#ctor(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  commentId: M:OpenTK.Mathematics.Box2i.#ctor(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  id: '#ctor(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)'
  parent: OpenTK.Mathematics.Box2i
  langs:
  - csharp
  - vb
  name: Box2i(Vector2i, Vector2i)
  nameWithType: Box2i.Box2i(Vector2i, Vector2i)
  fullName: OpenTK.Mathematics.Box2i.Box2i(OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i)
  type: Constructor
  source:
    remote:
      path: src/OpenTK.Mathematics/Geometry/Box2i.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: .ctor
    path: opentk/src/OpenTK.Mathematics/Geometry/Box2i.cs
    startLine: 64
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Box2i" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Box2i(Vector2i min, Vector2i max)
    parameters:
    - id: min
      type: OpenTK.Mathematics.Vector2i
      description: The minimum point on the XY plane this box encloses.
    - id: max
      type: OpenTK.Mathematics.Vector2i
      description: The maximum point on the XY plane this box encloses.
    content.vb: Public Sub New(min As Vector2i, max As Vector2i)
  overload: OpenTK.Mathematics.Box2i.#ctor*
  nameWithType.vb: Box2i.New(Vector2i, Vector2i)
  fullName.vb: OpenTK.Mathematics.Box2i.New(OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i)
  name.vb: New(Vector2i, Vector2i)
- uid: OpenTK.Mathematics.Box2i.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:OpenTK.Mathematics.Box2i.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: OpenTK.Mathematics.Box2i
  langs:
  - csharp
  - vb
  name: Box2i(int, int, int, int)
  nameWithType: Box2i.Box2i(int, int, int, int)
  fullName: OpenTK.Mathematics.Box2i.Box2i(int, int, int, int)
  type: Constructor
  source:
    remote:
      path: src/OpenTK.Mathematics/Geometry/Box2i.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: .ctor
    path: opentk/src/OpenTK.Mathematics/Geometry/Box2i.cs
    startLine: 77
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Box2i" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Box2i(int minX, int minY, int maxX, int maxY)
    parameters:
    - id: minX
      type: System.Int32
      description: The minimum X value to be enclosed.
    - id: minY
      type: System.Int32
      description: The minimum Y value to be enclosed.
    - id: maxX
      type: System.Int32
      description: The maximum X value to be enclosed.
    - id: maxY
      type: System.Int32
      description: The maximum Y value to be enclosed.
    content.vb: Public Sub New(minX As Integer, minY As Integer, maxX As Integer, maxY As Integer)
  overload: OpenTK.Mathematics.Box2i.#ctor*
  nameWithType.vb: Box2i.New(Integer, Integer, Integer, Integer)
  fullName.vb: OpenTK.Mathematics.Box2i.New(Integer, Integer, Integer, Integer)
  name.vb: New(Integer, Integer, Integer, Integer)
- uid: OpenTK.Mathematics.Box2i.Size
  commentId: P:OpenTK.Mathematics.Box2i.Size
  id: Size
  parent: OpenTK.Mathematics.Box2i
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: Box2i.Size
  fullName: OpenTK.Mathematics.Box2i.Size
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Geometry/Box2i.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Size
    path: opentk/src/OpenTK.Mathematics/Geometry/Box2i.cs
    startLine: 85
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets a vector describing the size of the Box2i structure.
  example: []
  syntax:
    content: public Vector2i Size { get; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2i
    content.vb: Public ReadOnly Property Size As Vector2i
  overload: OpenTK.Mathematics.Box2i.Size*
- uid: OpenTK.Mathematics.Box2i.HalfSize
  commentId: P:OpenTK.Mathematics.Box2i.HalfSize
  id: HalfSize
  parent: OpenTK.Mathematics.Box2i
  langs:
  - csharp
  - vb
  name: HalfSize
  nameWithType: Box2i.HalfSize
  fullName: OpenTK.Mathematics.Box2i.HalfSize
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Geometry/Box2i.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: HalfSize
    path: opentk/src/OpenTK.Mathematics/Geometry/Box2i.cs
    startLine: 94
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a vector describing half the size of the box.
  example: []
  syntax:
    content: public Vector2i HalfSize { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2i
    content.vb: Public Property HalfSize As Vector2i
  overload: OpenTK.Mathematics.Box2i.HalfSize*
- uid: OpenTK.Mathematics.Box2i.Center
  commentId: P:OpenTK.Mathematics.Box2i.Center
  id: Center
  parent: OpenTK.Mathematics.Box2i
  langs:
  - csharp
  - vb
  name: Center
  nameWithType: Box2i.Center
  fullName: OpenTK.Mathematics.Box2i.Center
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Geometry/Box2i.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Center
    path: opentk/src/OpenTK.Mathematics/Geometry/Box2i.cs
    startLine: 110
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets a vector describing the center of the box.
  example: []
  syntax:
    content: public Vector2 Center { get; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2
    content.vb: Public ReadOnly Property Center As Vector2
  overload: OpenTK.Mathematics.Box2i.Center*
- uid: OpenTK.Mathematics.Box2i.Contains(OpenTK.Mathematics.Vector2i)
  commentId: M:OpenTK.Mathematics.Box2i.Contains(OpenTK.Mathematics.Vector2i)
  id: Contains(OpenTK.Mathematics.Vector2i)
  parent: OpenTK.Mathematics.Box2i
  langs:
  - csharp
  - vb
  name: Contains(Vector2i)
  nameWithType: Box2i.Contains(Vector2i)
  fullName: OpenTK.Mathematics.Box2i.Contains(OpenTK.Mathematics.Vector2i)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Geometry/Box2i.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Contains
    path: opentk/src/OpenTK.Mathematics/Geometry/Box2i.cs
    startLine: 121
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns whether the box contains the specified point (borders inclusive).
  example: []
  syntax:
    content: >-
      [Pure]

      [Obsolete("This function excludes borders even though it's documentation says otherwise. Use ContainsInclusive and ContainsExclusive for the desired behaviour.")]

      public bool Contains(Vector2i point)
    parameters:
    - id: point
      type: OpenTK.Mathematics.Vector2i
      description: The point to query.
    return:
      type: System.Boolean
      description: Whether this box contains the point.
    content.vb: >-
      <Pure>

      <Obsolete("This function excludes borders even though it's documentation says otherwise. Use ContainsInclusive and ContainsExclusive for the desired behaviour.")>

      Public Function Contains(point As Vector2i) As Boolean
  overload: OpenTK.Mathematics.Box2i.Contains*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function excludes borders even though it's documentation says otherwise. Use ContainsInclusive and ContainsExclusive for the desired behaviour.
- uid: OpenTK.Mathematics.Box2i.ContainsInclusive(OpenTK.Mathematics.Vector2i)
  commentId: M:OpenTK.Mathematics.Box2i.ContainsInclusive(OpenTK.Mathematics.Vector2i)
  id: ContainsInclusive(OpenTK.Mathematics.Vector2i)
  parent: OpenTK.Mathematics.Box2i
  langs:
  - csharp
  - vb
  name: ContainsInclusive(Vector2i)
  nameWithType: Box2i.ContainsInclusive(Vector2i)
  fullName: OpenTK.Mathematics.Box2i.ContainsInclusive(OpenTK.Mathematics.Vector2i)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Geometry/Box2i.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: ContainsInclusive
    path: opentk/src/OpenTK.Mathematics/Geometry/Box2i.cs
    startLine: 134
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns whether the box contains the specified point (borders inclusive).
  example: []
  syntax:
    content: >-
      [Pure]

      public bool ContainsInclusive(Vector2i point)
    parameters:
    - id: point
      type: OpenTK.Mathematics.Vector2i
      description: The point to query.
    return:
      type: System.Boolean
      description: Whether this box contains the point.
    content.vb: >-
      <Pure>

      Public Function ContainsInclusive(point As Vector2i) As Boolean
  overload: OpenTK.Mathematics.Box2i.ContainsInclusive*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Box2i.ContainsExclusive(OpenTK.Mathematics.Vector2i)
  commentId: M:OpenTK.Mathematics.Box2i.ContainsExclusive(OpenTK.Mathematics.Vector2i)
  id: ContainsExclusive(OpenTK.Mathematics.Vector2i)
  parent: OpenTK.Mathematics.Box2i
  langs:
  - csharp
  - vb
  name: ContainsExclusive(Vector2i)
  nameWithType: Box2i.ContainsExclusive(Vector2i)
  fullName: OpenTK.Mathematics.Box2i.ContainsExclusive(OpenTK.Mathematics.Vector2i)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Geometry/Box2i.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: ContainsExclusive
    path: opentk/src/OpenTK.Mathematics/Geometry/Box2i.cs
    startLine: 146
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns whether the box contains the specified point (borders exclusive).
  example: []
  syntax:
    content: >-
      [Pure]

      public bool ContainsExclusive(Vector2i point)
    parameters:
    - id: point
      type: OpenTK.Mathematics.Vector2i
      description: The point to query.
    return:
      type: System.Boolean
      description: Whether this box contains the point.
    content.vb: >-
      <Pure>

      Public Function ContainsExclusive(point As Vector2i) As Boolean
  overload: OpenTK.Mathematics.Box2i.ContainsExclusive*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Box2i.Contains(OpenTK.Mathematics.Vector2i,System.Boolean)
  commentId: M:OpenTK.Mathematics.Box2i.Contains(OpenTK.Mathematics.Vector2i,System.Boolean)
  id: Contains(OpenTK.Mathematics.Vector2i,System.Boolean)
  parent: OpenTK.Mathematics.Box2i
  langs:
  - csharp
  - vb
  name: Contains(Vector2i, bool)
  nameWithType: Box2i.Contains(Vector2i, bool)
  fullName: OpenTK.Mathematics.Box2i.Contains(OpenTK.Mathematics.Vector2i, bool)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Geometry/Box2i.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Contains
    path: opentk/src/OpenTK.Mathematics/Geometry/Box2i.cs
    startLine: 161
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns whether the box contains the specified point.
  example: []
  syntax:
    content: >-
      [Pure]

      public bool Contains(Vector2i point, bool boundaryInclusive)
    parameters:
    - id: point
      type: OpenTK.Mathematics.Vector2i
      description: The point to query.
    - id: boundaryInclusive
      type: System.Boolean
      description: Whether points on the box boundary should be recognised as contained as well.
    return:
      type: System.Boolean
      description: Whether this box contains the point.
    content.vb: >-
      <Pure>

      Public Function Contains(point As Vector2i, boundaryInclusive As Boolean) As Boolean
  overload: OpenTK.Mathematics.Box2i.Contains*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Box2i.Contains(Vector2i, Boolean)
  fullName.vb: OpenTK.Mathematics.Box2i.Contains(OpenTK.Mathematics.Vector2i, Boolean)
  name.vb: Contains(Vector2i, Boolean)
- uid: OpenTK.Mathematics.Box2i.Contains(OpenTK.Mathematics.Box2i)
  commentId: M:OpenTK.Mathematics.Box2i.Contains(OpenTK.Mathematics.Box2i)
  id: Contains(OpenTK.Mathematics.Box2i)
  parent: OpenTK.Mathematics.Box2i
  langs:
  - csharp
  - vb
  name: Contains(Box2i)
  nameWithType: Box2i.Contains(Box2i)
  fullName: OpenTK.Mathematics.Box2i.Contains(OpenTK.Mathematics.Box2i)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Geometry/Box2i.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Contains
    path: opentk/src/OpenTK.Mathematics/Geometry/Box2i.cs
    startLine: 179
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns whether the box contains the specified box (borders inclusive).
  example: []
  syntax:
    content: >-
      [Pure]

      public bool Contains(Box2i other)
    parameters:
    - id: other
      type: OpenTK.Mathematics.Box2i
      description: The box to query.
    return:
      type: System.Boolean
      description: Whether this box contains the other box.
    content.vb: >-
      <Pure>

      Public Function Contains(other As Box2i) As Boolean
  overload: OpenTK.Mathematics.Box2i.Contains*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Box2i.Intersect(OpenTK.Mathematics.Box2i,OpenTK.Mathematics.Box2i)
  commentId: M:OpenTK.Mathematics.Box2i.Intersect(OpenTK.Mathematics.Box2i,OpenTK.Mathematics.Box2i)
  id: Intersect(OpenTK.Mathematics.Box2i,OpenTK.Mathematics.Box2i)
  parent: OpenTK.Mathematics.Box2i
  langs:
  - csharp
  - vb
  name: Intersect(Box2i, Box2i)
  nameWithType: Box2i.Intersect(Box2i, Box2i)
  fullName: OpenTK.Mathematics.Box2i.Intersect(OpenTK.Mathematics.Box2i, OpenTK.Mathematics.Box2i)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Geometry/Box2i.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Intersect
    path: opentk/src/OpenTK.Mathematics/Geometry/Box2i.cs
    startLine: 193
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Creates a rectangle that represents the intersection between a and

    b. If there is no intersection, a empty <xref href="OpenTK.Mathematics.Box2i" data-throw-if-not-resolved="false"></xref> is returned.
  example: []
  syntax:
    content: public static Box2i Intersect(Box2i a, Box2i b)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Box2i
      description: First rectangle to intersect.
    - id: b
      type: OpenTK.Mathematics.Box2i
      description: Second rectangle to intersect.
    return:
      type: OpenTK.Mathematics.Box2i
      description: The <xref href="OpenTK.Mathematics.Box2i" data-throw-if-not-resolved="false"></xref> that represents the intersection of both Box2i.
    content.vb: Public Shared Function Intersect(a As Box2i, b As Box2i) As Box2i
  overload: OpenTK.Mathematics.Box2i.Intersect*
- uid: OpenTK.Mathematics.Box2i.DistanceToNearestEdge(OpenTK.Mathematics.Vector2i)
  commentId: M:OpenTK.Mathematics.Box2i.DistanceToNearestEdge(OpenTK.Mathematics.Vector2i)
  id: DistanceToNearestEdge(OpenTK.Mathematics.Vector2i)
  parent: OpenTK.Mathematics.Box2i
  langs:
  - csharp
  - vb
  name: DistanceToNearestEdge(Vector2i)
  nameWithType: Box2i.DistanceToNearestEdge(Vector2i)
  fullName: OpenTK.Mathematics.Box2i.DistanceToNearestEdge(OpenTK.Mathematics.Vector2i)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Geometry/Box2i.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: DistanceToNearestEdge
    path: opentk/src/OpenTK.Mathematics/Geometry/Box2i.cs
    startLine: 213
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns the distance between the nearest edge and the specified point.
  example: []
  syntax:
    content: >-
      [Pure]

      public float DistanceToNearestEdge(Vector2i point)
    parameters:
    - id: point
      type: OpenTK.Mathematics.Vector2i
      description: The point to find distance for.
    return:
      type: System.Single
      description: The distance between the specified point and the nearest edge.
    content.vb: >-
      <Pure>

      Public Function DistanceToNearestEdge(point As Vector2i) As Single
  overload: OpenTK.Mathematics.Box2i.DistanceToNearestEdge*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Box2i.Translate(OpenTK.Mathematics.Vector2i)
  commentId: M:OpenTK.Mathematics.Box2i.Translate(OpenTK.Mathematics.Vector2i)
  id: Translate(OpenTK.Mathematics.Vector2i)
  parent: OpenTK.Mathematics.Box2i
  langs:
  - csharp
  - vb
  name: Translate(Vector2i)
  nameWithType: Box2i.Translate(Vector2i)
  fullName: OpenTK.Mathematics.Box2i.Translate(OpenTK.Mathematics.Vector2i)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Geometry/Box2i.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Translate
    path: opentk/src/OpenTK.Mathematics/Geometry/Box2i.cs
    startLine: 226
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Translates this Box2i by the given amount.
  example: []
  syntax:
    content: public void Translate(Vector2i distance)
    parameters:
    - id: distance
      type: OpenTK.Mathematics.Vector2i
      description: The distance to translate the box.
    content.vb: Public Sub Translate(distance As Vector2i)
  overload: OpenTK.Mathematics.Box2i.Translate*
- uid: OpenTK.Mathematics.Box2i.Translated(OpenTK.Mathematics.Vector2i)
  commentId: M:OpenTK.Mathematics.Box2i.Translated(OpenTK.Mathematics.Vector2i)
  id: Translated(OpenTK.Mathematics.Vector2i)
  parent: OpenTK.Mathematics.Box2i
  langs:
  - csharp
  - vb
  name: Translated(Vector2i)
  nameWithType: Box2i.Translated(Vector2i)
  fullName: OpenTK.Mathematics.Box2i.Translated(OpenTK.Mathematics.Vector2i)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Geometry/Box2i.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Translated
    path: opentk/src/OpenTK.Mathematics/Geometry/Box2i.cs
    startLine: 237
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a Box2i translated by the given amount.
  example: []
  syntax:
    content: >-
      [Pure]

      public Box2i Translated(Vector2i distance)
    parameters:
    - id: distance
      type: OpenTK.Mathematics.Vector2i
      description: The distance to translate the box.
    return:
      type: OpenTK.Mathematics.Box2i
      description: The translated box.
    content.vb: >-
      <Pure>

      Public Function Translated(distance As Vector2i) As Box2i
  overload: OpenTK.Mathematics.Box2i.Translated*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Box2i.Scale(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  commentId: M:OpenTK.Mathematics.Box2i.Scale(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  id: Scale(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  parent: OpenTK.Mathematics.Box2i
  langs:
  - csharp
  - vb
  name: Scale(Vector2i, Vector2i)
  nameWithType: Box2i.Scale(Vector2i, Vector2i)
  fullName: OpenTK.Mathematics.Box2i.Scale(OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Geometry/Box2i.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Scale
    path: opentk/src/OpenTK.Mathematics/Geometry/Box2i.cs
    startLine: 251
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Scales this Box2i by the given amount.
  example: []
  syntax:
    content: public void Scale(Vector2i scale, Vector2i anchor)
    parameters:
    - id: scale
      type: OpenTK.Mathematics.Vector2i
      description: The scale to scale the box.
    - id: anchor
      type: OpenTK.Mathematics.Vector2i
      description: The anchor to scale the box from.
    content.vb: Public Sub Scale(scale As Vector2i, anchor As Vector2i)
  overload: OpenTK.Mathematics.Box2i.Scale*
- uid: OpenTK.Mathematics.Box2i.Scaled(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  commentId: M:OpenTK.Mathematics.Box2i.Scaled(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  id: Scaled(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  parent: OpenTK.Mathematics.Box2i
  langs:
  - csharp
  - vb
  name: Scaled(Vector2i, Vector2i)
  nameWithType: Box2i.Scaled(Vector2i, Vector2i)
  fullName: OpenTK.Mathematics.Box2i.Scaled(OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Geometry/Box2i.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Scaled
    path: opentk/src/OpenTK.Mathematics/Geometry/Box2i.cs
    startLine: 263
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a Box2i scaled by a given amount from an anchor point.
  example: []
  syntax:
    content: >-
      [Pure]

      public Box2i Scaled(Vector2i scale, Vector2i anchor)
    parameters:
    - id: scale
      type: OpenTK.Mathematics.Vector2i
      description: The scale to scale the box.
    - id: anchor
      type: OpenTK.Mathematics.Vector2i
      description: The anchor to scale the box from.
    return:
      type: OpenTK.Mathematics.Box2i
      description: The scaled box.
    content.vb: >-
      <Pure>

      Public Function Scaled(scale As Vector2i, anchor As Vector2i) As Box2i
  overload: OpenTK.Mathematics.Box2i.Scaled*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Box2i.Inflate(OpenTK.Mathematics.Vector2i)
  commentId: M:OpenTK.Mathematics.Box2i.Inflate(OpenTK.Mathematics.Vector2i)
  id: Inflate(OpenTK.Mathematics.Vector2i)
  parent: OpenTK.Mathematics.Box2i
  langs:
  - csharp
  - vb
  name: Inflate(Vector2i)
  nameWithType: Box2i.Inflate(Vector2i)
  fullName: OpenTK.Mathematics.Box2i.Inflate(OpenTK.Mathematics.Vector2i)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Geometry/Box2i.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Inflate
    path: opentk/src/OpenTK.Mathematics/Geometry/Box2i.cs
    startLine: 277
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Inflates this Box2i by the given size in all directions. A negative size will shrink the box to a maximum of -HalfSize.

    Use the <xref href="OpenTK.Mathematics.Box2i.Extend(OpenTK.Mathematics.Vector2i)" data-throw-if-not-resolved="false"></xref> method for the point-encapsulation functionality in OpenTK version 4.8.1 and earlier.
  example: []
  syntax:
    content: public void Inflate(Vector2i size)
    parameters:
    - id: size
      type: OpenTK.Mathematics.Vector2i
      description: The size to inflate by.
    content.vb: Public Sub Inflate(size As Vector2i)
  overload: OpenTK.Mathematics.Box2i.Inflate*
- uid: OpenTK.Mathematics.Box2i.Inflated(OpenTK.Mathematics.Vector2i)
  commentId: M:OpenTK.Mathematics.Box2i.Inflated(OpenTK.Mathematics.Vector2i)
  id: Inflated(OpenTK.Mathematics.Vector2i)
  parent: OpenTK.Mathematics.Box2i
  langs:
  - csharp
  - vb
  name: Inflated(Vector2i)
  nameWithType: Box2i.Inflated(Vector2i)
  fullName: OpenTK.Mathematics.Box2i.Inflated(OpenTK.Mathematics.Vector2i)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Geometry/Box2i.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Inflated
    path: opentk/src/OpenTK.Mathematics/Geometry/Box2i.cs
    startLine: 290
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Inflates this Box2i by the given size in all directions. A negative size will shrink the box to a maximum of -HalfSize.

    Use the <xref href="OpenTK.Mathematics.Box2i.Extended(OpenTK.Mathematics.Vector2i)" data-throw-if-not-resolved="false"></xref> method for the point-encapsulation functionality in OpenTK version 4.8.1 and earlier.
  example: []
  syntax:
    content: >-
      [Pure]

      public Box2i Inflated(Vector2i size)
    parameters:
    - id: size
      type: OpenTK.Mathematics.Vector2i
      description: The size to inflate by.
    return:
      type: OpenTK.Mathematics.Box2i
      description: The inflated box.
    content.vb: >-
      <Pure>

      Public Function Inflated(size As Vector2i) As Box2i
  overload: OpenTK.Mathematics.Box2i.Inflated*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Box2i.Extend(OpenTK.Mathematics.Vector2i)
  commentId: M:OpenTK.Mathematics.Box2i.Extend(OpenTK.Mathematics.Vector2i)
  id: Extend(OpenTK.Mathematics.Vector2i)
  parent: OpenTK.Mathematics.Box2i
  langs:
  - csharp
  - vb
  name: Extend(Vector2i)
  nameWithType: Box2i.Extend(Vector2i)
  fullName: OpenTK.Mathematics.Box2i.Extend(OpenTK.Mathematics.Vector2i)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Geometry/Box2i.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Extend
    path: opentk/src/OpenTK.Mathematics/Geometry/Box2i.cs
    startLine: 303
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Extend this Box2i to encapsulate a given point.
  example: []
  syntax:
    content: public void Extend(Vector2i point)
    parameters:
    - id: point
      type: OpenTK.Mathematics.Vector2i
      description: The point to contain.
    content.vb: Public Sub Extend(point As Vector2i)
  overload: OpenTK.Mathematics.Box2i.Extend*
- uid: OpenTK.Mathematics.Box2i.Extended(OpenTK.Mathematics.Vector2i)
  commentId: M:OpenTK.Mathematics.Box2i.Extended(OpenTK.Mathematics.Vector2i)
  id: Extended(OpenTK.Mathematics.Vector2i)
  parent: OpenTK.Mathematics.Box2i
  langs:
  - csharp
  - vb
  name: Extended(Vector2i)
  nameWithType: Box2i.Extended(Vector2i)
  fullName: OpenTK.Mathematics.Box2i.Extended(OpenTK.Mathematics.Vector2i)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Geometry/Box2i.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Extended
    path: opentk/src/OpenTK.Mathematics/Geometry/Box2i.cs
    startLine: 314
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Extend this Box2i to encapsulate a given point.
  example: []
  syntax:
    content: >-
      [Pure]

      public Box2i Extended(Vector2i point)
    parameters:
    - id: point
      type: OpenTK.Mathematics.Vector2i
      description: The point to contain.
    return:
      type: OpenTK.Mathematics.Box2i
      description: The inflated box.
    content.vb: >-
      <Pure>

      Public Function Extended(point As Vector2i) As Box2i
  overload: OpenTK.Mathematics.Box2i.Extended*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Box2i.op_Equality(OpenTK.Mathematics.Box2i,OpenTK.Mathematics.Box2i)
  commentId: M:OpenTK.Mathematics.Box2i.op_Equality(OpenTK.Mathematics.Box2i,OpenTK.Mathematics.Box2i)
  id: op_Equality(OpenTK.Mathematics.Box2i,OpenTK.Mathematics.Box2i)
  parent: OpenTK.Mathematics.Box2i
  langs:
  - csharp
  - vb
  name: operator ==(Box2i, Box2i)
  nameWithType: Box2i.operator ==(Box2i, Box2i)
  fullName: OpenTK.Mathematics.Box2i.operator ==(OpenTK.Mathematics.Box2i, OpenTK.Mathematics.Box2i)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Geometry/Box2i.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: op_Equality
    path: opentk/src/OpenTK.Mathematics/Geometry/Box2i.cs
    startLine: 328
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Equality comparator.
  example: []
  syntax:
    content: public static bool operator ==(Box2i left, Box2i right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Box2i
      description: The left operand.
    - id: right
      type: OpenTK.Mathematics.Box2i
      description: The right operand.
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As Box2i, right As Box2i) As Boolean
  overload: OpenTK.Mathematics.Box2i.op_Equality*
  nameWithType.vb: Box2i.=(Box2i, Box2i)
  fullName.vb: OpenTK.Mathematics.Box2i.=(OpenTK.Mathematics.Box2i, OpenTK.Mathematics.Box2i)
  name.vb: =(Box2i, Box2i)
- uid: OpenTK.Mathematics.Box2i.op_Inequality(OpenTK.Mathematics.Box2i,OpenTK.Mathematics.Box2i)
  commentId: M:OpenTK.Mathematics.Box2i.op_Inequality(OpenTK.Mathematics.Box2i,OpenTK.Mathematics.Box2i)
  id: op_Inequality(OpenTK.Mathematics.Box2i,OpenTK.Mathematics.Box2i)
  parent: OpenTK.Mathematics.Box2i
  langs:
  - csharp
  - vb
  name: operator !=(Box2i, Box2i)
  nameWithType: Box2i.operator !=(Box2i, Box2i)
  fullName: OpenTK.Mathematics.Box2i.operator !=(OpenTK.Mathematics.Box2i, OpenTK.Mathematics.Box2i)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Geometry/Box2i.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: op_Inequality
    path: opentk/src/OpenTK.Mathematics/Geometry/Box2i.cs
    startLine: 338
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Inequality comparator.
  example: []
  syntax:
    content: public static bool operator !=(Box2i left, Box2i right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Box2i
      description: The left operand.
    - id: right
      type: OpenTK.Mathematics.Box2i
      description: The right operand.
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As Box2i, right As Box2i) As Boolean
  overload: OpenTK.Mathematics.Box2i.op_Inequality*
  nameWithType.vb: Box2i.<>(Box2i, Box2i)
  fullName.vb: OpenTK.Mathematics.Box2i.<>(OpenTK.Mathematics.Box2i, OpenTK.Mathematics.Box2i)
  name.vb: <>(Box2i, Box2i)
- uid: OpenTK.Mathematics.Box2i.op_Explicit(OpenTK.Mathematics.Box2i)~System.Drawing.Rectangle
  commentId: M:OpenTK.Mathematics.Box2i.op_Explicit(OpenTK.Mathematics.Box2i)~System.Drawing.Rectangle
  id: op_Explicit(OpenTK.Mathematics.Box2i)~System.Drawing.Rectangle
  parent: OpenTK.Mathematics.Box2i
  langs:
  - csharp
  - vb
  name: explicit operator Rectangle(Box2i)
  nameWithType: Box2i.explicit operator Rectangle(Box2i)
  fullName: OpenTK.Mathematics.Box2i.explicit operator System.Drawing.Rectangle(OpenTK.Mathematics.Box2i)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Geometry/Box2i.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: op_Explicit
    path: opentk/src/OpenTK.Mathematics/Geometry/Box2i.cs
    startLine: 347
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts this <xref href="OpenTK.Mathematics.Box2i" data-throw-if-not-resolved="false"></xref> to a <xref href="System.Drawing.Rectangle" data-throw-if-not-resolved="false"></xref> using <xref href="OpenTK.Mathematics.Box2i.Min" data-throw-if-not-resolved="false"></xref> as the position and <xref href="OpenTK.Mathematics.Box2i.Size" data-throw-if-not-resolved="false"></xref> as the size.
  example: []
  syntax:
    content: >-
      [Pure]

      public static explicit operator Rectangle(Box2i box)
    parameters:
    - id: box
      type: OpenTK.Mathematics.Box2i
      description: The box to cast.
    return:
      type: System.Drawing.Rectangle
    content.vb: >-
      <Pure>

      Public Shared Narrowing Operator CType(box As Box2i) As Rectangle
  overload: OpenTK.Mathematics.Box2i.op_Explicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Box2i.CType(Box2i)
  fullName.vb: OpenTK.Mathematics.Box2i.CType(OpenTK.Mathematics.Box2i)
  name.vb: CType(Box2i)
- uid: OpenTK.Mathematics.Box2i.Equals(System.Object)
  commentId: M:OpenTK.Mathematics.Box2i.Equals(System.Object)
  id: Equals(System.Object)
  parent: OpenTK.Mathematics.Box2i
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: Box2i.Equals(object)
  fullName: OpenTK.Mathematics.Box2i.Equals(object)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Geometry/Box2i.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Equals
    path: opentk/src/OpenTK.Mathematics/Geometry/Box2i.cs
    startLine: 354
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: OpenTK.Mathematics.Box2i.Equals*
  nameWithType.vb: Box2i.Equals(Object)
  fullName.vb: OpenTK.Mathematics.Box2i.Equals(Object)
  name.vb: Equals(Object)
- uid: OpenTK.Mathematics.Box2i.Equals(OpenTK.Mathematics.Box2i)
  commentId: M:OpenTK.Mathematics.Box2i.Equals(OpenTK.Mathematics.Box2i)
  id: Equals(OpenTK.Mathematics.Box2i)
  parent: OpenTK.Mathematics.Box2i
  langs:
  - csharp
  - vb
  name: Equals(Box2i)
  nameWithType: Box2i.Equals(Box2i)
  fullName: OpenTK.Mathematics.Box2i.Equals(OpenTK.Mathematics.Box2i)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Geometry/Box2i.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Equals
    path: opentk/src/OpenTK.Mathematics/Geometry/Box2i.cs
    startLine: 360
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  example: []
  syntax:
    content: public bool Equals(Box2i other)
    parameters:
    - id: other
      type: OpenTK.Mathematics.Box2i
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As Box2i) As Boolean
  overload: OpenTK.Mathematics.Box2i.Equals*
  implements:
  - System.IEquatable{OpenTK.Mathematics.Box2i}.Equals(OpenTK.Mathematics.Box2i)
- uid: OpenTK.Mathematics.Box2i.GetHashCode
  commentId: M:OpenTK.Mathematics.Box2i.GetHashCode
  id: GetHashCode
  parent: OpenTK.Mathematics.Box2i
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Box2i.GetHashCode()
  fullName: OpenTK.Mathematics.Box2i.GetHashCode()
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Geometry/Box2i.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: GetHashCode
    path: opentk/src/OpenTK.Mathematics/Geometry/Box2i.cs
    startLine: 367
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: OpenTK.Mathematics.Box2i.GetHashCode*
- uid: OpenTK.Mathematics.Box2i.ToString
  commentId: M:OpenTK.Mathematics.Box2i.ToString
  id: ToString
  parent: OpenTK.Mathematics.Box2i
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Box2i.ToString()
  fullName: OpenTK.Mathematics.Box2i.ToString()
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Geometry/Box2i.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: ToString
    path: opentk/src/OpenTK.Mathematics/Geometry/Box2i.cs
    startLine: 373
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: OpenTK.Mathematics.Box2i.ToString*
- uid: OpenTK.Mathematics.Box2i.ToString(System.String)
  commentId: M:OpenTK.Mathematics.Box2i.ToString(System.String)
  id: ToString(System.String)
  parent: OpenTK.Mathematics.Box2i
  langs:
  - csharp
  - vb
  name: ToString(string)
  nameWithType: Box2i.ToString(string)
  fullName: OpenTK.Mathematics.Box2i.ToString(string)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Geometry/Box2i.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: ToString
    path: opentk/src/OpenTK.Mathematics/Geometry/Box2i.cs
    startLine: 379
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  example: []
  syntax:
    content: public string ToString(string format)
    parameters:
    - id: format
      type: System.String
    return:
      type: System.String
    content.vb: Public Function ToString(format As String) As String
  overload: OpenTK.Mathematics.Box2i.ToString*
  nameWithType.vb: Box2i.ToString(String)
  fullName.vb: OpenTK.Mathematics.Box2i.ToString(String)
  name.vb: ToString(String)
- uid: OpenTK.Mathematics.Box2i.ToString(System.IFormatProvider)
  commentId: M:OpenTK.Mathematics.Box2i.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: OpenTK.Mathematics.Box2i
  langs:
  - csharp
  - vb
  name: ToString(IFormatProvider)
  nameWithType: Box2i.ToString(IFormatProvider)
  fullName: OpenTK.Mathematics.Box2i.ToString(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Geometry/Box2i.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: ToString
    path: opentk/src/OpenTK.Mathematics/Geometry/Box2i.cs
    startLine: 385
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  example: []
  syntax:
    content: public string ToString(IFormatProvider formatProvider)
    parameters:
    - id: formatProvider
      type: System.IFormatProvider
    return:
      type: System.String
    content.vb: Public Function ToString(formatProvider As IFormatProvider) As String
  overload: OpenTK.Mathematics.Box2i.ToString*
- uid: OpenTK.Mathematics.Box2i.ToString(System.String,System.IFormatProvider)
  commentId: M:OpenTK.Mathematics.Box2i.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: OpenTK.Mathematics.Box2i
  langs:
  - csharp
  - vb
  name: ToString(string, IFormatProvider)
  nameWithType: Box2i.ToString(string, IFormatProvider)
  fullName: OpenTK.Mathematics.Box2i.ToString(string, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Geometry/Box2i.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: ToString
    path: opentk/src/OpenTK.Mathematics/Geometry/Box2i.cs
    startLine: 391
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  example: []
  syntax:
    content: public string ToString(string format, IFormatProvider formatProvider)
    parameters:
    - id: format
      type: System.String
    - id: formatProvider
      type: System.IFormatProvider
    return:
      type: System.String
    content.vb: Public Function ToString(format As String, formatProvider As IFormatProvider) As String
  overload: OpenTK.Mathematics.Box2i.ToString*
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  nameWithType.vb: Box2i.ToString(String, IFormatProvider)
  fullName.vb: OpenTK.Mathematics.Box2i.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
references:
- uid: OpenTK.Mathematics
  commentId: N:OpenTK.Mathematics
  href: OpenTK.html
  name: OpenTK.Mathematics
  nameWithType: OpenTK.Mathematics
  fullName: OpenTK.Mathematics
  spec.csharp:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Mathematics
    name: Mathematics
    href: OpenTK.Mathematics.html
  spec.vb:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Mathematics
    name: Mathematics
    href: OpenTK.Mathematics.html
- uid: System.IEquatable{OpenTK.Mathematics.Box2i}
  commentId: T:System.IEquatable{OpenTK.Mathematics.Box2i}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Box2i>
  nameWithType: IEquatable<Box2i>
  fullName: System.IEquatable<OpenTK.Mathematics.Box2i>
  nameWithType.vb: IEquatable(Of Box2i)
  fullName.vb: System.IEquatable(Of OpenTK.Mathematics.Box2i)
  name.vb: IEquatable(Of Box2i)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: OpenTK.Mathematics.Box2i
    name: Box2i
    href: OpenTK.Mathematics.Box2i.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: OpenTK.Mathematics.Box2i
    name: Box2i
    href: OpenTK.Mathematics.Box2i.html
  - name: )
- uid: System.IFormattable
  commentId: T:System.IFormattable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable
  name: IFormattable
  nameWithType: IFormattable
  fullName: System.IFormattable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: OpenTK.Mathematics.Box2i
  commentId: T:OpenTK.Mathematics.Box2i
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Box2i.html
  name: Box2i
  nameWithType: Box2i
  fullName: OpenTK.Mathematics.Box2i
- uid: OpenTK.Mathematics.Box2i.Min*
  commentId: Overload:OpenTK.Mathematics.Box2i.Min
  href: OpenTK.Mathematics.Box2i.html#OpenTK.Mathematics.Box2i.Min
  name: Min
  nameWithType: Box2i.Min
  fullName: OpenTK.Mathematics.Box2i.Min
- uid: OpenTK.Mathematics.Vector2i
  commentId: T:OpenTK.Mathematics.Vector2i
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector2i.html
  name: Vector2i
  nameWithType: Vector2i
  fullName: OpenTK.Mathematics.Vector2i
- uid: OpenTK.Mathematics.Box2i.Max*
  commentId: Overload:OpenTK.Mathematics.Box2i.Max
  href: OpenTK.Mathematics.Box2i.html#OpenTK.Mathematics.Box2i.Max
  name: Max
  nameWithType: Box2i.Max
  fullName: OpenTK.Mathematics.Box2i.Max
- uid: OpenTK.Mathematics.Box2i.#ctor*
  commentId: Overload:OpenTK.Mathematics.Box2i.#ctor
  href: OpenTK.Mathematics.Box2i.html#OpenTK.Mathematics.Box2i.#ctor(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  name: Box2i
  nameWithType: Box2i.Box2i
  fullName: OpenTK.Mathematics.Box2i.Box2i
  nameWithType.vb: Box2i.New
  fullName.vb: OpenTK.Mathematics.Box2i.New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: OpenTK.Mathematics.Box2i.Size*
  commentId: Overload:OpenTK.Mathematics.Box2i.Size
  href: OpenTK.Mathematics.Box2i.html#OpenTK.Mathematics.Box2i.Size
  name: Size
  nameWithType: Box2i.Size
  fullName: OpenTK.Mathematics.Box2i.Size
- uid: OpenTK.Mathematics.Box2i.HalfSize*
  commentId: Overload:OpenTK.Mathematics.Box2i.HalfSize
  href: OpenTK.Mathematics.Box2i.html#OpenTK.Mathematics.Box2i.HalfSize
  name: HalfSize
  nameWithType: Box2i.HalfSize
  fullName: OpenTK.Mathematics.Box2i.HalfSize
- uid: OpenTK.Mathematics.Box2i.Center*
  commentId: Overload:OpenTK.Mathematics.Box2i.Center
  href: OpenTK.Mathematics.Box2i.html#OpenTK.Mathematics.Box2i.Center
  name: Center
  nameWithType: Box2i.Center
  fullName: OpenTK.Mathematics.Box2i.Center
- uid: OpenTK.Mathematics.Vector2
  commentId: T:OpenTK.Mathematics.Vector2
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector2.html
  name: Vector2
  nameWithType: Vector2
  fullName: OpenTK.Mathematics.Vector2
- uid: OpenTK.Mathematics.Box2i.Contains*
  commentId: Overload:OpenTK.Mathematics.Box2i.Contains
  href: OpenTK.Mathematics.Box2i.html#OpenTK.Mathematics.Box2i.Contains(OpenTK.Mathematics.Vector2i)
  name: Contains
  nameWithType: Box2i.Contains
  fullName: OpenTK.Mathematics.Box2i.Contains
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: OpenTK.Mathematics.Box2i.ContainsInclusive*
  commentId: Overload:OpenTK.Mathematics.Box2i.ContainsInclusive
  href: OpenTK.Mathematics.Box2i.html#OpenTK.Mathematics.Box2i.ContainsInclusive(OpenTK.Mathematics.Vector2i)
  name: ContainsInclusive
  nameWithType: Box2i.ContainsInclusive
  fullName: OpenTK.Mathematics.Box2i.ContainsInclusive
- uid: OpenTK.Mathematics.Box2i.ContainsExclusive*
  commentId: Overload:OpenTK.Mathematics.Box2i.ContainsExclusive
  href: OpenTK.Mathematics.Box2i.html#OpenTK.Mathematics.Box2i.ContainsExclusive(OpenTK.Mathematics.Vector2i)
  name: ContainsExclusive
  nameWithType: Box2i.ContainsExclusive
  fullName: OpenTK.Mathematics.Box2i.ContainsExclusive
- uid: OpenTK.Mathematics.Box2i.Intersect*
  commentId: Overload:OpenTK.Mathematics.Box2i.Intersect
  href: OpenTK.Mathematics.Box2i.html#OpenTK.Mathematics.Box2i.Intersect(OpenTK.Mathematics.Box2i,OpenTK.Mathematics.Box2i)
  name: Intersect
  nameWithType: Box2i.Intersect
  fullName: OpenTK.Mathematics.Box2i.Intersect
- uid: OpenTK.Mathematics.Box2i.DistanceToNearestEdge*
  commentId: Overload:OpenTK.Mathematics.Box2i.DistanceToNearestEdge
  href: OpenTK.Mathematics.Box2i.html#OpenTK.Mathematics.Box2i.DistanceToNearestEdge(OpenTK.Mathematics.Vector2i)
  name: DistanceToNearestEdge
  nameWithType: Box2i.DistanceToNearestEdge
  fullName: OpenTK.Mathematics.Box2i.DistanceToNearestEdge
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: OpenTK.Mathematics.Box2i.Translate*
  commentId: Overload:OpenTK.Mathematics.Box2i.Translate
  href: OpenTK.Mathematics.Box2i.html#OpenTK.Mathematics.Box2i.Translate(OpenTK.Mathematics.Vector2i)
  name: Translate
  nameWithType: Box2i.Translate
  fullName: OpenTK.Mathematics.Box2i.Translate
- uid: OpenTK.Mathematics.Box2i.Translated*
  commentId: Overload:OpenTK.Mathematics.Box2i.Translated
  href: OpenTK.Mathematics.Box2i.html#OpenTK.Mathematics.Box2i.Translated(OpenTK.Mathematics.Vector2i)
  name: Translated
  nameWithType: Box2i.Translated
  fullName: OpenTK.Mathematics.Box2i.Translated
- uid: OpenTK.Mathematics.Box2i.Scale*
  commentId: Overload:OpenTK.Mathematics.Box2i.Scale
  href: OpenTK.Mathematics.Box2i.html#OpenTK.Mathematics.Box2i.Scale(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  name: Scale
  nameWithType: Box2i.Scale
  fullName: OpenTK.Mathematics.Box2i.Scale
- uid: OpenTK.Mathematics.Box2i.Scaled*
  commentId: Overload:OpenTK.Mathematics.Box2i.Scaled
  href: OpenTK.Mathematics.Box2i.html#OpenTK.Mathematics.Box2i.Scaled(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  name: Scaled
  nameWithType: Box2i.Scaled
  fullName: OpenTK.Mathematics.Box2i.Scaled
- uid: OpenTK.Mathematics.Box2i.Extend(OpenTK.Mathematics.Vector2i)
  commentId: M:OpenTK.Mathematics.Box2i.Extend(OpenTK.Mathematics.Vector2i)
  href: OpenTK.Mathematics.Box2i.html#OpenTK.Mathematics.Box2i.Extend(OpenTK.Mathematics.Vector2i)
  name: Extend(Vector2i)
  nameWithType: Box2i.Extend(Vector2i)
  fullName: OpenTK.Mathematics.Box2i.Extend(OpenTK.Mathematics.Vector2i)
  spec.csharp:
  - uid: OpenTK.Mathematics.Box2i.Extend(OpenTK.Mathematics.Vector2i)
    name: Extend
    href: OpenTK.Mathematics.Box2i.html#OpenTK.Mathematics.Box2i.Extend(OpenTK.Mathematics.Vector2i)
  - name: (
  - uid: OpenTK.Mathematics.Vector2i
    name: Vector2i
    href: OpenTK.Mathematics.Vector2i.html
  - name: )
  spec.vb:
  - uid: OpenTK.Mathematics.Box2i.Extend(OpenTK.Mathematics.Vector2i)
    name: Extend
    href: OpenTK.Mathematics.Box2i.html#OpenTK.Mathematics.Box2i.Extend(OpenTK.Mathematics.Vector2i)
  - name: (
  - uid: OpenTK.Mathematics.Vector2i
    name: Vector2i
    href: OpenTK.Mathematics.Vector2i.html
  - name: )
- uid: OpenTK.Mathematics.Box2i.Inflate*
  commentId: Overload:OpenTK.Mathematics.Box2i.Inflate
  href: OpenTK.Mathematics.Box2i.html#OpenTK.Mathematics.Box2i.Inflate(OpenTK.Mathematics.Vector2i)
  name: Inflate
  nameWithType: Box2i.Inflate
  fullName: OpenTK.Mathematics.Box2i.Inflate
- uid: OpenTK.Mathematics.Box2i.Extended(OpenTK.Mathematics.Vector2i)
  commentId: M:OpenTK.Mathematics.Box2i.Extended(OpenTK.Mathematics.Vector2i)
  href: OpenTK.Mathematics.Box2i.html#OpenTK.Mathematics.Box2i.Extended(OpenTK.Mathematics.Vector2i)
  name: Extended(Vector2i)
  nameWithType: Box2i.Extended(Vector2i)
  fullName: OpenTK.Mathematics.Box2i.Extended(OpenTK.Mathematics.Vector2i)
  spec.csharp:
  - uid: OpenTK.Mathematics.Box2i.Extended(OpenTK.Mathematics.Vector2i)
    name: Extended
    href: OpenTK.Mathematics.Box2i.html#OpenTK.Mathematics.Box2i.Extended(OpenTK.Mathematics.Vector2i)
  - name: (
  - uid: OpenTK.Mathematics.Vector2i
    name: Vector2i
    href: OpenTK.Mathematics.Vector2i.html
  - name: )
  spec.vb:
  - uid: OpenTK.Mathematics.Box2i.Extended(OpenTK.Mathematics.Vector2i)
    name: Extended
    href: OpenTK.Mathematics.Box2i.html#OpenTK.Mathematics.Box2i.Extended(OpenTK.Mathematics.Vector2i)
  - name: (
  - uid: OpenTK.Mathematics.Vector2i
    name: Vector2i
    href: OpenTK.Mathematics.Vector2i.html
  - name: )
- uid: OpenTK.Mathematics.Box2i.Inflated*
  commentId: Overload:OpenTK.Mathematics.Box2i.Inflated
  href: OpenTK.Mathematics.Box2i.html#OpenTK.Mathematics.Box2i.Inflated(OpenTK.Mathematics.Vector2i)
  name: Inflated
  nameWithType: Box2i.Inflated
  fullName: OpenTK.Mathematics.Box2i.Inflated
- uid: OpenTK.Mathematics.Box2i.Extend*
  commentId: Overload:OpenTK.Mathematics.Box2i.Extend
  href: OpenTK.Mathematics.Box2i.html#OpenTK.Mathematics.Box2i.Extend(OpenTK.Mathematics.Vector2i)
  name: Extend
  nameWithType: Box2i.Extend
  fullName: OpenTK.Mathematics.Box2i.Extend
- uid: OpenTK.Mathematics.Box2i.Extended*
  commentId: Overload:OpenTK.Mathematics.Box2i.Extended
  href: OpenTK.Mathematics.Box2i.html#OpenTK.Mathematics.Box2i.Extended(OpenTK.Mathematics.Vector2i)
  name: Extended
  nameWithType: Box2i.Extended
  fullName: OpenTK.Mathematics.Box2i.Extended
- uid: OpenTK.Mathematics.Box2i.op_Equality*
  commentId: Overload:OpenTK.Mathematics.Box2i.op_Equality
  href: OpenTK.Mathematics.Box2i.html#OpenTK.Mathematics.Box2i.op_Equality(OpenTK.Mathematics.Box2i,OpenTK.Mathematics.Box2i)
  name: operator ==
  nameWithType: Box2i.operator ==
  fullName: OpenTK.Mathematics.Box2i.operator ==
  nameWithType.vb: Box2i.=
  fullName.vb: OpenTK.Mathematics.Box2i.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Box2i.op_Equality*
    name: ==
    href: OpenTK.Mathematics.Box2i.html#OpenTK.Mathematics.Box2i.op_Equality(OpenTK.Mathematics.Box2i,OpenTK.Mathematics.Box2i)
- uid: OpenTK.Mathematics.Box2i.op_Inequality*
  commentId: Overload:OpenTK.Mathematics.Box2i.op_Inequality
  href: OpenTK.Mathematics.Box2i.html#OpenTK.Mathematics.Box2i.op_Inequality(OpenTK.Mathematics.Box2i,OpenTK.Mathematics.Box2i)
  name: operator !=
  nameWithType: Box2i.operator !=
  fullName: OpenTK.Mathematics.Box2i.operator !=
  nameWithType.vb: Box2i.<>
  fullName.vb: OpenTK.Mathematics.Box2i.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Box2i.op_Inequality*
    name: '!='
    href: OpenTK.Mathematics.Box2i.html#OpenTK.Mathematics.Box2i.op_Inequality(OpenTK.Mathematics.Box2i,OpenTK.Mathematics.Box2i)
- uid: System.Drawing.Rectangle
  commentId: T:System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.drawing.rectangle
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: OpenTK.Mathematics.Box2i.Min
  commentId: P:OpenTK.Mathematics.Box2i.Min
  href: OpenTK.Mathematics.Box2i.html#OpenTK.Mathematics.Box2i.Min
  name: Min
  nameWithType: Box2i.Min
  fullName: OpenTK.Mathematics.Box2i.Min
- uid: OpenTK.Mathematics.Box2i.Size
  commentId: P:OpenTK.Mathematics.Box2i.Size
  href: OpenTK.Mathematics.Box2i.html#OpenTK.Mathematics.Box2i.Size
  name: Size
  nameWithType: Box2i.Size
  fullName: OpenTK.Mathematics.Box2i.Size
- uid: OpenTK.Mathematics.Box2i.op_Explicit*
  commentId: Overload:OpenTK.Mathematics.Box2i.op_Explicit
  name: explicit operator
  nameWithType: Box2i.explicit operator
  fullName: OpenTK.Mathematics.Box2i.explicit operator
  nameWithType.vb: Box2i.CType
  fullName.vb: OpenTK.Mathematics.Box2i.CType
  name.vb: CType
  spec.csharp:
  - name: explicit
  - name: " "
  - name: operator
- uid: System.Drawing
  commentId: N:System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Drawing
  nameWithType: System.Drawing
  fullName: System.Drawing
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Drawing
    name: Drawing
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.drawing
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Drawing
    name: Drawing
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.drawing
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: OpenTK.Mathematics.Box2i.Equals*
  commentId: Overload:OpenTK.Mathematics.Box2i.Equals
  href: OpenTK.Mathematics.Box2i.html#OpenTK.Mathematics.Box2i.Equals(System.Object)
  name: Equals
  nameWithType: Box2i.Equals
  fullName: OpenTK.Mathematics.Box2i.Equals
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.IEquatable{OpenTK.Mathematics.Box2i}.Equals(OpenTK.Mathematics.Box2i)
  commentId: M:System.IEquatable{OpenTK.Mathematics.Box2i}.Equals(OpenTK.Mathematics.Box2i)
  parent: System.IEquatable{OpenTK.Mathematics.Box2i}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-opentk.mathematics.box2i-.equals#system-iequatable((opentk-mathematics-box2i))-equals(opentk-mathematics-box2i)
  name: Equals(Box2i)
  nameWithType: IEquatable<Box2i>.Equals(Box2i)
  fullName: System.IEquatable<OpenTK.Mathematics.Box2i>.Equals(OpenTK.Mathematics.Box2i)
  nameWithType.vb: IEquatable(Of Box2i).Equals(Box2i)
  fullName.vb: System.IEquatable(Of OpenTK.Mathematics.Box2i).Equals(OpenTK.Mathematics.Box2i)
  spec.csharp:
  - uid: System.IEquatable{OpenTK.Mathematics.Box2i}.Equals(OpenTK.Mathematics.Box2i)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-opentk.mathematics.box2i-.equals#system-iequatable((opentk-mathematics-box2i))-equals(opentk-mathematics-box2i)
  - name: (
  - uid: OpenTK.Mathematics.Box2i
    name: Box2i
    href: OpenTK.Mathematics.Box2i.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{OpenTK.Mathematics.Box2i}.Equals(OpenTK.Mathematics.Box2i)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-opentk.mathematics.box2i-.equals#system-iequatable((opentk-mathematics-box2i))-equals(opentk-mathematics-box2i)
  - name: (
  - uid: OpenTK.Mathematics.Box2i
    name: Box2i
    href: OpenTK.Mathematics.Box2i.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: OpenTK.Mathematics.Box2i.GetHashCode*
  commentId: Overload:OpenTK.Mathematics.Box2i.GetHashCode
  href: OpenTK.Mathematics.Box2i.html#OpenTK.Mathematics.Box2i.GetHashCode
  name: GetHashCode
  nameWithType: Box2i.GetHashCode
  fullName: OpenTK.Mathematics.Box2i.GetHashCode
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: OpenTK.Mathematics.Box2i.ToString*
  commentId: Overload:OpenTK.Mathematics.Box2i.ToString
  href: OpenTK.Mathematics.Box2i.html#OpenTK.Mathematics.Box2i.ToString
  name: ToString
  nameWithType: Box2i.ToString
  fullName: OpenTK.Mathematics.Box2i.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  name: ToString(string, IFormatProvider)
  nameWithType: IFormattable.ToString(string, IFormatProvider)
  fullName: System.IFormattable.ToString(string, System.IFormatProvider)
  nameWithType.vb: IFormattable.ToString(String, IFormatProvider)
  fullName.vb: System.IFormattable.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
