### YamlMime:ManagedReference
items:
- uid: OpenTK.Mathematics.Vector4
  commentId: T:OpenTK.Mathematics.Vector4
  id: Vector4
  parent: OpenTK.Mathematics
  children:
  - OpenTK.Mathematics.Vector4.#ctor(OpenTK.Mathematics.Vector2)
  - OpenTK.Mathematics.Vector4.#ctor(OpenTK.Mathematics.Vector3,System.Single)
  - OpenTK.Mathematics.Vector4.#ctor(OpenTK.Mathematics.Vector3)
  - OpenTK.Mathematics.Vector4.#ctor(OpenTK.Mathematics.Vector4)
  - OpenTK.Mathematics.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)
  - OpenTK.Mathematics.Vector4.#ctor(System.Single)
  - OpenTK.Mathematics.Vector4.Add(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  - OpenTK.Mathematics.Vector4.Add(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  - OpenTK.Mathematics.Vector4.BaryCentric(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4,System.Single,System.Single)
  - OpenTK.Mathematics.Vector4.BaryCentric(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,System.Single,System.Single,OpenTK.Mathematics.Vector4@)
  - OpenTK.Mathematics.Vector4.Clamp(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  - OpenTK.Mathematics.Vector4.Clamp(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  - OpenTK.Mathematics.Vector4.ComponentMax(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  - OpenTK.Mathematics.Vector4.ComponentMax(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  - OpenTK.Mathematics.Vector4.ComponentMin(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  - OpenTK.Mathematics.Vector4.ComponentMin(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  - OpenTK.Mathematics.Vector4.Deconstruct(System.Single@,System.Single@,System.Single@,System.Single@)
  - OpenTK.Mathematics.Vector4.Divide(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  - OpenTK.Mathematics.Vector4.Divide(OpenTK.Mathematics.Vector4,System.Single)
  - OpenTK.Mathematics.Vector4.Divide(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  - OpenTK.Mathematics.Vector4.Divide(OpenTK.Mathematics.Vector4@,System.Single,OpenTK.Mathematics.Vector4@)
  - OpenTK.Mathematics.Vector4.Dot(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  - OpenTK.Mathematics.Vector4.Dot(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,System.Single@)
  - OpenTK.Mathematics.Vector4.Equals(OpenTK.Mathematics.Vector4)
  - OpenTK.Mathematics.Vector4.Equals(System.Object)
  - OpenTK.Mathematics.Vector4.GetHashCode
  - OpenTK.Mathematics.Vector4.Item(System.Int32)
  - OpenTK.Mathematics.Vector4.Length
  - OpenTK.Mathematics.Vector4.LengthFast
  - OpenTK.Mathematics.Vector4.LengthSquared
  - OpenTK.Mathematics.Vector4.Lerp(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  - OpenTK.Mathematics.Vector4.Lerp(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4,System.Single)
  - OpenTK.Mathematics.Vector4.Lerp(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4@)
  - OpenTK.Mathematics.Vector4.Lerp(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,System.Single,OpenTK.Mathematics.Vector4@)
  - OpenTK.Mathematics.Vector4.MagnitudeMax(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  - OpenTK.Mathematics.Vector4.MagnitudeMax(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  - OpenTK.Mathematics.Vector4.MagnitudeMin(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  - OpenTK.Mathematics.Vector4.MagnitudeMin(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  - OpenTK.Mathematics.Vector4.Multiply(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  - OpenTK.Mathematics.Vector4.Multiply(OpenTK.Mathematics.Vector4,System.Single)
  - OpenTK.Mathematics.Vector4.Multiply(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  - OpenTK.Mathematics.Vector4.Multiply(OpenTK.Mathematics.Vector4@,System.Single,OpenTK.Mathematics.Vector4@)
  - OpenTK.Mathematics.Vector4.NegativeInfinity
  - OpenTK.Mathematics.Vector4.Normalize
  - OpenTK.Mathematics.Vector4.Normalize(OpenTK.Mathematics.Vector4)
  - OpenTK.Mathematics.Vector4.Normalize(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  - OpenTK.Mathematics.Vector4.Normalized
  - OpenTK.Mathematics.Vector4.NormalizeFast
  - OpenTK.Mathematics.Vector4.NormalizeFast(OpenTK.Mathematics.Vector4)
  - OpenTK.Mathematics.Vector4.NormalizeFast(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  - OpenTK.Mathematics.Vector4.One
  - OpenTK.Mathematics.Vector4.op_Addition(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  - OpenTK.Mathematics.Vector4.op_Division(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  - OpenTK.Mathematics.Vector4.op_Division(OpenTK.Mathematics.Vector4,System.Single)
  - OpenTK.Mathematics.Vector4.op_Equality(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  - OpenTK.Mathematics.Vector4.op_Explicit(OpenTK.Mathematics.Vector4)~OpenTK.Mathematics.Color4
  - OpenTK.Mathematics.Vector4.op_Explicit(OpenTK.Mathematics.Vector4)~OpenTK.Mathematics.Vector4h
  - OpenTK.Mathematics.Vector4.op_Explicit(OpenTK.Mathematics.Vector4)~OpenTK.Mathematics.Vector4i
  - OpenTK.Mathematics.Vector4.op_Explicit(OpenTK.Mathematics.Vector4)~System.IntPtr
  - OpenTK.Mathematics.Vector4.op_Explicit(OpenTK.Mathematics.Vector4)~System.Single*
  - OpenTK.Mathematics.Vector4.op_Implicit(OpenTK.Mathematics.Vector4)~OpenTK.Mathematics.Vector4d
  - OpenTK.Mathematics.Vector4.op_Implicit(System.ValueTuple{System.Single,System.Single,System.Single,System.Single})~OpenTK.Mathematics.Vector4
  - OpenTK.Mathematics.Vector4.op_Inequality(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  - OpenTK.Mathematics.Vector4.op_Multiply(OpenTK.Mathematics.Matrix4,OpenTK.Mathematics.Vector4)
  - OpenTK.Mathematics.Vector4.op_Multiply(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Vector4)
  - OpenTK.Mathematics.Vector4.op_Multiply(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Matrix4)
  - OpenTK.Mathematics.Vector4.op_Multiply(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  - OpenTK.Mathematics.Vector4.op_Multiply(OpenTK.Mathematics.Vector4,System.Single)
  - OpenTK.Mathematics.Vector4.op_Multiply(System.Single,OpenTK.Mathematics.Vector4)
  - OpenTK.Mathematics.Vector4.op_Subtraction(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  - OpenTK.Mathematics.Vector4.op_UnaryNegation(OpenTK.Mathematics.Vector4)
  - OpenTK.Mathematics.Vector4.PositiveInfinity
  - OpenTK.Mathematics.Vector4.SizeInBytes
  - OpenTK.Mathematics.Vector4.Subtract(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  - OpenTK.Mathematics.Vector4.Subtract(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  - OpenTK.Mathematics.Vector4.ToString
  - OpenTK.Mathematics.Vector4.ToString(System.IFormatProvider)
  - OpenTK.Mathematics.Vector4.ToString(System.String,System.IFormatProvider)
  - OpenTK.Mathematics.Vector4.ToString(System.String)
  - OpenTK.Mathematics.Vector4.Transform(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Quaternion)
  - OpenTK.Mathematics.Vector4.Transform(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Vector4@)
  - OpenTK.Mathematics.Vector4.TransformColumn(OpenTK.Mathematics.Matrix4,OpenTK.Mathematics.Vector4)
  - OpenTK.Mathematics.Vector4.TransformColumn(OpenTK.Mathematics.Matrix4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  - OpenTK.Mathematics.Vector4.TransformRow(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Matrix4)
  - OpenTK.Mathematics.Vector4.TransformRow(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Matrix4@,OpenTK.Mathematics.Vector4@)
  - OpenTK.Mathematics.Vector4.UnitW
  - OpenTK.Mathematics.Vector4.UnitX
  - OpenTK.Mathematics.Vector4.UnitY
  - OpenTK.Mathematics.Vector4.UnitZ
  - OpenTK.Mathematics.Vector4.W
  - OpenTK.Mathematics.Vector4.Wx
  - OpenTK.Mathematics.Vector4.Wxy
  - OpenTK.Mathematics.Vector4.Wxyz
  - OpenTK.Mathematics.Vector4.Wxz
  - OpenTK.Mathematics.Vector4.Wxzy
  - OpenTK.Mathematics.Vector4.Wy
  - OpenTK.Mathematics.Vector4.Wyx
  - OpenTK.Mathematics.Vector4.Wyxz
  - OpenTK.Mathematics.Vector4.Wyz
  - OpenTK.Mathematics.Vector4.Wyzx
  - OpenTK.Mathematics.Vector4.Wz
  - OpenTK.Mathematics.Vector4.Wzx
  - OpenTK.Mathematics.Vector4.Wzxy
  - OpenTK.Mathematics.Vector4.Wzy
  - OpenTK.Mathematics.Vector4.Wzyw
  - OpenTK.Mathematics.Vector4.Wzyx
  - OpenTK.Mathematics.Vector4.X
  - OpenTK.Mathematics.Vector4.Xw
  - OpenTK.Mathematics.Vector4.Xwy
  - OpenTK.Mathematics.Vector4.Xwyz
  - OpenTK.Mathematics.Vector4.Xwz
  - OpenTK.Mathematics.Vector4.Xwzy
  - OpenTK.Mathematics.Vector4.Xy
  - OpenTK.Mathematics.Vector4.Xyw
  - OpenTK.Mathematics.Vector4.Xywz
  - OpenTK.Mathematics.Vector4.Xyz
  - OpenTK.Mathematics.Vector4.Xz
  - OpenTK.Mathematics.Vector4.Xzw
  - OpenTK.Mathematics.Vector4.Xzwy
  - OpenTK.Mathematics.Vector4.Xzy
  - OpenTK.Mathematics.Vector4.Xzyw
  - OpenTK.Mathematics.Vector4.Y
  - OpenTK.Mathematics.Vector4.Yw
  - OpenTK.Mathematics.Vector4.Ywx
  - OpenTK.Mathematics.Vector4.Ywxz
  - OpenTK.Mathematics.Vector4.Ywz
  - OpenTK.Mathematics.Vector4.Ywzx
  - OpenTK.Mathematics.Vector4.Yx
  - OpenTK.Mathematics.Vector4.Yxw
  - OpenTK.Mathematics.Vector4.Yxwz
  - OpenTK.Mathematics.Vector4.Yxz
  - OpenTK.Mathematics.Vector4.Yxzw
  - OpenTK.Mathematics.Vector4.Yywz
  - OpenTK.Mathematics.Vector4.Yyzw
  - OpenTK.Mathematics.Vector4.Yz
  - OpenTK.Mathematics.Vector4.Yzw
  - OpenTK.Mathematics.Vector4.Yzwx
  - OpenTK.Mathematics.Vector4.Yzx
  - OpenTK.Mathematics.Vector4.Yzxw
  - OpenTK.Mathematics.Vector4.Z
  - OpenTK.Mathematics.Vector4.Zero
  - OpenTK.Mathematics.Vector4.Zw
  - OpenTK.Mathematics.Vector4.Zwx
  - OpenTK.Mathematics.Vector4.Zwxy
  - OpenTK.Mathematics.Vector4.Zwy
  - OpenTK.Mathematics.Vector4.Zwyx
  - OpenTK.Mathematics.Vector4.Zwzy
  - OpenTK.Mathematics.Vector4.Zx
  - OpenTK.Mathematics.Vector4.Zxw
  - OpenTK.Mathematics.Vector4.Zxwy
  - OpenTK.Mathematics.Vector4.Zxy
  - OpenTK.Mathematics.Vector4.Zxyw
  - OpenTK.Mathematics.Vector4.Zy
  - OpenTK.Mathematics.Vector4.Zyw
  - OpenTK.Mathematics.Vector4.Zywx
  - OpenTK.Mathematics.Vector4.Zyx
  - OpenTK.Mathematics.Vector4.Zyxw
  langs:
  - csharp
  - vb
  name: Vector4
  nameWithType: Vector4
  fullName: OpenTK.Mathematics.Vector4
  type: Struct
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Vector4
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 37
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Represents a 4D vector using four single-precision floating-point numbers.
  remarks: The Vector4 structure is suitable for interoperation with unmanaged code requiring four consecutive floats.
  example: []
  syntax:
    content: >-
      [Serializable]

      public struct Vector4 : IEquatable<Vector4>, IFormattable
    content.vb: >-
      <Serializable>

      Public Structure Vector4 Implements IEquatable(Of Vector4), IFormattable
  implements:
  - System.IEquatable{OpenTK.Mathematics.Vector4}
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4.X
  commentId: F:OpenTK.Mathematics.Vector4.X
  id: X
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: X
  nameWithType: Vector4.X
  fullName: OpenTK.Mathematics.Vector4.X
  type: Field
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: X
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 44
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: The X component of the Vector4.
  example: []
  syntax:
    content: public float X
    return:
      type: System.Single
    content.vb: Public X As Single
- uid: OpenTK.Mathematics.Vector4.Y
  commentId: F:OpenTK.Mathematics.Vector4.Y
  id: Y
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: Vector4.Y
  fullName: OpenTK.Mathematics.Vector4.Y
  type: Field
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Y
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 49
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: The Y component of the Vector4.
  example: []
  syntax:
    content: public float Y
    return:
      type: System.Single
    content.vb: Public Y As Single
- uid: OpenTK.Mathematics.Vector4.Z
  commentId: F:OpenTK.Mathematics.Vector4.Z
  id: Z
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Z
  nameWithType: Vector4.Z
  fullName: OpenTK.Mathematics.Vector4.Z
  type: Field
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Z
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 54
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: The Z component of the Vector4.
  example: []
  syntax:
    content: public float Z
    return:
      type: System.Single
    content.vb: Public Z As Single
- uid: OpenTK.Mathematics.Vector4.W
  commentId: F:OpenTK.Mathematics.Vector4.W
  id: W
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: W
  nameWithType: Vector4.W
  fullName: OpenTK.Mathematics.Vector4.W
  type: Field
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: W
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 59
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: The W component of the Vector4.
  example: []
  syntax:
    content: public float W
    return:
      type: System.Single
    content.vb: Public W As Single
- uid: OpenTK.Mathematics.Vector4.UnitX
  commentId: F:OpenTK.Mathematics.Vector4.UnitX
  id: UnitX
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: UnitX
  nameWithType: Vector4.UnitX
  fullName: OpenTK.Mathematics.Vector4.UnitX
  type: Field
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: UnitX
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 64
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines a unit-length Vector4 that points towards the X-axis.
  example: []
  syntax:
    content: public static readonly Vector4 UnitX
    return:
      type: OpenTK.Mathematics.Vector4
    content.vb: Public Shared ReadOnly UnitX As Vector4
- uid: OpenTK.Mathematics.Vector4.UnitY
  commentId: F:OpenTK.Mathematics.Vector4.UnitY
  id: UnitY
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: UnitY
  nameWithType: Vector4.UnitY
  fullName: OpenTK.Mathematics.Vector4.UnitY
  type: Field
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: UnitY
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 69
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines a unit-length Vector4 that points towards the Y-axis.
  example: []
  syntax:
    content: public static readonly Vector4 UnitY
    return:
      type: OpenTK.Mathematics.Vector4
    content.vb: Public Shared ReadOnly UnitY As Vector4
- uid: OpenTK.Mathematics.Vector4.UnitZ
  commentId: F:OpenTK.Mathematics.Vector4.UnitZ
  id: UnitZ
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: UnitZ
  nameWithType: Vector4.UnitZ
  fullName: OpenTK.Mathematics.Vector4.UnitZ
  type: Field
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: UnitZ
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 74
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines a unit-length Vector4 that points towards the Z-axis.
  example: []
  syntax:
    content: public static readonly Vector4 UnitZ
    return:
      type: OpenTK.Mathematics.Vector4
    content.vb: Public Shared ReadOnly UnitZ As Vector4
- uid: OpenTK.Mathematics.Vector4.UnitW
  commentId: F:OpenTK.Mathematics.Vector4.UnitW
  id: UnitW
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: UnitW
  nameWithType: Vector4.UnitW
  fullName: OpenTK.Mathematics.Vector4.UnitW
  type: Field
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: UnitW
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 79
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines a unit-length Vector4 that points towards the W-axis.
  example: []
  syntax:
    content: public static readonly Vector4 UnitW
    return:
      type: OpenTK.Mathematics.Vector4
    content.vb: Public Shared ReadOnly UnitW As Vector4
- uid: OpenTK.Mathematics.Vector4.Zero
  commentId: F:OpenTK.Mathematics.Vector4.Zero
  id: Zero
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: Vector4.Zero
  fullName: OpenTK.Mathematics.Vector4.Zero
  type: Field
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Zero
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 84
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines an instance with all components set to 0.
  example: []
  syntax:
    content: public static readonly Vector4 Zero
    return:
      type: OpenTK.Mathematics.Vector4
    content.vb: Public Shared ReadOnly Zero As Vector4
- uid: OpenTK.Mathematics.Vector4.One
  commentId: F:OpenTK.Mathematics.Vector4.One
  id: One
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: One
  nameWithType: Vector4.One
  fullName: OpenTK.Mathematics.Vector4.One
  type: Field
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: One
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 89
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines an instance with all components set to 1.
  example: []
  syntax:
    content: public static readonly Vector4 One
    return:
      type: OpenTK.Mathematics.Vector4
    content.vb: Public Shared ReadOnly One As Vector4
- uid: OpenTK.Mathematics.Vector4.PositiveInfinity
  commentId: F:OpenTK.Mathematics.Vector4.PositiveInfinity
  id: PositiveInfinity
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: PositiveInfinity
  nameWithType: Vector4.PositiveInfinity
  fullName: OpenTK.Mathematics.Vector4.PositiveInfinity
  type: Field
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: PositiveInfinity
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 94
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines an instance with all components set to positive infinity.
  example: []
  syntax:
    content: public static readonly Vector4 PositiveInfinity
    return:
      type: OpenTK.Mathematics.Vector4
    content.vb: Public Shared ReadOnly PositiveInfinity As Vector4
- uid: OpenTK.Mathematics.Vector4.NegativeInfinity
  commentId: F:OpenTK.Mathematics.Vector4.NegativeInfinity
  id: NegativeInfinity
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: NegativeInfinity
  nameWithType: Vector4.NegativeInfinity
  fullName: OpenTK.Mathematics.Vector4.NegativeInfinity
  type: Field
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: NegativeInfinity
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 99
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines an instance with all components set to negative infinity.
  example: []
  syntax:
    content: public static readonly Vector4 NegativeInfinity
    return:
      type: OpenTK.Mathematics.Vector4
    content.vb: Public Shared ReadOnly NegativeInfinity As Vector4
- uid: OpenTK.Mathematics.Vector4.SizeInBytes
  commentId: F:OpenTK.Mathematics.Vector4.SizeInBytes
  id: SizeInBytes
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: SizeInBytes
  nameWithType: Vector4.SizeInBytes
  fullName: OpenTK.Mathematics.Vector4.SizeInBytes
  type: Field
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: SizeInBytes
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 104
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines the size of the Vector4 struct in bytes.
  example: []
  syntax:
    content: public static readonly int SizeInBytes
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly SizeInBytes As Integer
- uid: OpenTK.Mathematics.Vector4.#ctor(System.Single)
  commentId: M:OpenTK.Mathematics.Vector4.#ctor(System.Single)
  id: '#ctor(System.Single)'
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Vector4(float)
  nameWithType: Vector4.Vector4(float)
  fullName: OpenTK.Mathematics.Vector4.Vector4(float)
  type: Constructor
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: .ctor
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 110
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector4" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector4(float value)
    parameters:
    - id: value
      type: System.Single
      description: The value that will initialize this instance.
    content.vb: Public Sub New(value As Single)
  overload: OpenTK.Mathematics.Vector4.#ctor*
  nameWithType.vb: Vector4.New(Single)
  fullName.vb: OpenTK.Mathematics.Vector4.New(Single)
  name.vb: New(Single)
- uid: OpenTK.Mathematics.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)
  commentId: M:OpenTK.Mathematics.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Vector4(float, float, float, float)
  nameWithType: Vector4.Vector4(float, float, float, float)
  fullName: OpenTK.Mathematics.Vector4.Vector4(float, float, float, float)
  type: Constructor
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: .ctor
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 125
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector4" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector4(float x, float y, float z, float w)
    parameters:
    - id: x
      type: System.Single
      description: The x component of the Vector4.
    - id: y
      type: System.Single
      description: The y component of the Vector4.
    - id: z
      type: System.Single
      description: The z component of the Vector4.
    - id: w
      type: System.Single
      description: The w component of the Vector4.
    content.vb: Public Sub New(x As Single, y As Single, z As Single, w As Single)
  overload: OpenTK.Mathematics.Vector4.#ctor*
  nameWithType.vb: Vector4.New(Single, Single, Single, Single)
  fullName.vb: OpenTK.Mathematics.Vector4.New(Single, Single, Single, Single)
  name.vb: New(Single, Single, Single, Single)
- uid: OpenTK.Mathematics.Vector4.#ctor(OpenTK.Mathematics.Vector2)
  commentId: M:OpenTK.Mathematics.Vector4.#ctor(OpenTK.Mathematics.Vector2)
  id: '#ctor(OpenTK.Mathematics.Vector2)'
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Vector4(Vector2)
  nameWithType: Vector4.Vector4(Vector2)
  fullName: OpenTK.Mathematics.Vector4.Vector4(OpenTK.Mathematics.Vector2)
  type: Constructor
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: .ctor
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 137
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector4" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector4(Vector2 v)
    parameters:
    - id: v
      type: OpenTK.Mathematics.Vector2
      description: The Vector2 to copy components from.
    content.vb: Public Sub New(v As Vector2)
  overload: OpenTK.Mathematics.Vector4.#ctor*
  nameWithType.vb: Vector4.New(Vector2)
  fullName.vb: OpenTK.Mathematics.Vector4.New(OpenTK.Mathematics.Vector2)
  name.vb: New(Vector2)
- uid: OpenTK.Mathematics.Vector4.#ctor(OpenTK.Mathematics.Vector3)
  commentId: M:OpenTK.Mathematics.Vector4.#ctor(OpenTK.Mathematics.Vector3)
  id: '#ctor(OpenTK.Mathematics.Vector3)'
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Vector4(Vector3)
  nameWithType: Vector4.Vector4(Vector3)
  fullName: OpenTK.Mathematics.Vector4.Vector4(OpenTK.Mathematics.Vector3)
  type: Constructor
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: .ctor
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 152
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector4" data-throw-if-not-resolved="false"></xref> struct.
  remarks: .<xref href="OpenTK.Mathematics.Vector4.%23ctor(OpenTK.Mathematics.Vector3%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public Vector4(Vector3 v)
    parameters:
    - id: v
      type: OpenTK.Mathematics.Vector3
      description: The Vector3 to copy components from.
    content.vb: Public Sub New(v As Vector3)
  overload: OpenTK.Mathematics.Vector4.#ctor*
  nameWithType.vb: Vector4.New(Vector3)
  fullName.vb: OpenTK.Mathematics.Vector4.New(OpenTK.Mathematics.Vector3)
  name.vb: New(Vector3)
- uid: OpenTK.Mathematics.Vector4.#ctor(OpenTK.Mathematics.Vector3,System.Single)
  commentId: M:OpenTK.Mathematics.Vector4.#ctor(OpenTK.Mathematics.Vector3,System.Single)
  id: '#ctor(OpenTK.Mathematics.Vector3,System.Single)'
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Vector4(Vector3, float)
  nameWithType: Vector4.Vector4(Vector3, float)
  fullName: OpenTK.Mathematics.Vector4.Vector4(OpenTK.Mathematics.Vector3, float)
  type: Constructor
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: .ctor
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 165
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector4" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector4(Vector3 v, float w)
    parameters:
    - id: v
      type: OpenTK.Mathematics.Vector3
      description: The Vector3 to copy components from.
    - id: w
      type: System.Single
      description: The w component of the new Vector4.
    content.vb: Public Sub New(v As Vector3, w As Single)
  overload: OpenTK.Mathematics.Vector4.#ctor*
  nameWithType.vb: Vector4.New(Vector3, Single)
  fullName.vb: OpenTK.Mathematics.Vector4.New(OpenTK.Mathematics.Vector3, Single)
  name.vb: New(Vector3, Single)
- uid: OpenTK.Mathematics.Vector4.#ctor(OpenTK.Mathematics.Vector4)
  commentId: M:OpenTK.Mathematics.Vector4.#ctor(OpenTK.Mathematics.Vector4)
  id: '#ctor(OpenTK.Mathematics.Vector4)'
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Vector4(Vector4)
  nameWithType: Vector4.Vector4(Vector4)
  fullName: OpenTK.Mathematics.Vector4.Vector4(OpenTK.Mathematics.Vector4)
  type: Constructor
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: .ctor
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 177
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector4" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector4(Vector4 v)
    parameters:
    - id: v
      type: OpenTK.Mathematics.Vector4
      description: The Vector4 to copy components from.
    content.vb: Public Sub New(v As Vector4)
  overload: OpenTK.Mathematics.Vector4.#ctor*
  nameWithType.vb: Vector4.New(Vector4)
  fullName.vb: OpenTK.Mathematics.Vector4.New(OpenTK.Mathematics.Vector4)
  name.vb: New(Vector4)
- uid: OpenTK.Mathematics.Vector4.Item(System.Int32)
  commentId: P:OpenTK.Mathematics.Vector4.Item(System.Int32)
  id: Item(System.Int32)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: Vector4.this[int]
  fullName: OpenTK.Mathematics.Vector4.this[int]
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: this[]
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 190
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets the value at the index of the Vector.
  example: []
  syntax:
    content: public float this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The index of the component from the Vector.
    return:
      type: System.Single
    content.vb: Public Default Property this[](index As Integer) As Single
  overload: OpenTK.Mathematics.Vector4.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: Thrown if the index is less than 0 or greater than 3.
  nameWithType.vb: Vector4.this[](Integer)
  fullName.vb: OpenTK.Mathematics.Vector4.this[](Integer)
  name.vb: this[](Integer)
- uid: OpenTK.Mathematics.Vector4.Length
  commentId: P:OpenTK.Mathematics.Vector4.Length
  id: Length
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: Vector4.Length
  fullName: OpenTK.Mathematics.Vector4.Length
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Length
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 247
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets the length (magnitude) of the vector.
  example: []
  syntax:
    content: public float Length { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Length As Single
  overload: OpenTK.Mathematics.Vector4.Length*
  seealso:
  - linkId: OpenTK.Mathematics.Vector4.LengthSquared
    commentId: P:OpenTK.Mathematics.Vector4.LengthSquared
- uid: OpenTK.Mathematics.Vector4.LengthFast
  commentId: P:OpenTK.Mathematics.Vector4.LengthFast
  id: LengthFast
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: LengthFast
  nameWithType: Vector4.LengthFast
  fullName: OpenTK.Mathematics.Vector4.LengthFast
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: LengthFast
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 258
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets an approximation of the vector length (magnitude).
  remarks: >-
    This property uses an approximation of the square root function to calculate vector magnitude, with

    an upper error bound of 0.001.
  example: []
  syntax:
    content: public float LengthFast { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property LengthFast As Single
  overload: OpenTK.Mathematics.Vector4.LengthFast*
  seealso:
  - linkId: OpenTK.Mathematics.Vector4.LengthSquared
    commentId: P:OpenTK.Mathematics.Vector4.LengthSquared
- uid: OpenTK.Mathematics.Vector4.LengthSquared
  commentId: P:OpenTK.Mathematics.Vector4.LengthSquared
  id: LengthSquared
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: LengthSquared
  nameWithType: Vector4.LengthSquared
  fullName: OpenTK.Mathematics.Vector4.LengthSquared
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: LengthSquared
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 269
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets the square of the vector length (magnitude).
  remarks: >-
    This property avoids the costly square root operation required by the Length property. This makes it more suitable

    for comparisons.
  example: []
  syntax:
    content: public float LengthSquared { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property LengthSquared As Single
  overload: OpenTK.Mathematics.Vector4.LengthSquared*
  seealso:
  - linkId: OpenTK.Mathematics.Vector4.LengthFast
    commentId: P:OpenTK.Mathematics.Vector4.LengthFast
- uid: OpenTK.Mathematics.Vector4.Normalized
  commentId: M:OpenTK.Mathematics.Vector4.Normalized
  id: Normalized
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Normalized()
  nameWithType: Vector4.Normalized()
  fullName: OpenTK.Mathematics.Vector4.Normalized()
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Normalized
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 275
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a copy of the Vector4 scaled to unit length.
  example: []
  syntax:
    content: public Vector4 Normalized()
    return:
      type: OpenTK.Mathematics.Vector4
      description: The normalized copy.
    content.vb: Public Function Normalized() As Vector4
  overload: OpenTK.Mathematics.Vector4.Normalized*
- uid: OpenTK.Mathematics.Vector4.Normalize
  commentId: M:OpenTK.Mathematics.Vector4.Normalize
  id: Normalize
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Normalize()
  nameWithType: Vector4.Normalize()
  fullName: OpenTK.Mathematics.Vector4.Normalize()
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Normalize
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 285
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Scales the Vector4 to unit length.
  example: []
  syntax:
    content: public void Normalize()
    content.vb: Public Sub Normalize()
  overload: OpenTK.Mathematics.Vector4.Normalize*
- uid: OpenTK.Mathematics.Vector4.NormalizeFast
  commentId: M:OpenTK.Mathematics.Vector4.NormalizeFast
  id: NormalizeFast
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: NormalizeFast()
  nameWithType: Vector4.NormalizeFast()
  fullName: OpenTK.Mathematics.Vector4.NormalizeFast()
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: NormalizeFast
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 297
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Scales the Vector4 to approximately unit length.
  example: []
  syntax:
    content: public void NormalizeFast()
    content.vb: Public Sub NormalizeFast()
  overload: OpenTK.Mathematics.Vector4.NormalizeFast*
- uid: OpenTK.Mathematics.Vector4.Add(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  commentId: M:OpenTK.Mathematics.Vector4.Add(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  id: Add(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Add(Vector4, Vector4)
  nameWithType: Vector4.Add(Vector4, Vector4)
  fullName: OpenTK.Mathematics.Vector4.Add(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Add
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 312
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Adds two vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4 Add(Vector4 a, Vector4 b)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4
      description: Left operand.
    - id: b
      type: OpenTK.Mathematics.Vector4
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector4
      description: Result of operation.
    content.vb: >-
      <Pure>

      Public Shared Function Add(a As Vector4, b As Vector4) As Vector4
  overload: OpenTK.Mathematics.Vector4.Add*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4.Add(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  commentId: M:OpenTK.Mathematics.Vector4.Add(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  id: Add(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Add(in Vector4, in Vector4, out Vector4)
  nameWithType: Vector4.Add(in Vector4, in Vector4, out Vector4)
  fullName: OpenTK.Mathematics.Vector4.Add(in OpenTK.Mathematics.Vector4, in OpenTK.Mathematics.Vector4, out OpenTK.Mathematics.Vector4)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Add
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 325
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Adds two vectors.
  example: []
  syntax:
    content: public static void Add(in Vector4 a, in Vector4 b, out Vector4 result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4
      description: Left operand.
    - id: b
      type: OpenTK.Mathematics.Vector4
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector4
      description: Result of operation.
    content.vb: Public Shared Sub Add(a As Vector4, b As Vector4, result As Vector4)
  overload: OpenTK.Mathematics.Vector4.Add*
  nameWithType.vb: Vector4.Add(Vector4, Vector4, Vector4)
  fullName.vb: OpenTK.Mathematics.Vector4.Add(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4)
  name.vb: Add(Vector4, Vector4, Vector4)
- uid: OpenTK.Mathematics.Vector4.Subtract(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  commentId: M:OpenTK.Mathematics.Vector4.Subtract(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  id: Subtract(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Subtract(Vector4, Vector4)
  nameWithType: Vector4.Subtract(Vector4, Vector4)
  fullName: OpenTK.Mathematics.Vector4.Subtract(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Subtract
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 339
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Subtract one Vector from another.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4 Subtract(Vector4 a, Vector4 b)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector4
      description: Second operand.
    return:
      type: OpenTK.Mathematics.Vector4
      description: Result of subtraction.
    content.vb: >-
      <Pure>

      Public Shared Function Subtract(a As Vector4, b As Vector4) As Vector4
  overload: OpenTK.Mathematics.Vector4.Subtract*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4.Subtract(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  commentId: M:OpenTK.Mathematics.Vector4.Subtract(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  id: Subtract(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Subtract(in Vector4, in Vector4, out Vector4)
  nameWithType: Vector4.Subtract(in Vector4, in Vector4, out Vector4)
  fullName: OpenTK.Mathematics.Vector4.Subtract(in OpenTK.Mathematics.Vector4, in OpenTK.Mathematics.Vector4, out OpenTK.Mathematics.Vector4)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Subtract
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 352
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Subtract one Vector from another.
  example: []
  syntax:
    content: public static void Subtract(in Vector4 a, in Vector4 b, out Vector4 result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector4
      description: Second operand.
    - id: result
      type: OpenTK.Mathematics.Vector4
      description: Result of subtraction.
    content.vb: Public Shared Sub Subtract(a As Vector4, b As Vector4, result As Vector4)
  overload: OpenTK.Mathematics.Vector4.Subtract*
  nameWithType.vb: Vector4.Subtract(Vector4, Vector4, Vector4)
  fullName.vb: OpenTK.Mathematics.Vector4.Subtract(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4)
  name.vb: Subtract(Vector4, Vector4, Vector4)
- uid: OpenTK.Mathematics.Vector4.Multiply(OpenTK.Mathematics.Vector4,System.Single)
  commentId: M:OpenTK.Mathematics.Vector4.Multiply(OpenTK.Mathematics.Vector4,System.Single)
  id: Multiply(OpenTK.Mathematics.Vector4,System.Single)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Multiply(Vector4, float)
  nameWithType: Vector4.Multiply(Vector4, float)
  fullName: OpenTK.Mathematics.Vector4.Multiply(OpenTK.Mathematics.Vector4, float)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Multiply
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 366
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies a vector by a scalar.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4 Multiply(Vector4 vector, float scale)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector4
      description: Left operand.
    - id: scale
      type: System.Single
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector4
      description: Result of the operation.
    content.vb: >-
      <Pure>

      Public Shared Function Multiply(vector As Vector4, scale As Single) As Vector4
  overload: OpenTK.Mathematics.Vector4.Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4.Multiply(Vector4, Single)
  fullName.vb: OpenTK.Mathematics.Vector4.Multiply(OpenTK.Mathematics.Vector4, Single)
  name.vb: Multiply(Vector4, Single)
- uid: OpenTK.Mathematics.Vector4.Multiply(OpenTK.Mathematics.Vector4@,System.Single,OpenTK.Mathematics.Vector4@)
  commentId: M:OpenTK.Mathematics.Vector4.Multiply(OpenTK.Mathematics.Vector4@,System.Single,OpenTK.Mathematics.Vector4@)
  id: Multiply(OpenTK.Mathematics.Vector4@,System.Single,OpenTK.Mathematics.Vector4@)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Multiply(in Vector4, float, out Vector4)
  nameWithType: Vector4.Multiply(in Vector4, float, out Vector4)
  fullName: OpenTK.Mathematics.Vector4.Multiply(in OpenTK.Mathematics.Vector4, float, out OpenTK.Mathematics.Vector4)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Multiply
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 379
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies a vector by a scalar.
  example: []
  syntax:
    content: public static void Multiply(in Vector4 vector, float scale, out Vector4 result)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector4
      description: Left operand.
    - id: scale
      type: System.Single
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector4
      description: Result of the operation.
    content.vb: Public Shared Sub Multiply(vector As Vector4, scale As Single, result As Vector4)
  overload: OpenTK.Mathematics.Vector4.Multiply*
  nameWithType.vb: Vector4.Multiply(Vector4, Single, Vector4)
  fullName.vb: OpenTK.Mathematics.Vector4.Multiply(OpenTK.Mathematics.Vector4, Single, OpenTK.Mathematics.Vector4)
  name.vb: Multiply(Vector4, Single, Vector4)
- uid: OpenTK.Mathematics.Vector4.Multiply(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  commentId: M:OpenTK.Mathematics.Vector4.Multiply(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  id: Multiply(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Multiply(Vector4, Vector4)
  nameWithType: Vector4.Multiply(Vector4, Vector4)
  fullName: OpenTK.Mathematics.Vector4.Multiply(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Multiply
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 393
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies a vector by the components a vector (scale).
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4 Multiply(Vector4 vector, Vector4 scale)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector4
      description: Left operand.
    - id: scale
      type: OpenTK.Mathematics.Vector4
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector4
      description: Result of the operation.
    content.vb: >-
      <Pure>

      Public Shared Function Multiply(vector As Vector4, scale As Vector4) As Vector4
  overload: OpenTK.Mathematics.Vector4.Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4.Multiply(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  commentId: M:OpenTK.Mathematics.Vector4.Multiply(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  id: Multiply(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Multiply(in Vector4, in Vector4, out Vector4)
  nameWithType: Vector4.Multiply(in Vector4, in Vector4, out Vector4)
  fullName: OpenTK.Mathematics.Vector4.Multiply(in OpenTK.Mathematics.Vector4, in OpenTK.Mathematics.Vector4, out OpenTK.Mathematics.Vector4)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Multiply
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 406
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies a vector by the components of a vector (scale).
  example: []
  syntax:
    content: public static void Multiply(in Vector4 vector, in Vector4 scale, out Vector4 result)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector4
      description: Left operand.
    - id: scale
      type: OpenTK.Mathematics.Vector4
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector4
      description: Result of the operation.
    content.vb: Public Shared Sub Multiply(vector As Vector4, scale As Vector4, result As Vector4)
  overload: OpenTK.Mathematics.Vector4.Multiply*
  nameWithType.vb: Vector4.Multiply(Vector4, Vector4, Vector4)
  fullName.vb: OpenTK.Mathematics.Vector4.Multiply(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4)
  name.vb: Multiply(Vector4, Vector4, Vector4)
- uid: OpenTK.Mathematics.Vector4.Divide(OpenTK.Mathematics.Vector4,System.Single)
  commentId: M:OpenTK.Mathematics.Vector4.Divide(OpenTK.Mathematics.Vector4,System.Single)
  id: Divide(OpenTK.Mathematics.Vector4,System.Single)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Divide(Vector4, float)
  nameWithType: Vector4.Divide(Vector4, float)
  fullName: OpenTK.Mathematics.Vector4.Divide(OpenTK.Mathematics.Vector4, float)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Divide
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 420
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Divides a vector by a scalar.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4 Divide(Vector4 vector, float scale)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector4
      description: Left operand.
    - id: scale
      type: System.Single
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector4
      description: Result of the operation.
    content.vb: >-
      <Pure>

      Public Shared Function Divide(vector As Vector4, scale As Single) As Vector4
  overload: OpenTK.Mathematics.Vector4.Divide*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4.Divide(Vector4, Single)
  fullName.vb: OpenTK.Mathematics.Vector4.Divide(OpenTK.Mathematics.Vector4, Single)
  name.vb: Divide(Vector4, Single)
- uid: OpenTK.Mathematics.Vector4.Divide(OpenTK.Mathematics.Vector4@,System.Single,OpenTK.Mathematics.Vector4@)
  commentId: M:OpenTK.Mathematics.Vector4.Divide(OpenTK.Mathematics.Vector4@,System.Single,OpenTK.Mathematics.Vector4@)
  id: Divide(OpenTK.Mathematics.Vector4@,System.Single,OpenTK.Mathematics.Vector4@)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Divide(in Vector4, float, out Vector4)
  nameWithType: Vector4.Divide(in Vector4, float, out Vector4)
  fullName: OpenTK.Mathematics.Vector4.Divide(in OpenTK.Mathematics.Vector4, float, out OpenTK.Mathematics.Vector4)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Divide
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 433
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Divides a vector by a scalar.
  example: []
  syntax:
    content: public static void Divide(in Vector4 vector, float scale, out Vector4 result)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector4
      description: Left operand.
    - id: scale
      type: System.Single
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector4
      description: Result of the operation.
    content.vb: Public Shared Sub Divide(vector As Vector4, scale As Single, result As Vector4)
  overload: OpenTK.Mathematics.Vector4.Divide*
  nameWithType.vb: Vector4.Divide(Vector4, Single, Vector4)
  fullName.vb: OpenTK.Mathematics.Vector4.Divide(OpenTK.Mathematics.Vector4, Single, OpenTK.Mathematics.Vector4)
  name.vb: Divide(Vector4, Single, Vector4)
- uid: OpenTK.Mathematics.Vector4.Divide(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  commentId: M:OpenTK.Mathematics.Vector4.Divide(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  id: Divide(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Divide(Vector4, Vector4)
  nameWithType: Vector4.Divide(Vector4, Vector4)
  fullName: OpenTK.Mathematics.Vector4.Divide(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Divide
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 447
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Divides a vector by the components of a vector (scale).
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4 Divide(Vector4 vector, Vector4 scale)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector4
      description: Left operand.
    - id: scale
      type: OpenTK.Mathematics.Vector4
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector4
      description: Result of the operation.
    content.vb: >-
      <Pure>

      Public Shared Function Divide(vector As Vector4, scale As Vector4) As Vector4
  overload: OpenTK.Mathematics.Vector4.Divide*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4.Divide(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  commentId: M:OpenTK.Mathematics.Vector4.Divide(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  id: Divide(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Divide(in Vector4, in Vector4, out Vector4)
  nameWithType: Vector4.Divide(in Vector4, in Vector4, out Vector4)
  fullName: OpenTK.Mathematics.Vector4.Divide(in OpenTK.Mathematics.Vector4, in OpenTK.Mathematics.Vector4, out OpenTK.Mathematics.Vector4)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Divide
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 460
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Divide a vector by the components of a vector (scale).
  example: []
  syntax:
    content: public static void Divide(in Vector4 vector, in Vector4 scale, out Vector4 result)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector4
      description: Left operand.
    - id: scale
      type: OpenTK.Mathematics.Vector4
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector4
      description: Result of the operation.
    content.vb: Public Shared Sub Divide(vector As Vector4, scale As Vector4, result As Vector4)
  overload: OpenTK.Mathematics.Vector4.Divide*
  nameWithType.vb: Vector4.Divide(Vector4, Vector4, Vector4)
  fullName.vb: OpenTK.Mathematics.Vector4.Divide(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4)
  name.vb: Divide(Vector4, Vector4, Vector4)
- uid: OpenTK.Mathematics.Vector4.ComponentMin(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  commentId: M:OpenTK.Mathematics.Vector4.ComponentMin(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  id: ComponentMin(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: ComponentMin(Vector4, Vector4)
  nameWithType: Vector4.ComponentMin(Vector4, Vector4)
  fullName: OpenTK.Mathematics.Vector4.ComponentMin(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: ComponentMin
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 474
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a vector created from the smallest of the corresponding components of the given vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4 ComponentMin(Vector4 a, Vector4 b)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector4
      description: Second operand.
    return:
      type: OpenTK.Mathematics.Vector4
      description: The component-wise minimum.
    content.vb: >-
      <Pure>

      Public Shared Function ComponentMin(a As Vector4, b As Vector4) As Vector4
  overload: OpenTK.Mathematics.Vector4.ComponentMin*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4.ComponentMin(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  commentId: M:OpenTK.Mathematics.Vector4.ComponentMin(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  id: ComponentMin(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: ComponentMin(in Vector4, in Vector4, out Vector4)
  nameWithType: Vector4.ComponentMin(in Vector4, in Vector4, out Vector4)
  fullName: OpenTK.Mathematics.Vector4.ComponentMin(in OpenTK.Mathematics.Vector4, in OpenTK.Mathematics.Vector4, out OpenTK.Mathematics.Vector4)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: ComponentMin
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 490
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a vector created from the smallest of the corresponding components of the given vectors.
  example: []
  syntax:
    content: public static void ComponentMin(in Vector4 a, in Vector4 b, out Vector4 result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector4
      description: Second operand.
    - id: result
      type: OpenTK.Mathematics.Vector4
      description: The component-wise minimum.
    content.vb: Public Shared Sub ComponentMin(a As Vector4, b As Vector4, result As Vector4)
  overload: OpenTK.Mathematics.Vector4.ComponentMin*
  nameWithType.vb: Vector4.ComponentMin(Vector4, Vector4, Vector4)
  fullName.vb: OpenTK.Mathematics.Vector4.ComponentMin(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4)
  name.vb: ComponentMin(Vector4, Vector4, Vector4)
- uid: OpenTK.Mathematics.Vector4.ComponentMax(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  commentId: M:OpenTK.Mathematics.Vector4.ComponentMax(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  id: ComponentMax(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: ComponentMax(Vector4, Vector4)
  nameWithType: Vector4.ComponentMax(Vector4, Vector4)
  fullName: OpenTK.Mathematics.Vector4.ComponentMax(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: ComponentMax
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 504
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a vector created from the largest of the corresponding components of the given vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4 ComponentMax(Vector4 a, Vector4 b)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector4
      description: Second operand.
    return:
      type: OpenTK.Mathematics.Vector4
      description: The component-wise maximum.
    content.vb: >-
      <Pure>

      Public Shared Function ComponentMax(a As Vector4, b As Vector4) As Vector4
  overload: OpenTK.Mathematics.Vector4.ComponentMax*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4.ComponentMax(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  commentId: M:OpenTK.Mathematics.Vector4.ComponentMax(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  id: ComponentMax(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: ComponentMax(in Vector4, in Vector4, out Vector4)
  nameWithType: Vector4.ComponentMax(in Vector4, in Vector4, out Vector4)
  fullName: OpenTK.Mathematics.Vector4.ComponentMax(in OpenTK.Mathematics.Vector4, in OpenTK.Mathematics.Vector4, out OpenTK.Mathematics.Vector4)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: ComponentMax
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 520
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a vector created from the largest of the corresponding components of the given vectors.
  example: []
  syntax:
    content: public static void ComponentMax(in Vector4 a, in Vector4 b, out Vector4 result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector4
      description: Second operand.
    - id: result
      type: OpenTK.Mathematics.Vector4
      description: The component-wise maximum.
    content.vb: Public Shared Sub ComponentMax(a As Vector4, b As Vector4, result As Vector4)
  overload: OpenTK.Mathematics.Vector4.ComponentMax*
  nameWithType.vb: Vector4.ComponentMax(Vector4, Vector4, Vector4)
  fullName.vb: OpenTK.Mathematics.Vector4.ComponentMax(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4)
  name.vb: ComponentMax(Vector4, Vector4, Vector4)
- uid: OpenTK.Mathematics.Vector4.MagnitudeMin(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  commentId: M:OpenTK.Mathematics.Vector4.MagnitudeMin(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  id: MagnitudeMin(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: MagnitudeMin(Vector4, Vector4)
  nameWithType: Vector4.MagnitudeMin(Vector4, Vector4)
  fullName: OpenTK.Mathematics.Vector4.MagnitudeMin(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: MagnitudeMin
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 535
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Returns the Vector4 with the minimum magnitude. If the magnitudes are equal, the second vector

    is selected.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4 MagnitudeMin(Vector4 left, Vector4 right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector4
      description: Left operand.
    - id: right
      type: OpenTK.Mathematics.Vector4
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector4
      description: The minimum Vector4.
    content.vb: >-
      <Pure>

      Public Shared Function MagnitudeMin(left As Vector4, right As Vector4) As Vector4
  overload: OpenTK.Mathematics.Vector4.MagnitudeMin*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4.MagnitudeMin(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  commentId: M:OpenTK.Mathematics.Vector4.MagnitudeMin(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  id: MagnitudeMin(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: MagnitudeMin(in Vector4, in Vector4, out Vector4)
  nameWithType: Vector4.MagnitudeMin(in Vector4, in Vector4, out Vector4)
  fullName: OpenTK.Mathematics.Vector4.MagnitudeMin(in OpenTK.Mathematics.Vector4, in OpenTK.Mathematics.Vector4, out OpenTK.Mathematics.Vector4)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: MagnitudeMin
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 548
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Returns the Vector4 with the minimum magnitude. If the magnitudes are equal, the second vector

    is selected.
  example: []
  syntax:
    content: public static void MagnitudeMin(in Vector4 left, in Vector4 right, out Vector4 result)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector4
      description: Left operand.
    - id: right
      type: OpenTK.Mathematics.Vector4
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector4
      description: The magnitude-wise minimum.
    content.vb: Public Shared Sub MagnitudeMin(left As Vector4, right As Vector4, result As Vector4)
  overload: OpenTK.Mathematics.Vector4.MagnitudeMin*
  nameWithType.vb: Vector4.MagnitudeMin(Vector4, Vector4, Vector4)
  fullName.vb: OpenTK.Mathematics.Vector4.MagnitudeMin(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4)
  name.vb: MagnitudeMin(Vector4, Vector4, Vector4)
- uid: OpenTK.Mathematics.Vector4.MagnitudeMax(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  commentId: M:OpenTK.Mathematics.Vector4.MagnitudeMax(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  id: MagnitudeMax(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: MagnitudeMax(Vector4, Vector4)
  nameWithType: Vector4.MagnitudeMax(Vector4, Vector4)
  fullName: OpenTK.Mathematics.Vector4.MagnitudeMax(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: MagnitudeMax
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 560
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Returns the Vector4 with the maximum magnitude. If the magnitudes are equal, the first vector

    is selected.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4 MagnitudeMax(Vector4 left, Vector4 right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector4
      description: Left operand.
    - id: right
      type: OpenTK.Mathematics.Vector4
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector4
      description: The maximum Vector4.
    content.vb: >-
      <Pure>

      Public Shared Function MagnitudeMax(left As Vector4, right As Vector4) As Vector4
  overload: OpenTK.Mathematics.Vector4.MagnitudeMax*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4.MagnitudeMax(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  commentId: M:OpenTK.Mathematics.Vector4.MagnitudeMax(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  id: MagnitudeMax(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: MagnitudeMax(in Vector4, in Vector4, out Vector4)
  nameWithType: Vector4.MagnitudeMax(in Vector4, in Vector4, out Vector4)
  fullName: OpenTK.Mathematics.Vector4.MagnitudeMax(in OpenTK.Mathematics.Vector4, in OpenTK.Mathematics.Vector4, out OpenTK.Mathematics.Vector4)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: MagnitudeMax
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 573
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Returns the Vector4 with the maximum magnitude. If the magnitudes are equal, the first vector

    is selected.
  example: []
  syntax:
    content: public static void MagnitudeMax(in Vector4 left, in Vector4 right, out Vector4 result)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector4
      description: Left operand.
    - id: right
      type: OpenTK.Mathematics.Vector4
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector4
      description: The magnitude-wise maximum.
    content.vb: Public Shared Sub MagnitudeMax(left As Vector4, right As Vector4, result As Vector4)
  overload: OpenTK.Mathematics.Vector4.MagnitudeMax*
  nameWithType.vb: Vector4.MagnitudeMax(Vector4, Vector4, Vector4)
  fullName.vb: OpenTK.Mathematics.Vector4.MagnitudeMax(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4)
  name.vb: MagnitudeMax(Vector4, Vector4, Vector4)
- uid: OpenTK.Mathematics.Vector4.Clamp(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  commentId: M:OpenTK.Mathematics.Vector4.Clamp(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  id: Clamp(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Clamp(Vector4, Vector4, Vector4)
  nameWithType: Vector4.Clamp(Vector4, Vector4, Vector4)
  fullName: OpenTK.Mathematics.Vector4.Clamp(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Clamp
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 585
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Clamp a vector to the given minimum and maximum vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4 Clamp(Vector4 vec, Vector4 min, Vector4 max)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4
      description: Input vector.
    - id: min
      type: OpenTK.Mathematics.Vector4
      description: Minimum vector.
    - id: max
      type: OpenTK.Mathematics.Vector4
      description: Maximum vector.
    return:
      type: OpenTK.Mathematics.Vector4
      description: The clamped vector.
    content.vb: >-
      <Pure>

      Public Shared Function Clamp(vec As Vector4, min As Vector4, max As Vector4) As Vector4
  overload: OpenTK.Mathematics.Vector4.Clamp*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4.Clamp(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  commentId: M:OpenTK.Mathematics.Vector4.Clamp(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  id: Clamp(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Clamp(in Vector4, in Vector4, in Vector4, out Vector4)
  nameWithType: Vector4.Clamp(in Vector4, in Vector4, in Vector4, out Vector4)
  fullName: OpenTK.Mathematics.Vector4.Clamp(in OpenTK.Mathematics.Vector4, in OpenTK.Mathematics.Vector4, in OpenTK.Mathematics.Vector4, out OpenTK.Mathematics.Vector4)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Clamp
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 602
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Clamp a vector to the given minimum and maximum vectors.
  example: []
  syntax:
    content: public static void Clamp(in Vector4 vec, in Vector4 min, in Vector4 max, out Vector4 result)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4
      description: Input vector.
    - id: min
      type: OpenTK.Mathematics.Vector4
      description: Minimum vector.
    - id: max
      type: OpenTK.Mathematics.Vector4
      description: Maximum vector.
    - id: result
      type: OpenTK.Mathematics.Vector4
      description: The clamped vector.
    content.vb: Public Shared Sub Clamp(vec As Vector4, min As Vector4, max As Vector4, result As Vector4)
  overload: OpenTK.Mathematics.Vector4.Clamp*
  nameWithType.vb: Vector4.Clamp(Vector4, Vector4, Vector4, Vector4)
  fullName.vb: OpenTK.Mathematics.Vector4.Clamp(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4)
  name.vb: Clamp(Vector4, Vector4, Vector4, Vector4)
- uid: OpenTK.Mathematics.Vector4.Normalize(OpenTK.Mathematics.Vector4)
  commentId: M:OpenTK.Mathematics.Vector4.Normalize(OpenTK.Mathematics.Vector4)
  id: Normalize(OpenTK.Mathematics.Vector4)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Normalize(Vector4)
  nameWithType: Vector4.Normalize(Vector4)
  fullName: OpenTK.Mathematics.Vector4.Normalize(OpenTK.Mathematics.Vector4)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Normalize
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 615
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Scale a vector to unit length.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4 Normalize(Vector4 vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4
      description: The input vector.
    return:
      type: OpenTK.Mathematics.Vector4
      description: The normalized copy.
    content.vb: >-
      <Pure>

      Public Shared Function Normalize(vec As Vector4) As Vector4
  overload: OpenTK.Mathematics.Vector4.Normalize*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4.Normalize(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  commentId: M:OpenTK.Mathematics.Vector4.Normalize(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  id: Normalize(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Normalize(in Vector4, out Vector4)
  nameWithType: Vector4.Normalize(in Vector4, out Vector4)
  fullName: OpenTK.Mathematics.Vector4.Normalize(in OpenTK.Mathematics.Vector4, out OpenTK.Mathematics.Vector4)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Normalize
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 631
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Scale a vector to unit length.
  example: []
  syntax:
    content: public static void Normalize(in Vector4 vec, out Vector4 result)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4
      description: The input vector.
    - id: result
      type: OpenTK.Mathematics.Vector4
      description: The normalized vector.
    content.vb: Public Shared Sub Normalize(vec As Vector4, result As Vector4)
  overload: OpenTK.Mathematics.Vector4.Normalize*
  nameWithType.vb: Vector4.Normalize(Vector4, Vector4)
  fullName.vb: OpenTK.Mathematics.Vector4.Normalize(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4)
  name.vb: Normalize(Vector4, Vector4)
- uid: OpenTK.Mathematics.Vector4.NormalizeFast(OpenTK.Mathematics.Vector4)
  commentId: M:OpenTK.Mathematics.Vector4.NormalizeFast(OpenTK.Mathematics.Vector4)
  id: NormalizeFast(OpenTK.Mathematics.Vector4)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: NormalizeFast(Vector4)
  nameWithType: Vector4.NormalizeFast(Vector4)
  fullName: OpenTK.Mathematics.Vector4.NormalizeFast(OpenTK.Mathematics.Vector4)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: NormalizeFast
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 645
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Scale a vector to approximately unit length.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4 NormalizeFast(Vector4 vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4
      description: The input vector.
    return:
      type: OpenTK.Mathematics.Vector4
      description: The normalized copy.
    content.vb: >-
      <Pure>

      Public Shared Function NormalizeFast(vec As Vector4) As Vector4
  overload: OpenTK.Mathematics.Vector4.NormalizeFast*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4.NormalizeFast(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  commentId: M:OpenTK.Mathematics.Vector4.NormalizeFast(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  id: NormalizeFast(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: NormalizeFast(in Vector4, out Vector4)
  nameWithType: Vector4.NormalizeFast(in Vector4, out Vector4)
  fullName: OpenTK.Mathematics.Vector4.NormalizeFast(in OpenTK.Mathematics.Vector4, out OpenTK.Mathematics.Vector4)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: NormalizeFast
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 661
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Scale a vector to approximately unit length.
  example: []
  syntax:
    content: public static void NormalizeFast(in Vector4 vec, out Vector4 result)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4
      description: The input vector.
    - id: result
      type: OpenTK.Mathematics.Vector4
      description: The normalized copy.
    content.vb: Public Shared Sub NormalizeFast(vec As Vector4, result As Vector4)
  overload: OpenTK.Mathematics.Vector4.NormalizeFast*
  nameWithType.vb: Vector4.NormalizeFast(Vector4, Vector4)
  fullName.vb: OpenTK.Mathematics.Vector4.NormalizeFast(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4)
  name.vb: NormalizeFast(Vector4, Vector4)
- uid: OpenTK.Mathematics.Vector4.Dot(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  commentId: M:OpenTK.Mathematics.Vector4.Dot(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  id: Dot(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Dot(Vector4, Vector4)
  nameWithType: Vector4.Dot(Vector4, Vector4)
  fullName: OpenTK.Mathematics.Vector4.Dot(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Dot
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 676
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Calculate the dot product of two vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static float Dot(Vector4 left, Vector4 right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector4
      description: First operand.
    - id: right
      type: OpenTK.Mathematics.Vector4
      description: Second operand.
    return:
      type: System.Single
      description: The dot product of the two inputs.
    content.vb: >-
      <Pure>

      Public Shared Function Dot(left As Vector4, right As Vector4) As Single
  overload: OpenTK.Mathematics.Vector4.Dot*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4.Dot(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,System.Single@)
  commentId: M:OpenTK.Mathematics.Vector4.Dot(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,System.Single@)
  id: Dot(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,System.Single@)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Dot(in Vector4, in Vector4, out float)
  nameWithType: Vector4.Dot(in Vector4, in Vector4, out float)
  fullName: OpenTK.Mathematics.Vector4.Dot(in OpenTK.Mathematics.Vector4, in OpenTK.Mathematics.Vector4, out float)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Dot
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 688
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Calculate the dot product of two vectors.
  example: []
  syntax:
    content: public static void Dot(in Vector4 left, in Vector4 right, out float result)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector4
      description: First operand.
    - id: right
      type: OpenTK.Mathematics.Vector4
      description: Second operand.
    - id: result
      type: System.Single
      description: The dot product of the two inputs.
    content.vb: Public Shared Sub Dot(left As Vector4, right As Vector4, result As Single)
  overload: OpenTK.Mathematics.Vector4.Dot*
  nameWithType.vb: Vector4.Dot(Vector4, Vector4, Single)
  fullName.vb: OpenTK.Mathematics.Vector4.Dot(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4, Single)
  name.vb: Dot(Vector4, Vector4, Single)
- uid: OpenTK.Mathematics.Vector4.Lerp(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4,System.Single)
  commentId: M:OpenTK.Mathematics.Vector4.Lerp(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4,System.Single)
  id: Lerp(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4,System.Single)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Lerp(Vector4, Vector4, float)
  nameWithType: Vector4.Lerp(Vector4, Vector4, float)
  fullName: OpenTK.Mathematics.Vector4.Lerp(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4, float)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Lerp
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 700
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a new vector that is the linear blend of the 2 given vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4 Lerp(Vector4 a, Vector4 b, float blend)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4
      description: First input vector.
    - id: b
      type: OpenTK.Mathematics.Vector4
      description: Second input vector.
    - id: blend
      type: System.Single
      description: The blend factor.
    return:
      type: OpenTK.Mathematics.Vector4
      description: a when blend=0, b when blend=1, and a linear combination otherwise.
    content.vb: >-
      <Pure>

      Public Shared Function Lerp(a As Vector4, b As Vector4, blend As Single) As Vector4
  overload: OpenTK.Mathematics.Vector4.Lerp*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4.Lerp(Vector4, Vector4, Single)
  fullName.vb: OpenTK.Mathematics.Vector4.Lerp(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4, Single)
  name.vb: Lerp(Vector4, Vector4, Single)
- uid: OpenTK.Mathematics.Vector4.Lerp(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,System.Single,OpenTK.Mathematics.Vector4@)
  commentId: M:OpenTK.Mathematics.Vector4.Lerp(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,System.Single,OpenTK.Mathematics.Vector4@)
  id: Lerp(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,System.Single,OpenTK.Mathematics.Vector4@)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Lerp(in Vector4, in Vector4, float, out Vector4)
  nameWithType: Vector4.Lerp(in Vector4, in Vector4, float, out Vector4)
  fullName: OpenTK.Mathematics.Vector4.Lerp(in OpenTK.Mathematics.Vector4, in OpenTK.Mathematics.Vector4, float, out OpenTK.Mathematics.Vector4)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Lerp
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 717
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a new vector that is the linear blend of the 2 given vectors.
  example: []
  syntax:
    content: public static void Lerp(in Vector4 a, in Vector4 b, float blend, out Vector4 result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4
      description: First input vector.
    - id: b
      type: OpenTK.Mathematics.Vector4
      description: Second input vector.
    - id: blend
      type: System.Single
      description: The blend factor.
    - id: result
      type: OpenTK.Mathematics.Vector4
      description: a when blend=0, b when blend=1, and a linear combination otherwise.
    content.vb: Public Shared Sub Lerp(a As Vector4, b As Vector4, blend As Single, result As Vector4)
  overload: OpenTK.Mathematics.Vector4.Lerp*
  nameWithType.vb: Vector4.Lerp(Vector4, Vector4, Single, Vector4)
  fullName.vb: OpenTK.Mathematics.Vector4.Lerp(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4, Single, OpenTK.Mathematics.Vector4)
  name.vb: Lerp(Vector4, Vector4, Single, Vector4)
- uid: OpenTK.Mathematics.Vector4.Lerp(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  commentId: M:OpenTK.Mathematics.Vector4.Lerp(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  id: Lerp(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Lerp(Vector4, Vector4, Vector4)
  nameWithType: Vector4.Lerp(Vector4, Vector4, Vector4)
  fullName: OpenTK.Mathematics.Vector4.Lerp(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Lerp
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 732
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a new vector that is the component-wise linear blend of the 2 given vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4 Lerp(Vector4 a, Vector4 b, Vector4 blend)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4
      description: First input vector.
    - id: b
      type: OpenTK.Mathematics.Vector4
      description: Second input vector.
    - id: blend
      type: OpenTK.Mathematics.Vector4
      description: The blend factor.
    return:
      type: OpenTK.Mathematics.Vector4
      description: a when blend=0, b when blend=1, and a component-wise linear combination otherwise.
    content.vb: >-
      <Pure>

      Public Shared Function Lerp(a As Vector4, b As Vector4, blend As Vector4) As Vector4
  overload: OpenTK.Mathematics.Vector4.Lerp*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4.Lerp(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4@)
  commentId: M:OpenTK.Mathematics.Vector4.Lerp(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4@)
  id: Lerp(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4@)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Lerp(in Vector4, in Vector4, Vector4, out Vector4)
  nameWithType: Vector4.Lerp(in Vector4, in Vector4, Vector4, out Vector4)
  fullName: OpenTK.Mathematics.Vector4.Lerp(in OpenTK.Mathematics.Vector4, in OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4, out OpenTK.Mathematics.Vector4)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Lerp
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 749
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a new vector that is the component-wise linear blend of the 2 given vectors.
  example: []
  syntax:
    content: public static void Lerp(in Vector4 a, in Vector4 b, Vector4 blend, out Vector4 result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4
      description: First input vector.
    - id: b
      type: OpenTK.Mathematics.Vector4
      description: Second input vector.
    - id: blend
      type: OpenTK.Mathematics.Vector4
      description: The blend factor.
    - id: result
      type: OpenTK.Mathematics.Vector4
      description: a when blend=0, b when blend=1, and a component-wise linear combination otherwise.
    content.vb: Public Shared Sub Lerp(a As Vector4, b As Vector4, blend As Vector4, result As Vector4)
  overload: OpenTK.Mathematics.Vector4.Lerp*
  nameWithType.vb: Vector4.Lerp(Vector4, Vector4, Vector4, Vector4)
  fullName.vb: OpenTK.Mathematics.Vector4.Lerp(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4)
  name.vb: Lerp(Vector4, Vector4, Vector4, Vector4)
- uid: OpenTK.Mathematics.Vector4.BaryCentric(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4,System.Single,System.Single)
  commentId: M:OpenTK.Mathematics.Vector4.BaryCentric(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4,System.Single,System.Single)
  id: BaryCentric(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4,System.Single,System.Single)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: BaryCentric(Vector4, Vector4, Vector4, float, float)
  nameWithType: Vector4.BaryCentric(Vector4, Vector4, Vector4, float, float)
  fullName: OpenTK.Mathematics.Vector4.BaryCentric(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4, float, float)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: BaryCentric
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 766
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Interpolate 3 Vectors using Barycentric coordinates.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4 BaryCentric(Vector4 a, Vector4 b, Vector4 c, float u, float v)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4
      description: First input Vector.
    - id: b
      type: OpenTK.Mathematics.Vector4
      description: Second input Vector.
    - id: c
      type: OpenTK.Mathematics.Vector4
      description: Third input Vector.
    - id: u
      type: System.Single
      description: First Barycentric Coordinate.
    - id: v
      type: System.Single
      description: Second Barycentric Coordinate.
    return:
      type: OpenTK.Mathematics.Vector4
      description: a when u=v=0, b when u=1,v=0, c when u=0,v=1, and a linear combination of a,b,c otherwise.
    content.vb: >-
      <Pure>

      Public Shared Function BaryCentric(a As Vector4, b As Vector4, c As Vector4, u As Single, v As Single) As Vector4
  overload: OpenTK.Mathematics.Vector4.BaryCentric*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4.BaryCentric(Vector4, Vector4, Vector4, Single, Single)
  fullName.vb: OpenTK.Mathematics.Vector4.BaryCentric(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4, Single, Single)
  name.vb: BaryCentric(Vector4, Vector4, Vector4, Single, Single)
- uid: OpenTK.Mathematics.Vector4.BaryCentric(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,System.Single,System.Single,OpenTK.Mathematics.Vector4@)
  commentId: M:OpenTK.Mathematics.Vector4.BaryCentric(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,System.Single,System.Single,OpenTK.Mathematics.Vector4@)
  id: BaryCentric(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@,System.Single,System.Single,OpenTK.Mathematics.Vector4@)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: BaryCentric(in Vector4, in Vector4, in Vector4, float, float, out Vector4)
  nameWithType: Vector4.BaryCentric(in Vector4, in Vector4, in Vector4, float, float, out Vector4)
  fullName: OpenTK.Mathematics.Vector4.BaryCentric(in OpenTK.Mathematics.Vector4, in OpenTK.Mathematics.Vector4, in OpenTK.Mathematics.Vector4, float, float, out OpenTK.Mathematics.Vector4)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: BaryCentric
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 785
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Interpolate 3 Vectors using Barycentric coordinates.
  example: []
  syntax:
    content: public static void BaryCentric(in Vector4 a, in Vector4 b, in Vector4 c, float u, float v, out Vector4 result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4
      description: First input Vector.
    - id: b
      type: OpenTK.Mathematics.Vector4
      description: Second input Vector.
    - id: c
      type: OpenTK.Mathematics.Vector4
      description: Third input Vector.
    - id: u
      type: System.Single
      description: First Barycentric Coordinate.
    - id: v
      type: System.Single
      description: Second Barycentric Coordinate.
    - id: result
      type: OpenTK.Mathematics.Vector4
      description: >-
        Output Vector. a when u=v=0, b when u=1,v=0, c when u=0,v=1, and a linear combination of a,b,c

        otherwise.
    content.vb: Public Shared Sub BaryCentric(a As Vector4, b As Vector4, c As Vector4, u As Single, v As Single, result As Vector4)
  overload: OpenTK.Mathematics.Vector4.BaryCentric*
  nameWithType.vb: Vector4.BaryCentric(Vector4, Vector4, Vector4, Single, Single, Vector4)
  fullName.vb: OpenTK.Mathematics.Vector4.BaryCentric(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4, Single, Single, OpenTK.Mathematics.Vector4)
  name.vb: BaryCentric(Vector4, Vector4, Vector4, Single, Single, Vector4)
- uid: OpenTK.Mathematics.Vector4.TransformRow(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Matrix4)
  commentId: M:OpenTK.Mathematics.Vector4.TransformRow(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Matrix4)
  id: TransformRow(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Matrix4)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: TransformRow(Vector4, Matrix4)
  nameWithType: Vector4.TransformRow(Vector4, Matrix4)
  fullName: OpenTK.Mathematics.Vector4.TransformRow(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Matrix4)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: TransformRow
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 810
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Vector by the given Matrix.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4 TransformRow(Vector4 vec, Matrix4 mat)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4
      description: The vector to transform.
    - id: mat
      type: OpenTK.Mathematics.Matrix4
      description: The desired transformation.
    return:
      type: OpenTK.Mathematics.Vector4
      description: The transformed vector.
    content.vb: >-
      <Pure>

      Public Shared Function TransformRow(vec As Vector4, mat As Matrix4) As Vector4
  overload: OpenTK.Mathematics.Vector4.TransformRow*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4.TransformRow(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Matrix4@,OpenTK.Mathematics.Vector4@)
  commentId: M:OpenTK.Mathematics.Vector4.TransformRow(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Matrix4@,OpenTK.Mathematics.Vector4@)
  id: TransformRow(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Matrix4@,OpenTK.Mathematics.Vector4@)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: TransformRow(in Vector4, in Matrix4, out Vector4)
  nameWithType: Vector4.TransformRow(in Vector4, in Matrix4, out Vector4)
  fullName: OpenTK.Mathematics.Vector4.TransformRow(in OpenTK.Mathematics.Vector4, in OpenTK.Mathematics.Matrix4, out OpenTK.Mathematics.Vector4)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: TransformRow
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 823
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Vector by the given Matrix.
  example: []
  syntax:
    content: public static void TransformRow(in Vector4 vec, in Matrix4 mat, out Vector4 result)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4
      description: The vector to transform.
    - id: mat
      type: OpenTK.Mathematics.Matrix4
      description: The desired transformation.
    - id: result
      type: OpenTK.Mathematics.Vector4
      description: The transformed vector.
    content.vb: Public Shared Sub TransformRow(vec As Vector4, mat As Matrix4, result As Vector4)
  overload: OpenTK.Mathematics.Vector4.TransformRow*
  nameWithType.vb: Vector4.TransformRow(Vector4, Matrix4, Vector4)
  fullName.vb: OpenTK.Mathematics.Vector4.TransformRow(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Matrix4, OpenTK.Mathematics.Vector4)
  name.vb: TransformRow(Vector4, Matrix4, Vector4)
- uid: OpenTK.Mathematics.Vector4.Transform(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Quaternion)
  commentId: M:OpenTK.Mathematics.Vector4.Transform(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Quaternion)
  id: Transform(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Quaternion)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Transform(Vector4, Quaternion)
  nameWithType: Vector4.Transform(Vector4, Quaternion)
  fullName: OpenTK.Mathematics.Vector4.Transform(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Quaternion)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Transform
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 838
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transforms a vector by a quaternion rotation.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4 Transform(Vector4 vec, Quaternion quat)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4
      description: The vector to transform.
    - id: quat
      type: OpenTK.Mathematics.Quaternion
      description: The quaternion to rotate the vector by.
    return:
      type: OpenTK.Mathematics.Vector4
      description: The result of the operation.
    content.vb: >-
      <Pure>

      Public Shared Function Transform(vec As Vector4, quat As Quaternion) As Vector4
  overload: OpenTK.Mathematics.Vector4.Transform*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4.Transform(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Vector4@)
  commentId: M:OpenTK.Mathematics.Vector4.Transform(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Vector4@)
  id: Transform(OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Vector4@)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Transform(in Vector4, in Quaternion, out Vector4)
  nameWithType: Vector4.Transform(in Vector4, in Quaternion, out Vector4)
  fullName: OpenTK.Mathematics.Vector4.Transform(in OpenTK.Mathematics.Vector4, in OpenTK.Mathematics.Quaternion, out OpenTK.Mathematics.Vector4)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Transform
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 851
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transforms a vector by a quaternion rotation.
  example: []
  syntax:
    content: public static void Transform(in Vector4 vec, in Quaternion quat, out Vector4 result)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4
      description: The vector to transform.
    - id: quat
      type: OpenTK.Mathematics.Quaternion
      description: The quaternion to rotate the vector by.
    - id: result
      type: OpenTK.Mathematics.Vector4
      description: The result of the operation.
    content.vb: Public Shared Sub Transform(vec As Vector4, quat As Quaternion, result As Vector4)
  overload: OpenTK.Mathematics.Vector4.Transform*
  nameWithType.vb: Vector4.Transform(Vector4, Quaternion, Vector4)
  fullName.vb: OpenTK.Mathematics.Vector4.Transform(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Quaternion, OpenTK.Mathematics.Vector4)
  name.vb: Transform(Vector4, Quaternion, Vector4)
- uid: OpenTK.Mathematics.Vector4.TransformColumn(OpenTK.Mathematics.Matrix4,OpenTK.Mathematics.Vector4)
  commentId: M:OpenTK.Mathematics.Vector4.TransformColumn(OpenTK.Mathematics.Matrix4,OpenTK.Mathematics.Vector4)
  id: TransformColumn(OpenTK.Mathematics.Matrix4,OpenTK.Mathematics.Vector4)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: TransformColumn(Matrix4, Vector4)
  nameWithType: Vector4.TransformColumn(Matrix4, Vector4)
  fullName: OpenTK.Mathematics.Vector4.TransformColumn(OpenTK.Mathematics.Matrix4, OpenTK.Mathematics.Vector4)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: TransformColumn
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 870
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Vector by the given Matrix using right-handed notation.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4 TransformColumn(Matrix4 mat, Vector4 vec)
    parameters:
    - id: mat
      type: OpenTK.Mathematics.Matrix4
      description: The desired transformation.
    - id: vec
      type: OpenTK.Mathematics.Vector4
      description: The vector to transform.
    return:
      type: OpenTK.Mathematics.Vector4
      description: The transformed vector.
    content.vb: >-
      <Pure>

      Public Shared Function TransformColumn(mat As Matrix4, vec As Vector4) As Vector4
  overload: OpenTK.Mathematics.Vector4.TransformColumn*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4.TransformColumn(OpenTK.Mathematics.Matrix4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  commentId: M:OpenTK.Mathematics.Vector4.TransformColumn(OpenTK.Mathematics.Matrix4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  id: TransformColumn(OpenTK.Mathematics.Matrix4@,OpenTK.Mathematics.Vector4@,OpenTK.Mathematics.Vector4@)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: TransformColumn(in Matrix4, in Vector4, out Vector4)
  nameWithType: Vector4.TransformColumn(in Matrix4, in Vector4, out Vector4)
  fullName: OpenTK.Mathematics.Vector4.TransformColumn(in OpenTK.Mathematics.Matrix4, in OpenTK.Mathematics.Vector4, out OpenTK.Mathematics.Vector4)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: TransformColumn
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 883
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Vector by the given Matrix using right-handed notation.
  example: []
  syntax:
    content: public static void TransformColumn(in Matrix4 mat, in Vector4 vec, out Vector4 result)
    parameters:
    - id: mat
      type: OpenTK.Mathematics.Matrix4
      description: The desired transformation.
    - id: vec
      type: OpenTK.Mathematics.Vector4
      description: The vector to transform.
    - id: result
      type: OpenTK.Mathematics.Vector4
      description: The transformed vector.
    content.vb: Public Shared Sub TransformColumn(mat As Matrix4, vec As Vector4, result As Vector4)
  overload: OpenTK.Mathematics.Vector4.TransformColumn*
  nameWithType.vb: Vector4.TransformColumn(Matrix4, Vector4, Vector4)
  fullName.vb: OpenTK.Mathematics.Vector4.TransformColumn(OpenTK.Mathematics.Matrix4, OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4)
  name.vb: TransformColumn(Matrix4, Vector4, Vector4)
- uid: OpenTK.Mathematics.Vector4.Xy
  commentId: P:OpenTK.Mathematics.Vector4.Xy
  id: Xy
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Xy
  nameWithType: Vector4.Xy
  fullName: OpenTK.Mathematics.Vector4.Xy
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Xy
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 895
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector2 with the X and Y components of this instance.
  example: []
  syntax:
    content: public Vector2 Xy { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2
    content.vb: Public Property Xy As Vector2
  overload: OpenTK.Mathematics.Vector4.Xy*
- uid: OpenTK.Mathematics.Vector4.Xz
  commentId: P:OpenTK.Mathematics.Vector4.Xz
  id: Xz
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Xz
  nameWithType: Vector4.Xz
  fullName: OpenTK.Mathematics.Vector4.Xz
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Xz
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 909
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector2 with the X and Z components of this instance.
  example: []
  syntax:
    content: public Vector2 Xz { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2
    content.vb: Public Property Xz As Vector2
  overload: OpenTK.Mathematics.Vector4.Xz*
- uid: OpenTK.Mathematics.Vector4.Xw
  commentId: P:OpenTK.Mathematics.Vector4.Xw
  id: Xw
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Xw
  nameWithType: Vector4.Xw
  fullName: OpenTK.Mathematics.Vector4.Xw
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Xw
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 923
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector2 with the X and W components of this instance.
  example: []
  syntax:
    content: public Vector2 Xw { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2
    content.vb: Public Property Xw As Vector2
  overload: OpenTK.Mathematics.Vector4.Xw*
- uid: OpenTK.Mathematics.Vector4.Yx
  commentId: P:OpenTK.Mathematics.Vector4.Yx
  id: Yx
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Yx
  nameWithType: Vector4.Yx
  fullName: OpenTK.Mathematics.Vector4.Yx
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Yx
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 937
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector2 with the Y and X components of this instance.
  example: []
  syntax:
    content: public Vector2 Yx { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2
    content.vb: Public Property Yx As Vector2
  overload: OpenTK.Mathematics.Vector4.Yx*
- uid: OpenTK.Mathematics.Vector4.Yz
  commentId: P:OpenTK.Mathematics.Vector4.Yz
  id: Yz
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Yz
  nameWithType: Vector4.Yz
  fullName: OpenTK.Mathematics.Vector4.Yz
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Yz
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 951
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector2 with the Y and Z components of this instance.
  example: []
  syntax:
    content: public Vector2 Yz { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2
    content.vb: Public Property Yz As Vector2
  overload: OpenTK.Mathematics.Vector4.Yz*
- uid: OpenTK.Mathematics.Vector4.Yw
  commentId: P:OpenTK.Mathematics.Vector4.Yw
  id: Yw
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Yw
  nameWithType: Vector4.Yw
  fullName: OpenTK.Mathematics.Vector4.Yw
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Yw
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 965
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector2 with the Y and W components of this instance.
  example: []
  syntax:
    content: public Vector2 Yw { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2
    content.vb: Public Property Yw As Vector2
  overload: OpenTK.Mathematics.Vector4.Yw*
- uid: OpenTK.Mathematics.Vector4.Zx
  commentId: P:OpenTK.Mathematics.Vector4.Zx
  id: Zx
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Zx
  nameWithType: Vector4.Zx
  fullName: OpenTK.Mathematics.Vector4.Zx
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Zx
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 979
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector2 with the Z and X components of this instance.
  example: []
  syntax:
    content: public Vector2 Zx { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2
    content.vb: Public Property Zx As Vector2
  overload: OpenTK.Mathematics.Vector4.Zx*
- uid: OpenTK.Mathematics.Vector4.Zy
  commentId: P:OpenTK.Mathematics.Vector4.Zy
  id: Zy
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Zy
  nameWithType: Vector4.Zy
  fullName: OpenTK.Mathematics.Vector4.Zy
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Zy
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 993
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector2 with the Z and Y components of this instance.
  example: []
  syntax:
    content: public Vector2 Zy { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2
    content.vb: Public Property Zy As Vector2
  overload: OpenTK.Mathematics.Vector4.Zy*
- uid: OpenTK.Mathematics.Vector4.Zw
  commentId: P:OpenTK.Mathematics.Vector4.Zw
  id: Zw
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Zw
  nameWithType: Vector4.Zw
  fullName: OpenTK.Mathematics.Vector4.Zw
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Zw
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1007
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector2 with the Z and W components of this instance.
  example: []
  syntax:
    content: public Vector2 Zw { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2
    content.vb: Public Property Zw As Vector2
  overload: OpenTK.Mathematics.Vector4.Zw*
- uid: OpenTK.Mathematics.Vector4.Wx
  commentId: P:OpenTK.Mathematics.Vector4.Wx
  id: Wx
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Wx
  nameWithType: Vector4.Wx
  fullName: OpenTK.Mathematics.Vector4.Wx
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Wx
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1021
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector2 with the W and X components of this instance.
  example: []
  syntax:
    content: public Vector2 Wx { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2
    content.vb: Public Property Wx As Vector2
  overload: OpenTK.Mathematics.Vector4.Wx*
- uid: OpenTK.Mathematics.Vector4.Wy
  commentId: P:OpenTK.Mathematics.Vector4.Wy
  id: Wy
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Wy
  nameWithType: Vector4.Wy
  fullName: OpenTK.Mathematics.Vector4.Wy
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Wy
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1035
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector2 with the W and Y components of this instance.
  example: []
  syntax:
    content: public Vector2 Wy { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2
    content.vb: Public Property Wy As Vector2
  overload: OpenTK.Mathematics.Vector4.Wy*
- uid: OpenTK.Mathematics.Vector4.Wz
  commentId: P:OpenTK.Mathematics.Vector4.Wz
  id: Wz
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Wz
  nameWithType: Vector4.Wz
  fullName: OpenTK.Mathematics.Vector4.Wz
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Wz
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1049
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector2 with the W and Z components of this instance.
  example: []
  syntax:
    content: public Vector2 Wz { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2
    content.vb: Public Property Wz As Vector2
  overload: OpenTK.Mathematics.Vector4.Wz*
- uid: OpenTK.Mathematics.Vector4.Xyz
  commentId: P:OpenTK.Mathematics.Vector4.Xyz
  id: Xyz
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Xyz
  nameWithType: Vector4.Xyz
  fullName: OpenTK.Mathematics.Vector4.Xyz
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Xyz
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1063
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3 with the X, Y, and Z components of this instance.
  example: []
  syntax:
    content: public Vector3 Xyz { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3
    content.vb: Public Property Xyz As Vector3
  overload: OpenTK.Mathematics.Vector4.Xyz*
- uid: OpenTK.Mathematics.Vector4.Xyw
  commentId: P:OpenTK.Mathematics.Vector4.Xyw
  id: Xyw
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Xyw
  nameWithType: Vector4.Xyw
  fullName: OpenTK.Mathematics.Vector4.Xyw
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Xyw
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1078
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3 with the X, Y, and Z components of this instance.
  example: []
  syntax:
    content: public Vector3 Xyw { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3
    content.vb: Public Property Xyw As Vector3
  overload: OpenTK.Mathematics.Vector4.Xyw*
- uid: OpenTK.Mathematics.Vector4.Xzy
  commentId: P:OpenTK.Mathematics.Vector4.Xzy
  id: Xzy
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Xzy
  nameWithType: Vector4.Xzy
  fullName: OpenTK.Mathematics.Vector4.Xzy
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Xzy
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1093
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3 with the X, Z, and Y components of this instance.
  example: []
  syntax:
    content: public Vector3 Xzy { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3
    content.vb: Public Property Xzy As Vector3
  overload: OpenTK.Mathematics.Vector4.Xzy*
- uid: OpenTK.Mathematics.Vector4.Xzw
  commentId: P:OpenTK.Mathematics.Vector4.Xzw
  id: Xzw
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Xzw
  nameWithType: Vector4.Xzw
  fullName: OpenTK.Mathematics.Vector4.Xzw
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Xzw
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1108
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3 with the X, Z, and W components of this instance.
  example: []
  syntax:
    content: public Vector3 Xzw { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3
    content.vb: Public Property Xzw As Vector3
  overload: OpenTK.Mathematics.Vector4.Xzw*
- uid: OpenTK.Mathematics.Vector4.Xwy
  commentId: P:OpenTK.Mathematics.Vector4.Xwy
  id: Xwy
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Xwy
  nameWithType: Vector4.Xwy
  fullName: OpenTK.Mathematics.Vector4.Xwy
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Xwy
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1123
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3 with the X, W, and Y components of this instance.
  example: []
  syntax:
    content: public Vector3 Xwy { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3
    content.vb: Public Property Xwy As Vector3
  overload: OpenTK.Mathematics.Vector4.Xwy*
- uid: OpenTK.Mathematics.Vector4.Xwz
  commentId: P:OpenTK.Mathematics.Vector4.Xwz
  id: Xwz
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Xwz
  nameWithType: Vector4.Xwz
  fullName: OpenTK.Mathematics.Vector4.Xwz
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Xwz
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1138
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3 with the X, W, and Z components of this instance.
  example: []
  syntax:
    content: public Vector3 Xwz { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3
    content.vb: Public Property Xwz As Vector3
  overload: OpenTK.Mathematics.Vector4.Xwz*
- uid: OpenTK.Mathematics.Vector4.Yxz
  commentId: P:OpenTK.Mathematics.Vector4.Yxz
  id: Yxz
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Yxz
  nameWithType: Vector4.Yxz
  fullName: OpenTK.Mathematics.Vector4.Yxz
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Yxz
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1153
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3 with the Y, X, and Z components of this instance.
  example: []
  syntax:
    content: public Vector3 Yxz { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3
    content.vb: Public Property Yxz As Vector3
  overload: OpenTK.Mathematics.Vector4.Yxz*
- uid: OpenTK.Mathematics.Vector4.Yxw
  commentId: P:OpenTK.Mathematics.Vector4.Yxw
  id: Yxw
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Yxw
  nameWithType: Vector4.Yxw
  fullName: OpenTK.Mathematics.Vector4.Yxw
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Yxw
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1168
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3 with the Y, X, and W components of this instance.
  example: []
  syntax:
    content: public Vector3 Yxw { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3
    content.vb: Public Property Yxw As Vector3
  overload: OpenTK.Mathematics.Vector4.Yxw*
- uid: OpenTK.Mathematics.Vector4.Yzx
  commentId: P:OpenTK.Mathematics.Vector4.Yzx
  id: Yzx
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Yzx
  nameWithType: Vector4.Yzx
  fullName: OpenTK.Mathematics.Vector4.Yzx
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Yzx
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1183
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3 with the Y, Z, and X components of this instance.
  example: []
  syntax:
    content: public Vector3 Yzx { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3
    content.vb: Public Property Yzx As Vector3
  overload: OpenTK.Mathematics.Vector4.Yzx*
- uid: OpenTK.Mathematics.Vector4.Yzw
  commentId: P:OpenTK.Mathematics.Vector4.Yzw
  id: Yzw
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Yzw
  nameWithType: Vector4.Yzw
  fullName: OpenTK.Mathematics.Vector4.Yzw
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Yzw
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1198
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3 with the Y, Z, and W components of this instance.
  example: []
  syntax:
    content: public Vector3 Yzw { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3
    content.vb: Public Property Yzw As Vector3
  overload: OpenTK.Mathematics.Vector4.Yzw*
- uid: OpenTK.Mathematics.Vector4.Ywx
  commentId: P:OpenTK.Mathematics.Vector4.Ywx
  id: Ywx
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Ywx
  nameWithType: Vector4.Ywx
  fullName: OpenTK.Mathematics.Vector4.Ywx
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Ywx
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1213
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3 with the Y, W, and X components of this instance.
  example: []
  syntax:
    content: public Vector3 Ywx { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3
    content.vb: Public Property Ywx As Vector3
  overload: OpenTK.Mathematics.Vector4.Ywx*
- uid: OpenTK.Mathematics.Vector4.Ywz
  commentId: P:OpenTK.Mathematics.Vector4.Ywz
  id: Ywz
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Ywz
  nameWithType: Vector4.Ywz
  fullName: OpenTK.Mathematics.Vector4.Ywz
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Ywz
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1228
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3 with the Y, W, and Z components of this instance.
  example: []
  syntax:
    content: public Vector3 Ywz { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3
    content.vb: Public Property Ywz As Vector3
  overload: OpenTK.Mathematics.Vector4.Ywz*
- uid: OpenTK.Mathematics.Vector4.Zxy
  commentId: P:OpenTK.Mathematics.Vector4.Zxy
  id: Zxy
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Zxy
  nameWithType: Vector4.Zxy
  fullName: OpenTK.Mathematics.Vector4.Zxy
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Zxy
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1243
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3 with the Z, X, and Y components of this instance.
  example: []
  syntax:
    content: public Vector3 Zxy { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3
    content.vb: Public Property Zxy As Vector3
  overload: OpenTK.Mathematics.Vector4.Zxy*
- uid: OpenTK.Mathematics.Vector4.Zxw
  commentId: P:OpenTK.Mathematics.Vector4.Zxw
  id: Zxw
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Zxw
  nameWithType: Vector4.Zxw
  fullName: OpenTK.Mathematics.Vector4.Zxw
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Zxw
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1258
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3 with the Z, X, and W components of this instance.
  example: []
  syntax:
    content: public Vector3 Zxw { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3
    content.vb: Public Property Zxw As Vector3
  overload: OpenTK.Mathematics.Vector4.Zxw*
- uid: OpenTK.Mathematics.Vector4.Zyx
  commentId: P:OpenTK.Mathematics.Vector4.Zyx
  id: Zyx
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Zyx
  nameWithType: Vector4.Zyx
  fullName: OpenTK.Mathematics.Vector4.Zyx
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Zyx
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1273
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3 with the Z, Y, and X components of this instance.
  example: []
  syntax:
    content: public Vector3 Zyx { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3
    content.vb: Public Property Zyx As Vector3
  overload: OpenTK.Mathematics.Vector4.Zyx*
- uid: OpenTK.Mathematics.Vector4.Zyw
  commentId: P:OpenTK.Mathematics.Vector4.Zyw
  id: Zyw
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Zyw
  nameWithType: Vector4.Zyw
  fullName: OpenTK.Mathematics.Vector4.Zyw
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Zyw
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1288
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3 with the Z, Y, and W components of this instance.
  example: []
  syntax:
    content: public Vector3 Zyw { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3
    content.vb: Public Property Zyw As Vector3
  overload: OpenTK.Mathematics.Vector4.Zyw*
- uid: OpenTK.Mathematics.Vector4.Zwx
  commentId: P:OpenTK.Mathematics.Vector4.Zwx
  id: Zwx
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Zwx
  nameWithType: Vector4.Zwx
  fullName: OpenTK.Mathematics.Vector4.Zwx
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Zwx
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1303
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3 with the Z, W, and X components of this instance.
  example: []
  syntax:
    content: public Vector3 Zwx { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3
    content.vb: Public Property Zwx As Vector3
  overload: OpenTK.Mathematics.Vector4.Zwx*
- uid: OpenTK.Mathematics.Vector4.Zwy
  commentId: P:OpenTK.Mathematics.Vector4.Zwy
  id: Zwy
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Zwy
  nameWithType: Vector4.Zwy
  fullName: OpenTK.Mathematics.Vector4.Zwy
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Zwy
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1318
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3 with the Z, W, and Y components of this instance.
  example: []
  syntax:
    content: public Vector3 Zwy { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3
    content.vb: Public Property Zwy As Vector3
  overload: OpenTK.Mathematics.Vector4.Zwy*
- uid: OpenTK.Mathematics.Vector4.Wxy
  commentId: P:OpenTK.Mathematics.Vector4.Wxy
  id: Wxy
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Wxy
  nameWithType: Vector4.Wxy
  fullName: OpenTK.Mathematics.Vector4.Wxy
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Wxy
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1333
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3 with the W, X, and Y components of this instance.
  example: []
  syntax:
    content: public Vector3 Wxy { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3
    content.vb: Public Property Wxy As Vector3
  overload: OpenTK.Mathematics.Vector4.Wxy*
- uid: OpenTK.Mathematics.Vector4.Wxz
  commentId: P:OpenTK.Mathematics.Vector4.Wxz
  id: Wxz
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Wxz
  nameWithType: Vector4.Wxz
  fullName: OpenTK.Mathematics.Vector4.Wxz
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Wxz
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1348
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3 with the W, X, and Z components of this instance.
  example: []
  syntax:
    content: public Vector3 Wxz { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3
    content.vb: Public Property Wxz As Vector3
  overload: OpenTK.Mathematics.Vector4.Wxz*
- uid: OpenTK.Mathematics.Vector4.Wyx
  commentId: P:OpenTK.Mathematics.Vector4.Wyx
  id: Wyx
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Wyx
  nameWithType: Vector4.Wyx
  fullName: OpenTK.Mathematics.Vector4.Wyx
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Wyx
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1363
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3 with the W, Y, and X components of this instance.
  example: []
  syntax:
    content: public Vector3 Wyx { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3
    content.vb: Public Property Wyx As Vector3
  overload: OpenTK.Mathematics.Vector4.Wyx*
- uid: OpenTK.Mathematics.Vector4.Wyz
  commentId: P:OpenTK.Mathematics.Vector4.Wyz
  id: Wyz
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Wyz
  nameWithType: Vector4.Wyz
  fullName: OpenTK.Mathematics.Vector4.Wyz
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Wyz
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1378
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3 with the W, Y, and Z components of this instance.
  example: []
  syntax:
    content: public Vector3 Wyz { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3
    content.vb: Public Property Wyz As Vector3
  overload: OpenTK.Mathematics.Vector4.Wyz*
- uid: OpenTK.Mathematics.Vector4.Wzx
  commentId: P:OpenTK.Mathematics.Vector4.Wzx
  id: Wzx
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Wzx
  nameWithType: Vector4.Wzx
  fullName: OpenTK.Mathematics.Vector4.Wzx
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Wzx
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1393
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3 with the W, Z, and X components of this instance.
  example: []
  syntax:
    content: public Vector3 Wzx { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3
    content.vb: Public Property Wzx As Vector3
  overload: OpenTK.Mathematics.Vector4.Wzx*
- uid: OpenTK.Mathematics.Vector4.Wzy
  commentId: P:OpenTK.Mathematics.Vector4.Wzy
  id: Wzy
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Wzy
  nameWithType: Vector4.Wzy
  fullName: OpenTK.Mathematics.Vector4.Wzy
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Wzy
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1408
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3 with the W, Z, and Y components of this instance.
  example: []
  syntax:
    content: public Vector3 Wzy { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3
    content.vb: Public Property Wzy As Vector3
  overload: OpenTK.Mathematics.Vector4.Wzy*
- uid: OpenTK.Mathematics.Vector4.Xywz
  commentId: P:OpenTK.Mathematics.Vector4.Xywz
  id: Xywz
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Xywz
  nameWithType: Vector4.Xywz
  fullName: OpenTK.Mathematics.Vector4.Xywz
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Xywz
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1423
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4 with the X, Y, W, and Z components of this instance.
  example: []
  syntax:
    content: public Vector4 Xywz { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4
    content.vb: Public Property Xywz As Vector4
  overload: OpenTK.Mathematics.Vector4.Xywz*
- uid: OpenTK.Mathematics.Vector4.Xzyw
  commentId: P:OpenTK.Mathematics.Vector4.Xzyw
  id: Xzyw
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Xzyw
  nameWithType: Vector4.Xzyw
  fullName: OpenTK.Mathematics.Vector4.Xzyw
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Xzyw
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1439
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4 with the X, Z, Y, and W components of this instance.
  example: []
  syntax:
    content: public Vector4 Xzyw { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4
    content.vb: Public Property Xzyw As Vector4
  overload: OpenTK.Mathematics.Vector4.Xzyw*
- uid: OpenTK.Mathematics.Vector4.Xzwy
  commentId: P:OpenTK.Mathematics.Vector4.Xzwy
  id: Xzwy
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Xzwy
  nameWithType: Vector4.Xzwy
  fullName: OpenTK.Mathematics.Vector4.Xzwy
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Xzwy
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1455
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4 with the X, Z, W, and Y components of this instance.
  example: []
  syntax:
    content: public Vector4 Xzwy { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4
    content.vb: Public Property Xzwy As Vector4
  overload: OpenTK.Mathematics.Vector4.Xzwy*
- uid: OpenTK.Mathematics.Vector4.Xwyz
  commentId: P:OpenTK.Mathematics.Vector4.Xwyz
  id: Xwyz
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Xwyz
  nameWithType: Vector4.Xwyz
  fullName: OpenTK.Mathematics.Vector4.Xwyz
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Xwyz
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1471
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4 with the X, W, Y, and Z components of this instance.
  example: []
  syntax:
    content: public Vector4 Xwyz { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4
    content.vb: Public Property Xwyz As Vector4
  overload: OpenTK.Mathematics.Vector4.Xwyz*
- uid: OpenTK.Mathematics.Vector4.Xwzy
  commentId: P:OpenTK.Mathematics.Vector4.Xwzy
  id: Xwzy
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Xwzy
  nameWithType: Vector4.Xwzy
  fullName: OpenTK.Mathematics.Vector4.Xwzy
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Xwzy
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1487
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4 with the X, W, Z, and Y components of this instance.
  example: []
  syntax:
    content: public Vector4 Xwzy { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4
    content.vb: Public Property Xwzy As Vector4
  overload: OpenTK.Mathematics.Vector4.Xwzy*
- uid: OpenTK.Mathematics.Vector4.Yxzw
  commentId: P:OpenTK.Mathematics.Vector4.Yxzw
  id: Yxzw
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Yxzw
  nameWithType: Vector4.Yxzw
  fullName: OpenTK.Mathematics.Vector4.Yxzw
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Yxzw
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1503
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4 with the Y, X, Z, and W components of this instance.
  example: []
  syntax:
    content: public Vector4 Yxzw { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4
    content.vb: Public Property Yxzw As Vector4
  overload: OpenTK.Mathematics.Vector4.Yxzw*
- uid: OpenTK.Mathematics.Vector4.Yxwz
  commentId: P:OpenTK.Mathematics.Vector4.Yxwz
  id: Yxwz
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Yxwz
  nameWithType: Vector4.Yxwz
  fullName: OpenTK.Mathematics.Vector4.Yxwz
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Yxwz
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1519
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4 with the Y, X, W, and Z components of this instance.
  example: []
  syntax:
    content: public Vector4 Yxwz { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4
    content.vb: Public Property Yxwz As Vector4
  overload: OpenTK.Mathematics.Vector4.Yxwz*
- uid: OpenTK.Mathematics.Vector4.Yyzw
  commentId: P:OpenTK.Mathematics.Vector4.Yyzw
  id: Yyzw
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Yyzw
  nameWithType: Vector4.Yyzw
  fullName: OpenTK.Mathematics.Vector4.Yyzw
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Yyzw
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1535
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4 with the Y, Y, Z, and W components of this instance.
  example: []
  syntax:
    content: public Vector4 Yyzw { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4
    content.vb: Public Property Yyzw As Vector4
  overload: OpenTK.Mathematics.Vector4.Yyzw*
- uid: OpenTK.Mathematics.Vector4.Yywz
  commentId: P:OpenTK.Mathematics.Vector4.Yywz
  id: Yywz
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Yywz
  nameWithType: Vector4.Yywz
  fullName: OpenTK.Mathematics.Vector4.Yywz
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Yywz
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1551
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4 with the Y, Y, W, and Z components of this instance.
  example: []
  syntax:
    content: public Vector4 Yywz { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4
    content.vb: Public Property Yywz As Vector4
  overload: OpenTK.Mathematics.Vector4.Yywz*
- uid: OpenTK.Mathematics.Vector4.Yzxw
  commentId: P:OpenTK.Mathematics.Vector4.Yzxw
  id: Yzxw
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Yzxw
  nameWithType: Vector4.Yzxw
  fullName: OpenTK.Mathematics.Vector4.Yzxw
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Yzxw
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1567
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4 with the Y, Z, X, and W components of this instance.
  example: []
  syntax:
    content: public Vector4 Yzxw { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4
    content.vb: Public Property Yzxw As Vector4
  overload: OpenTK.Mathematics.Vector4.Yzxw*
- uid: OpenTK.Mathematics.Vector4.Yzwx
  commentId: P:OpenTK.Mathematics.Vector4.Yzwx
  id: Yzwx
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Yzwx
  nameWithType: Vector4.Yzwx
  fullName: OpenTK.Mathematics.Vector4.Yzwx
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Yzwx
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1583
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4 with the Y, Z, W, and X components of this instance.
  example: []
  syntax:
    content: public Vector4 Yzwx { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4
    content.vb: Public Property Yzwx As Vector4
  overload: OpenTK.Mathematics.Vector4.Yzwx*
- uid: OpenTK.Mathematics.Vector4.Ywxz
  commentId: P:OpenTK.Mathematics.Vector4.Ywxz
  id: Ywxz
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Ywxz
  nameWithType: Vector4.Ywxz
  fullName: OpenTK.Mathematics.Vector4.Ywxz
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Ywxz
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1599
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4 with the Y, W, X, and Z components of this instance.
  example: []
  syntax:
    content: public Vector4 Ywxz { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4
    content.vb: Public Property Ywxz As Vector4
  overload: OpenTK.Mathematics.Vector4.Ywxz*
- uid: OpenTK.Mathematics.Vector4.Ywzx
  commentId: P:OpenTK.Mathematics.Vector4.Ywzx
  id: Ywzx
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Ywzx
  nameWithType: Vector4.Ywzx
  fullName: OpenTK.Mathematics.Vector4.Ywzx
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Ywzx
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1615
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4 with the Y, W, Z, and X components of this instance.
  example: []
  syntax:
    content: public Vector4 Ywzx { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4
    content.vb: Public Property Ywzx As Vector4
  overload: OpenTK.Mathematics.Vector4.Ywzx*
- uid: OpenTK.Mathematics.Vector4.Zxyw
  commentId: P:OpenTK.Mathematics.Vector4.Zxyw
  id: Zxyw
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Zxyw
  nameWithType: Vector4.Zxyw
  fullName: OpenTK.Mathematics.Vector4.Zxyw
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Zxyw
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1631
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4 with the Z, X, Y, and Z components of this instance.
  example: []
  syntax:
    content: public Vector4 Zxyw { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4
    content.vb: Public Property Zxyw As Vector4
  overload: OpenTK.Mathematics.Vector4.Zxyw*
- uid: OpenTK.Mathematics.Vector4.Zxwy
  commentId: P:OpenTK.Mathematics.Vector4.Zxwy
  id: Zxwy
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Zxwy
  nameWithType: Vector4.Zxwy
  fullName: OpenTK.Mathematics.Vector4.Zxwy
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Zxwy
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1647
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4 with the Z, X, W, and Y components of this instance.
  example: []
  syntax:
    content: public Vector4 Zxwy { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4
    content.vb: Public Property Zxwy As Vector4
  overload: OpenTK.Mathematics.Vector4.Zxwy*
- uid: OpenTK.Mathematics.Vector4.Zyxw
  commentId: P:OpenTK.Mathematics.Vector4.Zyxw
  id: Zyxw
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Zyxw
  nameWithType: Vector4.Zyxw
  fullName: OpenTK.Mathematics.Vector4.Zyxw
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Zyxw
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1663
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4 with the Z, Y, X, and W components of this instance.
  example: []
  syntax:
    content: public Vector4 Zyxw { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4
    content.vb: Public Property Zyxw As Vector4
  overload: OpenTK.Mathematics.Vector4.Zyxw*
- uid: OpenTK.Mathematics.Vector4.Zywx
  commentId: P:OpenTK.Mathematics.Vector4.Zywx
  id: Zywx
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Zywx
  nameWithType: Vector4.Zywx
  fullName: OpenTK.Mathematics.Vector4.Zywx
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Zywx
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1679
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4 with the Z, Y, W, and X components of this instance.
  example: []
  syntax:
    content: public Vector4 Zywx { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4
    content.vb: Public Property Zywx As Vector4
  overload: OpenTK.Mathematics.Vector4.Zywx*
- uid: OpenTK.Mathematics.Vector4.Zwxy
  commentId: P:OpenTK.Mathematics.Vector4.Zwxy
  id: Zwxy
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Zwxy
  nameWithType: Vector4.Zwxy
  fullName: OpenTK.Mathematics.Vector4.Zwxy
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Zwxy
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1695
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4 with the Z, W, X, and Y components of this instance.
  example: []
  syntax:
    content: public Vector4 Zwxy { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4
    content.vb: Public Property Zwxy As Vector4
  overload: OpenTK.Mathematics.Vector4.Zwxy*
- uid: OpenTK.Mathematics.Vector4.Zwyx
  commentId: P:OpenTK.Mathematics.Vector4.Zwyx
  id: Zwyx
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Zwyx
  nameWithType: Vector4.Zwyx
  fullName: OpenTK.Mathematics.Vector4.Zwyx
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Zwyx
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1711
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4 with the Z, W, Y, and X components of this instance.
  example: []
  syntax:
    content: public Vector4 Zwyx { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4
    content.vb: Public Property Zwyx As Vector4
  overload: OpenTK.Mathematics.Vector4.Zwyx*
- uid: OpenTK.Mathematics.Vector4.Zwzy
  commentId: P:OpenTK.Mathematics.Vector4.Zwzy
  id: Zwzy
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Zwzy
  nameWithType: Vector4.Zwzy
  fullName: OpenTK.Mathematics.Vector4.Zwzy
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Zwzy
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1727
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4 with the Z, W, Z, and Y components of this instance.
  example: []
  syntax:
    content: public Vector4 Zwzy { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4
    content.vb: Public Property Zwzy As Vector4
  overload: OpenTK.Mathematics.Vector4.Zwzy*
- uid: OpenTK.Mathematics.Vector4.Wxyz
  commentId: P:OpenTK.Mathematics.Vector4.Wxyz
  id: Wxyz
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Wxyz
  nameWithType: Vector4.Wxyz
  fullName: OpenTK.Mathematics.Vector4.Wxyz
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Wxyz
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1743
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4 with the W, X, Y, and Z components of this instance.
  example: []
  syntax:
    content: public Vector4 Wxyz { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4
    content.vb: Public Property Wxyz As Vector4
  overload: OpenTK.Mathematics.Vector4.Wxyz*
- uid: OpenTK.Mathematics.Vector4.Wxzy
  commentId: P:OpenTK.Mathematics.Vector4.Wxzy
  id: Wxzy
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Wxzy
  nameWithType: Vector4.Wxzy
  fullName: OpenTK.Mathematics.Vector4.Wxzy
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Wxzy
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1759
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4 with the W, X, Z, and Y components of this instance.
  example: []
  syntax:
    content: public Vector4 Wxzy { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4
    content.vb: Public Property Wxzy As Vector4
  overload: OpenTK.Mathematics.Vector4.Wxzy*
- uid: OpenTK.Mathematics.Vector4.Wyxz
  commentId: P:OpenTK.Mathematics.Vector4.Wyxz
  id: Wyxz
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Wyxz
  nameWithType: Vector4.Wyxz
  fullName: OpenTK.Mathematics.Vector4.Wyxz
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Wyxz
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1775
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4 with the W, Y, X, and Z components of this instance.
  example: []
  syntax:
    content: public Vector4 Wyxz { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4
    content.vb: Public Property Wyxz As Vector4
  overload: OpenTK.Mathematics.Vector4.Wyxz*
- uid: OpenTK.Mathematics.Vector4.Wyzx
  commentId: P:OpenTK.Mathematics.Vector4.Wyzx
  id: Wyzx
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Wyzx
  nameWithType: Vector4.Wyzx
  fullName: OpenTK.Mathematics.Vector4.Wyzx
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Wyzx
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1791
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4 with the W, Y, Z, and X components of this instance.
  example: []
  syntax:
    content: public Vector4 Wyzx { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4
    content.vb: Public Property Wyzx As Vector4
  overload: OpenTK.Mathematics.Vector4.Wyzx*
- uid: OpenTK.Mathematics.Vector4.Wzxy
  commentId: P:OpenTK.Mathematics.Vector4.Wzxy
  id: Wzxy
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Wzxy
  nameWithType: Vector4.Wzxy
  fullName: OpenTK.Mathematics.Vector4.Wzxy
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Wzxy
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1807
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4 with the W, Z, X, and Y components of this instance.
  example: []
  syntax:
    content: public Vector4 Wzxy { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4
    content.vb: Public Property Wzxy As Vector4
  overload: OpenTK.Mathematics.Vector4.Wzxy*
- uid: OpenTK.Mathematics.Vector4.Wzyx
  commentId: P:OpenTK.Mathematics.Vector4.Wzyx
  id: Wzyx
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Wzyx
  nameWithType: Vector4.Wzyx
  fullName: OpenTK.Mathematics.Vector4.Wzyx
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Wzyx
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1823
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4 with the W, Z, Y, and X components of this instance.
  example: []
  syntax:
    content: public Vector4 Wzyx { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4
    content.vb: Public Property Wzyx As Vector4
  overload: OpenTK.Mathematics.Vector4.Wzyx*
- uid: OpenTK.Mathematics.Vector4.Wzyw
  commentId: P:OpenTK.Mathematics.Vector4.Wzyw
  id: Wzyw
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Wzyw
  nameWithType: Vector4.Wzyw
  fullName: OpenTK.Mathematics.Vector4.Wzyw
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Wzyw
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1839
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4 with the W, Z, Y, and W components of this instance.
  example: []
  syntax:
    content: public Vector4 Wzyw { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4
    content.vb: Public Property Wzyw As Vector4
  overload: OpenTK.Mathematics.Vector4.Wzyw*
- uid: OpenTK.Mathematics.Vector4.op_Addition(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  commentId: M:OpenTK.Mathematics.Vector4.op_Addition(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  id: op_Addition(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: operator +(Vector4, Vector4)
  nameWithType: Vector4.operator +(Vector4, Vector4)
  fullName: OpenTK.Mathematics.Vector4.operator +(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: op_Addition
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1858
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Adds two instances.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4 operator +(Vector4 left, Vector4 right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector4
      description: The first instance.
    - id: right
      type: OpenTK.Mathematics.Vector4
      description: The second instance.
    return:
      type: OpenTK.Mathematics.Vector4
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator +(left As Vector4, right As Vector4) As Vector4
  overload: OpenTK.Mathematics.Vector4.op_Addition*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4.+(Vector4, Vector4)
  fullName.vb: OpenTK.Mathematics.Vector4.+(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4)
  name.vb: +(Vector4, Vector4)
- uid: OpenTK.Mathematics.Vector4.op_Subtraction(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  commentId: M:OpenTK.Mathematics.Vector4.op_Subtraction(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  id: op_Subtraction(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: operator -(Vector4, Vector4)
  nameWithType: Vector4.operator -(Vector4, Vector4)
  fullName: OpenTK.Mathematics.Vector4.operator -(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: op_Subtraction
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1874
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Subtracts two instances.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4 operator -(Vector4 left, Vector4 right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector4
      description: The first instance.
    - id: right
      type: OpenTK.Mathematics.Vector4
      description: The second instance.
    return:
      type: OpenTK.Mathematics.Vector4
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator -(left As Vector4, right As Vector4) As Vector4
  overload: OpenTK.Mathematics.Vector4.op_Subtraction*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4.-(Vector4, Vector4)
  fullName.vb: OpenTK.Mathematics.Vector4.-(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4)
  name.vb: -(Vector4, Vector4)
- uid: OpenTK.Mathematics.Vector4.op_UnaryNegation(OpenTK.Mathematics.Vector4)
  commentId: M:OpenTK.Mathematics.Vector4.op_UnaryNegation(OpenTK.Mathematics.Vector4)
  id: op_UnaryNegation(OpenTK.Mathematics.Vector4)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: operator -(Vector4)
  nameWithType: Vector4.operator -(Vector4)
  fullName: OpenTK.Mathematics.Vector4.operator -(OpenTK.Mathematics.Vector4)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: op_UnaryNegation
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1889
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Negates an instance.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4 operator -(Vector4 vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4
      description: The instance.
    return:
      type: OpenTK.Mathematics.Vector4
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator -(vec As Vector4) As Vector4
  overload: OpenTK.Mathematics.Vector4.op_UnaryNegation*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4.-(Vector4)
  fullName.vb: OpenTK.Mathematics.Vector4.-(OpenTK.Mathematics.Vector4)
  name.vb: -(Vector4)
- uid: OpenTK.Mathematics.Vector4.op_Multiply(OpenTK.Mathematics.Vector4,System.Single)
  commentId: M:OpenTK.Mathematics.Vector4.op_Multiply(OpenTK.Mathematics.Vector4,System.Single)
  id: op_Multiply(OpenTK.Mathematics.Vector4,System.Single)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: operator *(Vector4, float)
  nameWithType: Vector4.operator *(Vector4, float)
  fullName: OpenTK.Mathematics.Vector4.operator *(OpenTK.Mathematics.Vector4, float)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: op_Multiply
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1905
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies an instance by a scalar.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4 operator *(Vector4 vec, float scale)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4
      description: The instance.
    - id: scale
      type: System.Single
      description: The scalar.
    return:
      type: OpenTK.Mathematics.Vector4
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator *(vec As Vector4, scale As Single) As Vector4
  overload: OpenTK.Mathematics.Vector4.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4.*(Vector4, Single)
  fullName.vb: OpenTK.Mathematics.Vector4.*(OpenTK.Mathematics.Vector4, Single)
  name.vb: '*(Vector4, Single)'
- uid: OpenTK.Mathematics.Vector4.op_Multiply(System.Single,OpenTK.Mathematics.Vector4)
  commentId: M:OpenTK.Mathematics.Vector4.op_Multiply(System.Single,OpenTK.Mathematics.Vector4)
  id: op_Multiply(System.Single,OpenTK.Mathematics.Vector4)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: operator *(float, Vector4)
  nameWithType: Vector4.operator *(float, Vector4)
  fullName: OpenTK.Mathematics.Vector4.operator *(float, OpenTK.Mathematics.Vector4)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: op_Multiply
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1921
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies an instance by a scalar.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4 operator *(float scale, Vector4 vec)
    parameters:
    - id: scale
      type: System.Single
      description: The scalar.
    - id: vec
      type: OpenTK.Mathematics.Vector4
      description: The instance.
    return:
      type: OpenTK.Mathematics.Vector4
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator *(scale As Single, vec As Vector4) As Vector4
  overload: OpenTK.Mathematics.Vector4.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4.*(Single, Vector4)
  fullName.vb: OpenTK.Mathematics.Vector4.*(Single, OpenTK.Mathematics.Vector4)
  name.vb: '*(Single, Vector4)'
- uid: OpenTK.Mathematics.Vector4.op_Multiply(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  commentId: M:OpenTK.Mathematics.Vector4.op_Multiply(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  id: op_Multiply(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: operator *(Vector4, Vector4)
  nameWithType: Vector4.operator *(Vector4, Vector4)
  fullName: OpenTK.Mathematics.Vector4.operator *(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: op_Multiply
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1937
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Component-wise multiplication between the specified instance by a scale vector.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4 operator *(Vector4 vec, Vector4 scale)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4
      description: Right operand.
    - id: scale
      type: OpenTK.Mathematics.Vector4
      description: Left operand.
    return:
      type: OpenTK.Mathematics.Vector4
      description: Result of multiplication.
    content.vb: >-
      <Pure>

      Public Shared Operator *(vec As Vector4, scale As Vector4) As Vector4
  overload: OpenTK.Mathematics.Vector4.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4.*(Vector4, Vector4)
  fullName.vb: OpenTK.Mathematics.Vector4.*(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4)
  name.vb: '*(Vector4, Vector4)'
- uid: OpenTK.Mathematics.Vector4.op_Multiply(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Matrix4)
  commentId: M:OpenTK.Mathematics.Vector4.op_Multiply(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Matrix4)
  id: op_Multiply(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Matrix4)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: operator *(Vector4, Matrix4)
  nameWithType: Vector4.operator *(Vector4, Matrix4)
  fullName: OpenTK.Mathematics.Vector4.operator *(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Matrix4)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: op_Multiply
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1953
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Vector by the given Matrix.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4 operator *(Vector4 vec, Matrix4 mat)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4
      description: The vector to transform.
    - id: mat
      type: OpenTK.Mathematics.Matrix4
      description: The desired transformation.
    return:
      type: OpenTK.Mathematics.Vector4
      description: The transformed vector.
    content.vb: >-
      <Pure>

      Public Shared Operator *(vec As Vector4, mat As Matrix4) As Vector4
  overload: OpenTK.Mathematics.Vector4.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4.*(Vector4, Matrix4)
  fullName.vb: OpenTK.Mathematics.Vector4.*(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Matrix4)
  name.vb: '*(Vector4, Matrix4)'
- uid: OpenTK.Mathematics.Vector4.op_Multiply(OpenTK.Mathematics.Matrix4,OpenTK.Mathematics.Vector4)
  commentId: M:OpenTK.Mathematics.Vector4.op_Multiply(OpenTK.Mathematics.Matrix4,OpenTK.Mathematics.Vector4)
  id: op_Multiply(OpenTK.Mathematics.Matrix4,OpenTK.Mathematics.Vector4)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: operator *(Matrix4, Vector4)
  nameWithType: Vector4.operator *(Matrix4, Vector4)
  fullName: OpenTK.Mathematics.Vector4.operator *(OpenTK.Mathematics.Matrix4, OpenTK.Mathematics.Vector4)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: op_Multiply
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1966
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Vector by the given Matrix using right-handed notation.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4 operator *(Matrix4 mat, Vector4 vec)
    parameters:
    - id: mat
      type: OpenTK.Mathematics.Matrix4
      description: The desired transformation.
    - id: vec
      type: OpenTK.Mathematics.Vector4
      description: The vector to transform.
    return:
      type: OpenTK.Mathematics.Vector4
      description: The transformed vector.
    content.vb: >-
      <Pure>

      Public Shared Operator *(mat As Matrix4, vec As Vector4) As Vector4
  overload: OpenTK.Mathematics.Vector4.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4.*(Matrix4, Vector4)
  fullName.vb: OpenTK.Mathematics.Vector4.*(OpenTK.Mathematics.Matrix4, OpenTK.Mathematics.Vector4)
  name.vb: '*(Matrix4, Vector4)'
- uid: OpenTK.Mathematics.Vector4.op_Multiply(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Vector4)
  commentId: M:OpenTK.Mathematics.Vector4.op_Multiply(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Vector4)
  id: op_Multiply(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Vector4)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: operator *(Quaternion, Vector4)
  nameWithType: Vector4.operator *(Quaternion, Vector4)
  fullName: OpenTK.Mathematics.Vector4.operator *(OpenTK.Mathematics.Quaternion, OpenTK.Mathematics.Vector4)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: op_Multiply
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1979
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transforms a vector by a quaternion rotation.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4 operator *(Quaternion quat, Vector4 vec)
    parameters:
    - id: quat
      type: OpenTK.Mathematics.Quaternion
      description: The quaternion to rotate the vector by.
    - id: vec
      type: OpenTK.Mathematics.Vector4
      description: The vector to transform.
    return:
      type: OpenTK.Mathematics.Vector4
      description: The transformed vector.
    content.vb: >-
      <Pure>

      Public Shared Operator *(quat As Quaternion, vec As Vector4) As Vector4
  overload: OpenTK.Mathematics.Vector4.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4.*(Quaternion, Vector4)
  fullName.vb: OpenTK.Mathematics.Vector4.*(OpenTK.Mathematics.Quaternion, OpenTK.Mathematics.Vector4)
  name.vb: '*(Quaternion, Vector4)'
- uid: OpenTK.Mathematics.Vector4.op_Division(OpenTK.Mathematics.Vector4,System.Single)
  commentId: M:OpenTK.Mathematics.Vector4.op_Division(OpenTK.Mathematics.Vector4,System.Single)
  id: op_Division(OpenTK.Mathematics.Vector4,System.Single)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: operator /(Vector4, float)
  nameWithType: Vector4.operator /(Vector4, float)
  fullName: OpenTK.Mathematics.Vector4.operator /(OpenTK.Mathematics.Vector4, float)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: op_Division
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 1992
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Divides an instance by a scalar.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4 operator /(Vector4 vec, float scale)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4
      description: The instance.
    - id: scale
      type: System.Single
      description: The scalar.
    return:
      type: OpenTK.Mathematics.Vector4
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator /(vec As Vector4, scale As Single) As Vector4
  overload: OpenTK.Mathematics.Vector4.op_Division*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4./(Vector4, Single)
  fullName.vb: OpenTK.Mathematics.Vector4./(OpenTK.Mathematics.Vector4, Single)
  name.vb: /(Vector4, Single)
- uid: OpenTK.Mathematics.Vector4.op_Division(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  commentId: M:OpenTK.Mathematics.Vector4.op_Division(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  id: op_Division(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: operator /(Vector4, Vector4)
  nameWithType: Vector4.operator /(Vector4, Vector4)
  fullName: OpenTK.Mathematics.Vector4.operator /(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: op_Division
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 2008
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Component-wise division between the specified instance by a scale vector.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4 operator /(Vector4 vec, Vector4 scale)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4
      description: Left operand.
    - id: scale
      type: OpenTK.Mathematics.Vector4
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector4
      description: Result of the division.
    content.vb: >-
      <Pure>

      Public Shared Operator /(vec As Vector4, scale As Vector4) As Vector4
  overload: OpenTK.Mathematics.Vector4.op_Division*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4./(Vector4, Vector4)
  fullName.vb: OpenTK.Mathematics.Vector4./(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4)
  name.vb: /(Vector4, Vector4)
- uid: OpenTK.Mathematics.Vector4.op_Equality(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  commentId: M:OpenTK.Mathematics.Vector4.op_Equality(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  id: op_Equality(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: operator ==(Vector4, Vector4)
  nameWithType: Vector4.operator ==(Vector4, Vector4)
  fullName: OpenTK.Mathematics.Vector4.operator ==(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: op_Equality
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 2024
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Compares two instances for equality.
  example: []
  syntax:
    content: public static bool operator ==(Vector4 left, Vector4 right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector4
      description: The first instance.
    - id: right
      type: OpenTK.Mathematics.Vector4
      description: The second instance.
    return:
      type: System.Boolean
      description: True, if left equals right; false otherwise.
    content.vb: Public Shared Operator =(left As Vector4, right As Vector4) As Boolean
  overload: OpenTK.Mathematics.Vector4.op_Equality*
  nameWithType.vb: Vector4.=(Vector4, Vector4)
  fullName.vb: OpenTK.Mathematics.Vector4.=(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4)
  name.vb: =(Vector4, Vector4)
- uid: OpenTK.Mathematics.Vector4.op_Inequality(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  commentId: M:OpenTK.Mathematics.Vector4.op_Inequality(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  id: op_Inequality(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: operator !=(Vector4, Vector4)
  nameWithType: Vector4.operator !=(Vector4, Vector4)
  fullName: OpenTK.Mathematics.Vector4.operator !=(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: op_Inequality
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 2035
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Compares two instances for inequality.
  example: []
  syntax:
    content: public static bool operator !=(Vector4 left, Vector4 right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector4
      description: The first instance.
    - id: right
      type: OpenTK.Mathematics.Vector4
      description: The second instance.
    return:
      type: System.Boolean
      description: True, if left does not equa lright; false otherwise.
    content.vb: Public Shared Operator <>(left As Vector4, right As Vector4) As Boolean
  overload: OpenTK.Mathematics.Vector4.op_Inequality*
  nameWithType.vb: Vector4.<>(Vector4, Vector4)
  fullName.vb: OpenTK.Mathematics.Vector4.<>(OpenTK.Mathematics.Vector4, OpenTK.Mathematics.Vector4)
  name.vb: <>(Vector4, Vector4)
- uid: OpenTK.Mathematics.Vector4.op_Explicit(OpenTK.Mathematics.Vector4)~System.Single*
  commentId: M:OpenTK.Mathematics.Vector4.op_Explicit(OpenTK.Mathematics.Vector4)~System.Single*
  id: op_Explicit(OpenTK.Mathematics.Vector4)~System.Single*
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: explicit operator float*(Vector4)
  nameWithType: Vector4.explicit operator float*(Vector4)
  fullName: OpenTK.Mathematics.Vector4.explicit operator float*(OpenTK.Mathematics.Vector4)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: op_Explicit
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 2045
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a pointer to the first element of the specified instance.
  example: []
  syntax:
    content: >-
      [Pure]

      public static explicit operator float*(Vector4 v)
    parameters:
    - id: v
      type: OpenTK.Mathematics.Vector4
      description: The instance.
    return:
      type: System.Single*
      description: A pointer to the first element of v.
    content.vb: >-
      <Pure>

      Public Shared Narrowing Operator CType(v As Vector4) As Single*
  overload: OpenTK.Mathematics.Vector4.op_Explicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4.CType(Vector4)
  fullName.vb: OpenTK.Mathematics.Vector4.CType(OpenTK.Mathematics.Vector4)
  name.vb: CType(Vector4)
- uid: OpenTK.Mathematics.Vector4.op_Explicit(OpenTK.Mathematics.Vector4)~System.IntPtr
  commentId: M:OpenTK.Mathematics.Vector4.op_Explicit(OpenTK.Mathematics.Vector4)~System.IntPtr
  id: op_Explicit(OpenTK.Mathematics.Vector4)~System.IntPtr
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: explicit operator IntPtr(Vector4)
  nameWithType: Vector4.explicit operator IntPtr(Vector4)
  fullName: OpenTK.Mathematics.Vector4.explicit operator System.IntPtr(OpenTK.Mathematics.Vector4)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: op_Explicit
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 2056
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a pointer to the first element of the specified instance.
  example: []
  syntax:
    content: >-
      [Pure]

      public static explicit operator IntPtr(Vector4 v)
    parameters:
    - id: v
      type: OpenTK.Mathematics.Vector4
      description: The instance.
    return:
      type: System.IntPtr
      description: A pointer to the first element of v.
    content.vb: >-
      <Pure>

      Public Shared Narrowing Operator CType(v As Vector4) As IntPtr
  overload: OpenTK.Mathematics.Vector4.op_Explicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4.CType(Vector4)
  fullName.vb: OpenTK.Mathematics.Vector4.CType(OpenTK.Mathematics.Vector4)
  name.vb: CType(Vector4)
- uid: OpenTK.Mathematics.Vector4.op_Explicit(OpenTK.Mathematics.Vector4)~OpenTK.Mathematics.Color4
  commentId: M:OpenTK.Mathematics.Vector4.op_Explicit(OpenTK.Mathematics.Vector4)~OpenTK.Mathematics.Color4
  id: op_Explicit(OpenTK.Mathematics.Vector4)~OpenTK.Mathematics.Color4
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: explicit operator Color4(Vector4)
  nameWithType: Vector4.explicit operator Color4(Vector4)
  fullName: OpenTK.Mathematics.Vector4.explicit operator OpenTK.Mathematics.Color4(OpenTK.Mathematics.Vector4)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: op_Explicit
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 2070
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns this Vector4 as a Color4. The resulting struct will have RGBA mapped to XYZW, in that order.
  example: []
  syntax:
    content: >-
      [Pure]

      public static explicit operator Color4(Vector4 v)
    parameters:
    - id: v
      type: OpenTK.Mathematics.Vector4
      description: The Vector4 to convert.
    return:
      type: OpenTK.Mathematics.Color4
      description: The Vector4, converted to a Color4.
    content.vb: >-
      <Pure>

      Public Shared Narrowing Operator CType(v As Vector4) As Color4
  overload: OpenTK.Mathematics.Vector4.op_Explicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4.CType(Vector4)
  fullName.vb: OpenTK.Mathematics.Vector4.CType(OpenTK.Mathematics.Vector4)
  name.vb: CType(Vector4)
- uid: OpenTK.Mathematics.Vector4.op_Implicit(OpenTK.Mathematics.Vector4)~OpenTK.Mathematics.Vector4d
  commentId: M:OpenTK.Mathematics.Vector4.op_Implicit(OpenTK.Mathematics.Vector4)~OpenTK.Mathematics.Vector4d
  id: op_Implicit(OpenTK.Mathematics.Vector4)~OpenTK.Mathematics.Vector4d
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: implicit operator Vector4d(Vector4)
  nameWithType: Vector4.implicit operator Vector4d(Vector4)
  fullName: OpenTK.Mathematics.Vector4.implicit operator OpenTK.Mathematics.Vector4d(OpenTK.Mathematics.Vector4)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: op_Implicit
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 2082
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts OpenTK.Vector4 to OpenTK.Vector4d.
  example: []
  syntax:
    content: >-
      [Pure]

      public static implicit operator Vector4d(Vector4 vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4
      description: The Vector4 to convert.
    return:
      type: OpenTK.Mathematics.Vector4d
      description: The resulting Vector4d.
    content.vb: >-
      <Pure>

      Public Shared Widening Operator CType(vec As Vector4) As Vector4d
  overload: OpenTK.Mathematics.Vector4.op_Implicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4.CType(Vector4)
  fullName.vb: OpenTK.Mathematics.Vector4.CType(OpenTK.Mathematics.Vector4)
  name.vb: CType(Vector4)
- uid: OpenTK.Mathematics.Vector4.op_Explicit(OpenTK.Mathematics.Vector4)~OpenTK.Mathematics.Vector4h
  commentId: M:OpenTK.Mathematics.Vector4.op_Explicit(OpenTK.Mathematics.Vector4)~OpenTK.Mathematics.Vector4h
  id: op_Explicit(OpenTK.Mathematics.Vector4)~OpenTK.Mathematics.Vector4h
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: explicit operator Vector4h(Vector4)
  nameWithType: Vector4.explicit operator Vector4h(Vector4)
  fullName: OpenTK.Mathematics.Vector4.explicit operator OpenTK.Mathematics.Vector4h(OpenTK.Mathematics.Vector4)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: op_Explicit
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 2093
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts OpenTK.Vector4 to OpenTK.Vector4h.
  example: []
  syntax:
    content: >-
      [Pure]

      public static explicit operator Vector4h(Vector4 vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4
      description: The Vector4 to convert.
    return:
      type: OpenTK.Mathematics.Vector4h
      description: The resulting Vector4h.
    content.vb: >-
      <Pure>

      Public Shared Narrowing Operator CType(vec As Vector4) As Vector4h
  overload: OpenTK.Mathematics.Vector4.op_Explicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4.CType(Vector4)
  fullName.vb: OpenTK.Mathematics.Vector4.CType(OpenTK.Mathematics.Vector4)
  name.vb: CType(Vector4)
- uid: OpenTK.Mathematics.Vector4.op_Explicit(OpenTK.Mathematics.Vector4)~OpenTK.Mathematics.Vector4i
  commentId: M:OpenTK.Mathematics.Vector4.op_Explicit(OpenTK.Mathematics.Vector4)~OpenTK.Mathematics.Vector4i
  id: op_Explicit(OpenTK.Mathematics.Vector4)~OpenTK.Mathematics.Vector4i
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: explicit operator Vector4i(Vector4)
  nameWithType: Vector4.explicit operator Vector4i(Vector4)
  fullName: OpenTK.Mathematics.Vector4.explicit operator OpenTK.Mathematics.Vector4i(OpenTK.Mathematics.Vector4)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: op_Explicit
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 2104
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts OpenTK.Vector4 to OpenTK.Vector4i.
  example: []
  syntax:
    content: >-
      [Pure]

      public static explicit operator Vector4i(Vector4 vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4
      description: The Vector4 to convert.
    return:
      type: OpenTK.Mathematics.Vector4i
      description: The resulting Vector4i.
    content.vb: >-
      <Pure>

      Public Shared Narrowing Operator CType(vec As Vector4) As Vector4i
  overload: OpenTK.Mathematics.Vector4.op_Explicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4.CType(Vector4)
  fullName.vb: OpenTK.Mathematics.Vector4.CType(OpenTK.Mathematics.Vector4)
  name.vb: CType(Vector4)
- uid: OpenTK.Mathematics.Vector4.op_Implicit(System.ValueTuple{System.Single,System.Single,System.Single,System.Single})~OpenTK.Mathematics.Vector4
  commentId: M:OpenTK.Mathematics.Vector4.op_Implicit(System.ValueTuple{System.Single,System.Single,System.Single,System.Single})~OpenTK.Mathematics.Vector4
  id: op_Implicit(System.ValueTuple{System.Single,System.Single,System.Single,System.Single})~OpenTK.Mathematics.Vector4
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: implicit operator Vector4((float X, float Y, float Z, float W))
  nameWithType: Vector4.implicit operator Vector4((float X, float Y, float Z, float W))
  fullName: OpenTK.Mathematics.Vector4.implicit operator OpenTK.Mathematics.Vector4((float X, float Y, float Z, float W))
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: op_Implicit
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 2116
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector4" data-throw-if-not-resolved="false"></xref> struct using a tuple containing the component

    values.
  example: []
  syntax:
    content: >-
      [Pure]

      public static implicit operator Vector4((float X, float Y, float Z, float W) values)
    parameters:
    - id: values
      type: System.ValueTuple{System.Single,System.Single,System.Single,System.Single}
      description: A tuple containing the component values.
    return:
      type: OpenTK.Mathematics.Vector4
      description: A new instance of the <xref href="OpenTK.Mathematics.Vector4" data-throw-if-not-resolved="false"></xref> struct with the given component values.
    content.vb: >-
      <Pure>

      Public Shared Widening Operator CType(values As (X As Single, Y As Single, Z As Single, W As Single)) As Vector4
  overload: OpenTK.Mathematics.Vector4.op_Implicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4.CType((X As Single, Y As Single, Z As Single, W As Single))
  fullName.vb: OpenTK.Mathematics.Vector4.CType((X As Single, Y As Single, Z As Single, W As Single))
  name.vb: CType((X As Single, Y As Single, Z As Single, W As Single))
- uid: OpenTK.Mathematics.Vector4.ToString
  commentId: M:OpenTK.Mathematics.Vector4.ToString
  id: ToString
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Vector4.ToString()
  fullName: OpenTK.Mathematics.Vector4.ToString()
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: ToString
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 2123
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: OpenTK.Mathematics.Vector4.ToString*
- uid: OpenTK.Mathematics.Vector4.ToString(System.String)
  commentId: M:OpenTK.Mathematics.Vector4.ToString(System.String)
  id: ToString(System.String)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: ToString(string)
  nameWithType: Vector4.ToString(string)
  fullName: OpenTK.Mathematics.Vector4.ToString(string)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: ToString
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 2129
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  example: []
  syntax:
    content: public string ToString(string format)
    parameters:
    - id: format
      type: System.String
    return:
      type: System.String
    content.vb: Public Function ToString(format As String) As String
  overload: OpenTK.Mathematics.Vector4.ToString*
  nameWithType.vb: Vector4.ToString(String)
  fullName.vb: OpenTK.Mathematics.Vector4.ToString(String)
  name.vb: ToString(String)
- uid: OpenTK.Mathematics.Vector4.ToString(System.IFormatProvider)
  commentId: M:OpenTK.Mathematics.Vector4.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: ToString(IFormatProvider)
  nameWithType: Vector4.ToString(IFormatProvider)
  fullName: OpenTK.Mathematics.Vector4.ToString(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: ToString
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 2135
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  example: []
  syntax:
    content: public string ToString(IFormatProvider formatProvider)
    parameters:
    - id: formatProvider
      type: System.IFormatProvider
    return:
      type: System.String
    content.vb: Public Function ToString(formatProvider As IFormatProvider) As String
  overload: OpenTK.Mathematics.Vector4.ToString*
- uid: OpenTK.Mathematics.Vector4.ToString(System.String,System.IFormatProvider)
  commentId: M:OpenTK.Mathematics.Vector4.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: ToString(string, IFormatProvider)
  nameWithType: Vector4.ToString(string, IFormatProvider)
  fullName: OpenTK.Mathematics.Vector4.ToString(string, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: ToString
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 2141
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  example: []
  syntax:
    content: public string ToString(string format, IFormatProvider formatProvider)
    parameters:
    - id: format
      type: System.String
    - id: formatProvider
      type: System.IFormatProvider
    return:
      type: System.String
    content.vb: Public Function ToString(format As String, formatProvider As IFormatProvider) As String
  overload: OpenTK.Mathematics.Vector4.ToString*
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  nameWithType.vb: Vector4.ToString(String, IFormatProvider)
  fullName.vb: OpenTK.Mathematics.Vector4.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
- uid: OpenTK.Mathematics.Vector4.Equals(System.Object)
  commentId: M:OpenTK.Mathematics.Vector4.Equals(System.Object)
  id: Equals(System.Object)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: Vector4.Equals(object)
  fullName: OpenTK.Mathematics.Vector4.Equals(object)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Equals
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 2153
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: OpenTK.Mathematics.Vector4.Equals*
  nameWithType.vb: Vector4.Equals(Object)
  fullName.vb: OpenTK.Mathematics.Vector4.Equals(Object)
  name.vb: Equals(Object)
- uid: OpenTK.Mathematics.Vector4.Equals(OpenTK.Mathematics.Vector4)
  commentId: M:OpenTK.Mathematics.Vector4.Equals(OpenTK.Mathematics.Vector4)
  id: Equals(OpenTK.Mathematics.Vector4)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Equals(Vector4)
  nameWithType: Vector4.Equals(Vector4)
  fullName: OpenTK.Mathematics.Vector4.Equals(OpenTK.Mathematics.Vector4)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Equals
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 2159
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  example: []
  syntax:
    content: public bool Equals(Vector4 other)
    parameters:
    - id: other
      type: OpenTK.Mathematics.Vector4
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As Vector4) As Boolean
  overload: OpenTK.Mathematics.Vector4.Equals*
  implements:
  - System.IEquatable{OpenTK.Mathematics.Vector4}.Equals(OpenTK.Mathematics.Vector4)
- uid: OpenTK.Mathematics.Vector4.GetHashCode
  commentId: M:OpenTK.Mathematics.Vector4.GetHashCode
  id: GetHashCode
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Vector4.GetHashCode()
  fullName: OpenTK.Mathematics.Vector4.GetHashCode()
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: GetHashCode
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 2168
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: OpenTK.Mathematics.Vector4.GetHashCode*
- uid: OpenTK.Mathematics.Vector4.Deconstruct(System.Single@,System.Single@,System.Single@,System.Single@)
  commentId: M:OpenTK.Mathematics.Vector4.Deconstruct(System.Single@,System.Single@,System.Single@,System.Single@)
  id: Deconstruct(System.Single@,System.Single@,System.Single@,System.Single@)
  parent: OpenTK.Mathematics.Vector4
  langs:
  - csharp
  - vb
  name: Deconstruct(out float, out float, out float, out float)
  nameWithType: Vector4.Deconstruct(out float, out float, out float, out float)
  fullName: OpenTK.Mathematics.Vector4.Deconstruct(out float, out float, out float, out float)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Vector/Vector4.cs
      branch: f3539ad1fda98af9b265e941e0aecfb4662a9bbe
      repo: https://github.com/opentk/opentk.git
    id: Deconstruct
    path: opentk/src/OpenTK.Mathematics/Vector/Vector4.cs
    startLine: 2180
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Deconstructs the vector into it's individual components.
  example: []
  syntax:
    content: >-
      [Pure]

      public void Deconstruct(out float x, out float y, out float z, out float w)
    parameters:
    - id: x
      type: System.Single
      description: The X component of the vector.
    - id: y
      type: System.Single
      description: The Y component of the vector.
    - id: z
      type: System.Single
      description: The Z component of the vector.
    - id: w
      type: System.Single
      description: The W component of the vector.
    content.vb: >-
      <Pure>

      Public Sub Deconstruct(x As Single, y As Single, z As Single, w As Single)
  overload: OpenTK.Mathematics.Vector4.Deconstruct*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4.Deconstruct(Single, Single, Single, Single)
  fullName.vb: OpenTK.Mathematics.Vector4.Deconstruct(Single, Single, Single, Single)
  name.vb: Deconstruct(Single, Single, Single, Single)
references:
- uid: OpenTK.Mathematics
  commentId: N:OpenTK.Mathematics
  href: OpenTK.html
  name: OpenTK.Mathematics
  nameWithType: OpenTK.Mathematics
  fullName: OpenTK.Mathematics
  spec.csharp:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Mathematics
    name: Mathematics
    href: OpenTK.Mathematics.html
  spec.vb:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Mathematics
    name: Mathematics
    href: OpenTK.Mathematics.html
- uid: System.IEquatable{OpenTK.Mathematics.Vector4}
  commentId: T:System.IEquatable{OpenTK.Mathematics.Vector4}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Vector4>
  nameWithType: IEquatable<Vector4>
  fullName: System.IEquatable<OpenTK.Mathematics.Vector4>
  nameWithType.vb: IEquatable(Of Vector4)
  fullName.vb: System.IEquatable(Of OpenTK.Mathematics.Vector4)
  name.vb: IEquatable(Of Vector4)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: OpenTK.Mathematics.Vector4
    name: Vector4
    href: OpenTK.Mathematics.Vector4.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: OpenTK.Mathematics.Vector4
    name: Vector4
    href: OpenTK.Mathematics.Vector4.html
  - name: )
- uid: System.IFormattable
  commentId: T:System.IFormattable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable
  name: IFormattable
  nameWithType: IFormattable
  fullName: System.IFormattable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: OpenTK.Mathematics.Vector4
  commentId: T:OpenTK.Mathematics.Vector4
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector4.html
  name: Vector4
  nameWithType: Vector4
  fullName: OpenTK.Mathematics.Vector4
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: OpenTK.Mathematics.Vector4.#ctor*
  commentId: Overload:OpenTK.Mathematics.Vector4.#ctor
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.#ctor(System.Single)
  name: Vector4
  nameWithType: Vector4.Vector4
  fullName: OpenTK.Mathematics.Vector4.Vector4
  nameWithType.vb: Vector4.New
  fullName.vb: OpenTK.Mathematics.Vector4.New
  name.vb: New
- uid: OpenTK.Mathematics.Vector2
  commentId: T:OpenTK.Mathematics.Vector2
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector2.html
  name: Vector2
  nameWithType: Vector2
  fullName: OpenTK.Mathematics.Vector2
- uid: OpenTK.Mathematics.Vector4.#ctor(OpenTK.Mathematics.Vector3,System.Single)
  commentId: M:OpenTK.Mathematics.Vector4.#ctor(OpenTK.Mathematics.Vector3,System.Single)
  isExternal: true
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.#ctor(OpenTK.Mathematics.Vector3,System.Single)
  name: Vector4(Vector3, float)
  nameWithType: Vector4.Vector4(Vector3, float)
  fullName: OpenTK.Mathematics.Vector4.Vector4(OpenTK.Mathematics.Vector3, float)
  nameWithType.vb: Vector4.New(Vector3, Single)
  fullName.vb: OpenTK.Mathematics.Vector4.New(OpenTK.Mathematics.Vector3, Single)
  name.vb: New(Vector3, Single)
  spec.csharp:
  - uid: OpenTK.Mathematics.Vector4.#ctor(OpenTK.Mathematics.Vector3,System.Single)
    name: Vector4
    href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.#ctor(OpenTK.Mathematics.Vector3,System.Single)
  - name: (
  - uid: OpenTK.Mathematics.Vector3
    name: Vector3
    href: OpenTK.Mathematics.Vector3.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - name: New
  - name: (
  - uid: OpenTK.Mathematics.Vector3
    name: Vector3
    href: OpenTK.Mathematics.Vector3.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: OpenTK.Mathematics.Vector3
  commentId: T:OpenTK.Mathematics.Vector3
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector3.html
  name: Vector3
  nameWithType: Vector3
  fullName: OpenTK.Mathematics.Vector3
- uid: System.IndexOutOfRangeException
  commentId: T:System.IndexOutOfRangeException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.indexoutofrangeexception
  name: IndexOutOfRangeException
  nameWithType: IndexOutOfRangeException
  fullName: System.IndexOutOfRangeException
- uid: OpenTK.Mathematics.Vector4.Item*
  commentId: Overload:OpenTK.Mathematics.Vector4.Item
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Item(System.Int32)
  name: this
  nameWithType: Vector4.this
  fullName: OpenTK.Mathematics.Vector4.this
  nameWithType.vb: Vector4.this[]
  fullName.vb: OpenTK.Mathematics.Vector4.this[]
  name.vb: this[]
- uid: OpenTK.Mathematics.Vector4.LengthSquared
  commentId: P:OpenTK.Mathematics.Vector4.LengthSquared
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.LengthSquared
  name: LengthSquared
  nameWithType: Vector4.LengthSquared
  fullName: OpenTK.Mathematics.Vector4.LengthSquared
- uid: OpenTK.Mathematics.Vector4.LengthFast
  commentId: P:OpenTK.Mathematics.Vector4.LengthFast
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.LengthFast
  name: LengthFast
  nameWithType: Vector4.LengthFast
  fullName: OpenTK.Mathematics.Vector4.LengthFast
- uid: OpenTK.Mathematics.Vector4.Length*
  commentId: Overload:OpenTK.Mathematics.Vector4.Length
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Length
  name: Length
  nameWithType: Vector4.Length
  fullName: OpenTK.Mathematics.Vector4.Length
- uid: OpenTK.Mathematics.Vector4.Length
  commentId: P:OpenTK.Mathematics.Vector4.Length
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Length
  name: Length
  nameWithType: Vector4.Length
  fullName: OpenTK.Mathematics.Vector4.Length
- uid: OpenTK.Mathematics.Vector4.LengthFast*
  commentId: Overload:OpenTK.Mathematics.Vector4.LengthFast
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.LengthFast
  name: LengthFast
  nameWithType: Vector4.LengthFast
  fullName: OpenTK.Mathematics.Vector4.LengthFast
- uid: OpenTK.Mathematics.Vector4.LengthSquared*
  commentId: Overload:OpenTK.Mathematics.Vector4.LengthSquared
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.LengthSquared
  name: LengthSquared
  nameWithType: Vector4.LengthSquared
  fullName: OpenTK.Mathematics.Vector4.LengthSquared
- uid: OpenTK.Mathematics.Vector4.Normalized*
  commentId: Overload:OpenTK.Mathematics.Vector4.Normalized
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Normalized
  name: Normalized
  nameWithType: Vector4.Normalized
  fullName: OpenTK.Mathematics.Vector4.Normalized
- uid: OpenTK.Mathematics.Vector4.Normalize*
  commentId: Overload:OpenTK.Mathematics.Vector4.Normalize
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Normalize
  name: Normalize
  nameWithType: Vector4.Normalize
  fullName: OpenTK.Mathematics.Vector4.Normalize
- uid: OpenTK.Mathematics.Vector4.NormalizeFast*
  commentId: Overload:OpenTK.Mathematics.Vector4.NormalizeFast
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.NormalizeFast
  name: NormalizeFast
  nameWithType: Vector4.NormalizeFast
  fullName: OpenTK.Mathematics.Vector4.NormalizeFast
- uid: OpenTK.Mathematics.Vector4.Add*
  commentId: Overload:OpenTK.Mathematics.Vector4.Add
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Add(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  name: Add
  nameWithType: Vector4.Add
  fullName: OpenTK.Mathematics.Vector4.Add
- uid: OpenTK.Mathematics.Vector4.Subtract*
  commentId: Overload:OpenTK.Mathematics.Vector4.Subtract
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Subtract(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  name: Subtract
  nameWithType: Vector4.Subtract
  fullName: OpenTK.Mathematics.Vector4.Subtract
- uid: OpenTK.Mathematics.Vector4.Multiply*
  commentId: Overload:OpenTK.Mathematics.Vector4.Multiply
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Multiply(OpenTK.Mathematics.Vector4,System.Single)
  name: Multiply
  nameWithType: Vector4.Multiply
  fullName: OpenTK.Mathematics.Vector4.Multiply
- uid: OpenTK.Mathematics.Vector4.Divide*
  commentId: Overload:OpenTK.Mathematics.Vector4.Divide
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Divide(OpenTK.Mathematics.Vector4,System.Single)
  name: Divide
  nameWithType: Vector4.Divide
  fullName: OpenTK.Mathematics.Vector4.Divide
- uid: OpenTK.Mathematics.Vector4.ComponentMin*
  commentId: Overload:OpenTK.Mathematics.Vector4.ComponentMin
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.ComponentMin(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  name: ComponentMin
  nameWithType: Vector4.ComponentMin
  fullName: OpenTK.Mathematics.Vector4.ComponentMin
- uid: OpenTK.Mathematics.Vector4.ComponentMax*
  commentId: Overload:OpenTK.Mathematics.Vector4.ComponentMax
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.ComponentMax(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  name: ComponentMax
  nameWithType: Vector4.ComponentMax
  fullName: OpenTK.Mathematics.Vector4.ComponentMax
- uid: OpenTK.Mathematics.Vector4.MagnitudeMin*
  commentId: Overload:OpenTK.Mathematics.Vector4.MagnitudeMin
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.MagnitudeMin(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  name: MagnitudeMin
  nameWithType: Vector4.MagnitudeMin
  fullName: OpenTK.Mathematics.Vector4.MagnitudeMin
- uid: OpenTK.Mathematics.Vector4.MagnitudeMax*
  commentId: Overload:OpenTK.Mathematics.Vector4.MagnitudeMax
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.MagnitudeMax(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  name: MagnitudeMax
  nameWithType: Vector4.MagnitudeMax
  fullName: OpenTK.Mathematics.Vector4.MagnitudeMax
- uid: OpenTK.Mathematics.Vector4.Clamp*
  commentId: Overload:OpenTK.Mathematics.Vector4.Clamp
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Clamp(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  name: Clamp
  nameWithType: Vector4.Clamp
  fullName: OpenTK.Mathematics.Vector4.Clamp
- uid: OpenTK.Mathematics.Vector4.Dot*
  commentId: Overload:OpenTK.Mathematics.Vector4.Dot
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Dot(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  name: Dot
  nameWithType: Vector4.Dot
  fullName: OpenTK.Mathematics.Vector4.Dot
- uid: OpenTK.Mathematics.Vector4.Lerp*
  commentId: Overload:OpenTK.Mathematics.Vector4.Lerp
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Lerp(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4,System.Single)
  name: Lerp
  nameWithType: Vector4.Lerp
  fullName: OpenTK.Mathematics.Vector4.Lerp
- uid: OpenTK.Mathematics.Vector4.BaryCentric*
  commentId: Overload:OpenTK.Mathematics.Vector4.BaryCentric
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.BaryCentric(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4,System.Single,System.Single)
  name: BaryCentric
  nameWithType: Vector4.BaryCentric
  fullName: OpenTK.Mathematics.Vector4.BaryCentric
- uid: OpenTK.Mathematics.Vector4.TransformRow*
  commentId: Overload:OpenTK.Mathematics.Vector4.TransformRow
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.TransformRow(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Matrix4)
  name: TransformRow
  nameWithType: Vector4.TransformRow
  fullName: OpenTK.Mathematics.Vector4.TransformRow
- uid: OpenTK.Mathematics.Matrix4
  commentId: T:OpenTK.Mathematics.Matrix4
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Matrix4.html
  name: Matrix4
  nameWithType: Matrix4
  fullName: OpenTK.Mathematics.Matrix4
- uid: OpenTK.Mathematics.Vector4.Transform*
  commentId: Overload:OpenTK.Mathematics.Vector4.Transform
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Transform(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Quaternion)
  name: Transform
  nameWithType: Vector4.Transform
  fullName: OpenTK.Mathematics.Vector4.Transform
- uid: OpenTK.Mathematics.Quaternion
  commentId: T:OpenTK.Mathematics.Quaternion
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Quaternion.html
  name: Quaternion
  nameWithType: Quaternion
  fullName: OpenTK.Mathematics.Quaternion
- uid: OpenTK.Mathematics.Vector4.TransformColumn*
  commentId: Overload:OpenTK.Mathematics.Vector4.TransformColumn
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.TransformColumn(OpenTK.Mathematics.Matrix4,OpenTK.Mathematics.Vector4)
  name: TransformColumn
  nameWithType: Vector4.TransformColumn
  fullName: OpenTK.Mathematics.Vector4.TransformColumn
- uid: OpenTK.Mathematics.Vector4.Xy*
  commentId: Overload:OpenTK.Mathematics.Vector4.Xy
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Xy
  name: Xy
  nameWithType: Vector4.Xy
  fullName: OpenTK.Mathematics.Vector4.Xy
- uid: OpenTK.Mathematics.Vector4.Xz*
  commentId: Overload:OpenTK.Mathematics.Vector4.Xz
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Xz
  name: Xz
  nameWithType: Vector4.Xz
  fullName: OpenTK.Mathematics.Vector4.Xz
- uid: OpenTK.Mathematics.Vector4.Xw*
  commentId: Overload:OpenTK.Mathematics.Vector4.Xw
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Xw
  name: Xw
  nameWithType: Vector4.Xw
  fullName: OpenTK.Mathematics.Vector4.Xw
- uid: OpenTK.Mathematics.Vector4.Yx*
  commentId: Overload:OpenTK.Mathematics.Vector4.Yx
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Yx
  name: Yx
  nameWithType: Vector4.Yx
  fullName: OpenTK.Mathematics.Vector4.Yx
- uid: OpenTK.Mathematics.Vector4.Yz*
  commentId: Overload:OpenTK.Mathematics.Vector4.Yz
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Yz
  name: Yz
  nameWithType: Vector4.Yz
  fullName: OpenTK.Mathematics.Vector4.Yz
- uid: OpenTK.Mathematics.Vector4.Yw*
  commentId: Overload:OpenTK.Mathematics.Vector4.Yw
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Yw
  name: Yw
  nameWithType: Vector4.Yw
  fullName: OpenTK.Mathematics.Vector4.Yw
- uid: OpenTK.Mathematics.Vector4.Zx*
  commentId: Overload:OpenTK.Mathematics.Vector4.Zx
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Zx
  name: Zx
  nameWithType: Vector4.Zx
  fullName: OpenTK.Mathematics.Vector4.Zx
- uid: OpenTK.Mathematics.Vector4.Zy*
  commentId: Overload:OpenTK.Mathematics.Vector4.Zy
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Zy
  name: Zy
  nameWithType: Vector4.Zy
  fullName: OpenTK.Mathematics.Vector4.Zy
- uid: OpenTK.Mathematics.Vector4.Zw*
  commentId: Overload:OpenTK.Mathematics.Vector4.Zw
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Zw
  name: Zw
  nameWithType: Vector4.Zw
  fullName: OpenTK.Mathematics.Vector4.Zw
- uid: OpenTK.Mathematics.Vector4.Wx*
  commentId: Overload:OpenTK.Mathematics.Vector4.Wx
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Wx
  name: Wx
  nameWithType: Vector4.Wx
  fullName: OpenTK.Mathematics.Vector4.Wx
- uid: OpenTK.Mathematics.Vector4.Wy*
  commentId: Overload:OpenTK.Mathematics.Vector4.Wy
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Wy
  name: Wy
  nameWithType: Vector4.Wy
  fullName: OpenTK.Mathematics.Vector4.Wy
- uid: OpenTK.Mathematics.Vector4.Wz*
  commentId: Overload:OpenTK.Mathematics.Vector4.Wz
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Wz
  name: Wz
  nameWithType: Vector4.Wz
  fullName: OpenTK.Mathematics.Vector4.Wz
- uid: OpenTK.Mathematics.Vector4.Xyz*
  commentId: Overload:OpenTK.Mathematics.Vector4.Xyz
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Xyz
  name: Xyz
  nameWithType: Vector4.Xyz
  fullName: OpenTK.Mathematics.Vector4.Xyz
- uid: OpenTK.Mathematics.Vector4.Xyw*
  commentId: Overload:OpenTK.Mathematics.Vector4.Xyw
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Xyw
  name: Xyw
  nameWithType: Vector4.Xyw
  fullName: OpenTK.Mathematics.Vector4.Xyw
- uid: OpenTK.Mathematics.Vector4.Xzy*
  commentId: Overload:OpenTK.Mathematics.Vector4.Xzy
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Xzy
  name: Xzy
  nameWithType: Vector4.Xzy
  fullName: OpenTK.Mathematics.Vector4.Xzy
- uid: OpenTK.Mathematics.Vector4.Xzw*
  commentId: Overload:OpenTK.Mathematics.Vector4.Xzw
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Xzw
  name: Xzw
  nameWithType: Vector4.Xzw
  fullName: OpenTK.Mathematics.Vector4.Xzw
- uid: OpenTK.Mathematics.Vector4.Xwy*
  commentId: Overload:OpenTK.Mathematics.Vector4.Xwy
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Xwy
  name: Xwy
  nameWithType: Vector4.Xwy
  fullName: OpenTK.Mathematics.Vector4.Xwy
- uid: OpenTK.Mathematics.Vector4.Xwz*
  commentId: Overload:OpenTK.Mathematics.Vector4.Xwz
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Xwz
  name: Xwz
  nameWithType: Vector4.Xwz
  fullName: OpenTK.Mathematics.Vector4.Xwz
- uid: OpenTK.Mathematics.Vector4.Yxz*
  commentId: Overload:OpenTK.Mathematics.Vector4.Yxz
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Yxz
  name: Yxz
  nameWithType: Vector4.Yxz
  fullName: OpenTK.Mathematics.Vector4.Yxz
- uid: OpenTK.Mathematics.Vector4.Yxw*
  commentId: Overload:OpenTK.Mathematics.Vector4.Yxw
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Yxw
  name: Yxw
  nameWithType: Vector4.Yxw
  fullName: OpenTK.Mathematics.Vector4.Yxw
- uid: OpenTK.Mathematics.Vector4.Yzx*
  commentId: Overload:OpenTK.Mathematics.Vector4.Yzx
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Yzx
  name: Yzx
  nameWithType: Vector4.Yzx
  fullName: OpenTK.Mathematics.Vector4.Yzx
- uid: OpenTK.Mathematics.Vector4.Yzw*
  commentId: Overload:OpenTK.Mathematics.Vector4.Yzw
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Yzw
  name: Yzw
  nameWithType: Vector4.Yzw
  fullName: OpenTK.Mathematics.Vector4.Yzw
- uid: OpenTK.Mathematics.Vector4.Ywx*
  commentId: Overload:OpenTK.Mathematics.Vector4.Ywx
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Ywx
  name: Ywx
  nameWithType: Vector4.Ywx
  fullName: OpenTK.Mathematics.Vector4.Ywx
- uid: OpenTK.Mathematics.Vector4.Ywz*
  commentId: Overload:OpenTK.Mathematics.Vector4.Ywz
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Ywz
  name: Ywz
  nameWithType: Vector4.Ywz
  fullName: OpenTK.Mathematics.Vector4.Ywz
- uid: OpenTK.Mathematics.Vector4.Zxy*
  commentId: Overload:OpenTK.Mathematics.Vector4.Zxy
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Zxy
  name: Zxy
  nameWithType: Vector4.Zxy
  fullName: OpenTK.Mathematics.Vector4.Zxy
- uid: OpenTK.Mathematics.Vector4.Zxw*
  commentId: Overload:OpenTK.Mathematics.Vector4.Zxw
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Zxw
  name: Zxw
  nameWithType: Vector4.Zxw
  fullName: OpenTK.Mathematics.Vector4.Zxw
- uid: OpenTK.Mathematics.Vector4.Zyx*
  commentId: Overload:OpenTK.Mathematics.Vector4.Zyx
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Zyx
  name: Zyx
  nameWithType: Vector4.Zyx
  fullName: OpenTK.Mathematics.Vector4.Zyx
- uid: OpenTK.Mathematics.Vector4.Zyw*
  commentId: Overload:OpenTK.Mathematics.Vector4.Zyw
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Zyw
  name: Zyw
  nameWithType: Vector4.Zyw
  fullName: OpenTK.Mathematics.Vector4.Zyw
- uid: OpenTK.Mathematics.Vector4.Zwx*
  commentId: Overload:OpenTK.Mathematics.Vector4.Zwx
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Zwx
  name: Zwx
  nameWithType: Vector4.Zwx
  fullName: OpenTK.Mathematics.Vector4.Zwx
- uid: OpenTK.Mathematics.Vector4.Zwy*
  commentId: Overload:OpenTK.Mathematics.Vector4.Zwy
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Zwy
  name: Zwy
  nameWithType: Vector4.Zwy
  fullName: OpenTK.Mathematics.Vector4.Zwy
- uid: OpenTK.Mathematics.Vector4.Wxy*
  commentId: Overload:OpenTK.Mathematics.Vector4.Wxy
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Wxy
  name: Wxy
  nameWithType: Vector4.Wxy
  fullName: OpenTK.Mathematics.Vector4.Wxy
- uid: OpenTK.Mathematics.Vector4.Wxz*
  commentId: Overload:OpenTK.Mathematics.Vector4.Wxz
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Wxz
  name: Wxz
  nameWithType: Vector4.Wxz
  fullName: OpenTK.Mathematics.Vector4.Wxz
- uid: OpenTK.Mathematics.Vector4.Wyx*
  commentId: Overload:OpenTK.Mathematics.Vector4.Wyx
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Wyx
  name: Wyx
  nameWithType: Vector4.Wyx
  fullName: OpenTK.Mathematics.Vector4.Wyx
- uid: OpenTK.Mathematics.Vector4.Wyz*
  commentId: Overload:OpenTK.Mathematics.Vector4.Wyz
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Wyz
  name: Wyz
  nameWithType: Vector4.Wyz
  fullName: OpenTK.Mathematics.Vector4.Wyz
- uid: OpenTK.Mathematics.Vector4.Wzx*
  commentId: Overload:OpenTK.Mathematics.Vector4.Wzx
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Wzx
  name: Wzx
  nameWithType: Vector4.Wzx
  fullName: OpenTK.Mathematics.Vector4.Wzx
- uid: OpenTK.Mathematics.Vector4.Wzy*
  commentId: Overload:OpenTK.Mathematics.Vector4.Wzy
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Wzy
  name: Wzy
  nameWithType: Vector4.Wzy
  fullName: OpenTK.Mathematics.Vector4.Wzy
- uid: OpenTK.Mathematics.Vector4.Xywz*
  commentId: Overload:OpenTK.Mathematics.Vector4.Xywz
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Xywz
  name: Xywz
  nameWithType: Vector4.Xywz
  fullName: OpenTK.Mathematics.Vector4.Xywz
- uid: OpenTK.Mathematics.Vector4.Xzyw*
  commentId: Overload:OpenTK.Mathematics.Vector4.Xzyw
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Xzyw
  name: Xzyw
  nameWithType: Vector4.Xzyw
  fullName: OpenTK.Mathematics.Vector4.Xzyw
- uid: OpenTK.Mathematics.Vector4.Xzwy*
  commentId: Overload:OpenTK.Mathematics.Vector4.Xzwy
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Xzwy
  name: Xzwy
  nameWithType: Vector4.Xzwy
  fullName: OpenTK.Mathematics.Vector4.Xzwy
- uid: OpenTK.Mathematics.Vector4.Xwyz*
  commentId: Overload:OpenTK.Mathematics.Vector4.Xwyz
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Xwyz
  name: Xwyz
  nameWithType: Vector4.Xwyz
  fullName: OpenTK.Mathematics.Vector4.Xwyz
- uid: OpenTK.Mathematics.Vector4.Xwzy*
  commentId: Overload:OpenTK.Mathematics.Vector4.Xwzy
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Xwzy
  name: Xwzy
  nameWithType: Vector4.Xwzy
  fullName: OpenTK.Mathematics.Vector4.Xwzy
- uid: OpenTK.Mathematics.Vector4.Yxzw*
  commentId: Overload:OpenTK.Mathematics.Vector4.Yxzw
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Yxzw
  name: Yxzw
  nameWithType: Vector4.Yxzw
  fullName: OpenTK.Mathematics.Vector4.Yxzw
- uid: OpenTK.Mathematics.Vector4.Yxwz*
  commentId: Overload:OpenTK.Mathematics.Vector4.Yxwz
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Yxwz
  name: Yxwz
  nameWithType: Vector4.Yxwz
  fullName: OpenTK.Mathematics.Vector4.Yxwz
- uid: OpenTK.Mathematics.Vector4.Yyzw*
  commentId: Overload:OpenTK.Mathematics.Vector4.Yyzw
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Yyzw
  name: Yyzw
  nameWithType: Vector4.Yyzw
  fullName: OpenTK.Mathematics.Vector4.Yyzw
- uid: OpenTK.Mathematics.Vector4.Yywz*
  commentId: Overload:OpenTK.Mathematics.Vector4.Yywz
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Yywz
  name: Yywz
  nameWithType: Vector4.Yywz
  fullName: OpenTK.Mathematics.Vector4.Yywz
- uid: OpenTK.Mathematics.Vector4.Yzxw*
  commentId: Overload:OpenTK.Mathematics.Vector4.Yzxw
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Yzxw
  name: Yzxw
  nameWithType: Vector4.Yzxw
  fullName: OpenTK.Mathematics.Vector4.Yzxw
- uid: OpenTK.Mathematics.Vector4.Yzwx*
  commentId: Overload:OpenTK.Mathematics.Vector4.Yzwx
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Yzwx
  name: Yzwx
  nameWithType: Vector4.Yzwx
  fullName: OpenTK.Mathematics.Vector4.Yzwx
- uid: OpenTK.Mathematics.Vector4.Ywxz*
  commentId: Overload:OpenTK.Mathematics.Vector4.Ywxz
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Ywxz
  name: Ywxz
  nameWithType: Vector4.Ywxz
  fullName: OpenTK.Mathematics.Vector4.Ywxz
- uid: OpenTK.Mathematics.Vector4.Ywzx*
  commentId: Overload:OpenTK.Mathematics.Vector4.Ywzx
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Ywzx
  name: Ywzx
  nameWithType: Vector4.Ywzx
  fullName: OpenTK.Mathematics.Vector4.Ywzx
- uid: OpenTK.Mathematics.Vector4.Zxyw*
  commentId: Overload:OpenTK.Mathematics.Vector4.Zxyw
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Zxyw
  name: Zxyw
  nameWithType: Vector4.Zxyw
  fullName: OpenTK.Mathematics.Vector4.Zxyw
- uid: OpenTK.Mathematics.Vector4.Zxwy*
  commentId: Overload:OpenTK.Mathematics.Vector4.Zxwy
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Zxwy
  name: Zxwy
  nameWithType: Vector4.Zxwy
  fullName: OpenTK.Mathematics.Vector4.Zxwy
- uid: OpenTK.Mathematics.Vector4.Zyxw*
  commentId: Overload:OpenTK.Mathematics.Vector4.Zyxw
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Zyxw
  name: Zyxw
  nameWithType: Vector4.Zyxw
  fullName: OpenTK.Mathematics.Vector4.Zyxw
- uid: OpenTK.Mathematics.Vector4.Zywx*
  commentId: Overload:OpenTK.Mathematics.Vector4.Zywx
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Zywx
  name: Zywx
  nameWithType: Vector4.Zywx
  fullName: OpenTK.Mathematics.Vector4.Zywx
- uid: OpenTK.Mathematics.Vector4.Zwxy*
  commentId: Overload:OpenTK.Mathematics.Vector4.Zwxy
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Zwxy
  name: Zwxy
  nameWithType: Vector4.Zwxy
  fullName: OpenTK.Mathematics.Vector4.Zwxy
- uid: OpenTK.Mathematics.Vector4.Zwyx*
  commentId: Overload:OpenTK.Mathematics.Vector4.Zwyx
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Zwyx
  name: Zwyx
  nameWithType: Vector4.Zwyx
  fullName: OpenTK.Mathematics.Vector4.Zwyx
- uid: OpenTK.Mathematics.Vector4.Zwzy*
  commentId: Overload:OpenTK.Mathematics.Vector4.Zwzy
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Zwzy
  name: Zwzy
  nameWithType: Vector4.Zwzy
  fullName: OpenTK.Mathematics.Vector4.Zwzy
- uid: OpenTK.Mathematics.Vector4.Wxyz*
  commentId: Overload:OpenTK.Mathematics.Vector4.Wxyz
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Wxyz
  name: Wxyz
  nameWithType: Vector4.Wxyz
  fullName: OpenTK.Mathematics.Vector4.Wxyz
- uid: OpenTK.Mathematics.Vector4.Wxzy*
  commentId: Overload:OpenTK.Mathematics.Vector4.Wxzy
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Wxzy
  name: Wxzy
  nameWithType: Vector4.Wxzy
  fullName: OpenTK.Mathematics.Vector4.Wxzy
- uid: OpenTK.Mathematics.Vector4.Wyxz*
  commentId: Overload:OpenTK.Mathematics.Vector4.Wyxz
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Wyxz
  name: Wyxz
  nameWithType: Vector4.Wyxz
  fullName: OpenTK.Mathematics.Vector4.Wyxz
- uid: OpenTK.Mathematics.Vector4.Wyzx*
  commentId: Overload:OpenTK.Mathematics.Vector4.Wyzx
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Wyzx
  name: Wyzx
  nameWithType: Vector4.Wyzx
  fullName: OpenTK.Mathematics.Vector4.Wyzx
- uid: OpenTK.Mathematics.Vector4.Wzxy*
  commentId: Overload:OpenTK.Mathematics.Vector4.Wzxy
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Wzxy
  name: Wzxy
  nameWithType: Vector4.Wzxy
  fullName: OpenTK.Mathematics.Vector4.Wzxy
- uid: OpenTK.Mathematics.Vector4.Wzyx*
  commentId: Overload:OpenTK.Mathematics.Vector4.Wzyx
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Wzyx
  name: Wzyx
  nameWithType: Vector4.Wzyx
  fullName: OpenTK.Mathematics.Vector4.Wzyx
- uid: OpenTK.Mathematics.Vector4.Wzyw*
  commentId: Overload:OpenTK.Mathematics.Vector4.Wzyw
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Wzyw
  name: Wzyw
  nameWithType: Vector4.Wzyw
  fullName: OpenTK.Mathematics.Vector4.Wzyw
- uid: OpenTK.Mathematics.Vector4.op_Addition*
  commentId: Overload:OpenTK.Mathematics.Vector4.op_Addition
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.op_Addition(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  name: operator +
  nameWithType: Vector4.operator +
  fullName: OpenTK.Mathematics.Vector4.operator +
  nameWithType.vb: Vector4.+
  fullName.vb: OpenTK.Mathematics.Vector4.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector4.op_Addition*
    name: +
    href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.op_Addition(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
- uid: OpenTK.Mathematics.Vector4.op_Subtraction*
  commentId: Overload:OpenTK.Mathematics.Vector4.op_Subtraction
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.op_Subtraction(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  name: operator -
  nameWithType: Vector4.operator -
  fullName: OpenTK.Mathematics.Vector4.operator -
  nameWithType.vb: Vector4.-
  fullName.vb: OpenTK.Mathematics.Vector4.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector4.op_Subtraction*
    name: '-'
    href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.op_Subtraction(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
- uid: OpenTK.Mathematics.Vector4.op_UnaryNegation*
  commentId: Overload:OpenTK.Mathematics.Vector4.op_UnaryNegation
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.op_UnaryNegation(OpenTK.Mathematics.Vector4)
  name: operator -
  nameWithType: Vector4.operator -
  fullName: OpenTK.Mathematics.Vector4.operator -
  nameWithType.vb: Vector4.-
  fullName.vb: OpenTK.Mathematics.Vector4.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector4.op_UnaryNegation*
    name: '-'
    href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.op_UnaryNegation(OpenTK.Mathematics.Vector4)
- uid: OpenTK.Mathematics.Vector4.op_Multiply*
  commentId: Overload:OpenTK.Mathematics.Vector4.op_Multiply
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.op_Multiply(OpenTK.Mathematics.Vector4,System.Single)
  name: operator *
  nameWithType: Vector4.operator *
  fullName: OpenTK.Mathematics.Vector4.operator *
  nameWithType.vb: Vector4.*
  fullName.vb: OpenTK.Mathematics.Vector4.*
  name.vb: '*'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector4.op_Multiply*
    name: '*'
    href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.op_Multiply(OpenTK.Mathematics.Vector4,System.Single)
- uid: OpenTK.Mathematics.Vector4.op_Division*
  commentId: Overload:OpenTK.Mathematics.Vector4.op_Division
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.op_Division(OpenTK.Mathematics.Vector4,System.Single)
  name: operator /
  nameWithType: Vector4.operator /
  fullName: OpenTK.Mathematics.Vector4.operator /
  nameWithType.vb: Vector4./
  fullName.vb: OpenTK.Mathematics.Vector4./
  name.vb: /
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector4.op_Division*
    name: /
    href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.op_Division(OpenTK.Mathematics.Vector4,System.Single)
- uid: OpenTK.Mathematics.Vector4.op_Equality*
  commentId: Overload:OpenTK.Mathematics.Vector4.op_Equality
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.op_Equality(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  name: operator ==
  nameWithType: Vector4.operator ==
  fullName: OpenTK.Mathematics.Vector4.operator ==
  nameWithType.vb: Vector4.=
  fullName.vb: OpenTK.Mathematics.Vector4.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector4.op_Equality*
    name: ==
    href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.op_Equality(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: OpenTK.Mathematics.Vector4.op_Inequality*
  commentId: Overload:OpenTK.Mathematics.Vector4.op_Inequality
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.op_Inequality(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
  name: operator !=
  nameWithType: Vector4.operator !=
  fullName: OpenTK.Mathematics.Vector4.operator !=
  nameWithType.vb: Vector4.<>
  fullName.vb: OpenTK.Mathematics.Vector4.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector4.op_Inequality*
    name: '!='
    href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.op_Inequality(OpenTK.Mathematics.Vector4,OpenTK.Mathematics.Vector4)
- uid: OpenTK.Mathematics.Vector4.op_Explicit*
  commentId: Overload:OpenTK.Mathematics.Vector4.op_Explicit
  name: explicit operator
  nameWithType: Vector4.explicit operator
  fullName: OpenTK.Mathematics.Vector4.explicit operator
  nameWithType.vb: Vector4.CType
  fullName.vb: OpenTK.Mathematics.Vector4.CType
  name.vb: CType
  spec.csharp:
  - name: explicit
  - name: " "
  - name: operator
- uid: System.Single*
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float*
  nameWithType: float*
  fullName: float*
  nameWithType.vb: Single*
  fullName.vb: Single*
  name.vb: Single*
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '*'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '*'
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.intptr
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: OpenTK.Mathematics.Color4
  commentId: T:OpenTK.Mathematics.Color4
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Color4.html
  name: Color4
  nameWithType: Color4
  fullName: OpenTK.Mathematics.Color4
- uid: OpenTK.Mathematics.Vector4.op_Implicit*
  commentId: Overload:OpenTK.Mathematics.Vector4.op_Implicit
  name: implicit operator
  nameWithType: Vector4.implicit operator
  fullName: OpenTK.Mathematics.Vector4.implicit operator
  nameWithType.vb: Vector4.CType
  fullName.vb: OpenTK.Mathematics.Vector4.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: OpenTK.Mathematics.Vector4d
  commentId: T:OpenTK.Mathematics.Vector4d
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector4d.html
  name: Vector4d
  nameWithType: Vector4d
  fullName: OpenTK.Mathematics.Vector4d
- uid: OpenTK.Mathematics.Vector4h
  commentId: T:OpenTK.Mathematics.Vector4h
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector4h.html
  name: Vector4h
  nameWithType: Vector4h
  fullName: OpenTK.Mathematics.Vector4h
- uid: OpenTK.Mathematics.Vector4i
  commentId: T:OpenTK.Mathematics.Vector4i
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector4i.html
  name: Vector4i
  nameWithType: Vector4i
  fullName: OpenTK.Mathematics.Vector4i
- uid: System.ValueTuple{System.Single,System.Single,System.Single,System.Single}
  commentId: T:System.ValueTuple{System.Single,System.Single,System.Single,System.Single}
  parent: System
  definition: System.ValueTuple`4
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: (float X, float Y, float Z, float W)
  nameWithType: (float X, float Y, float Z, float W)
  fullName: (float X, float Y, float Z, float W)
  nameWithType.vb: (X As Single, Y As Single, Z As Single, W As Single)
  fullName.vb: (X As Single, Y As Single, Z As Single, W As Single)
  name.vb: (X As Single, Y As Single, Z As Single, W As Single)
  spec.csharp:
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: " "
  - uid: System.ValueTuple{System.Single,System.Single,System.Single,System.Single}.X
    name: X
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single,system.single-.x
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: " "
  - uid: System.ValueTuple{System.Single,System.Single,System.Single,System.Single}.Y
    name: Y
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single,system.single-.y
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: " "
  - uid: System.ValueTuple{System.Single,System.Single,System.Single,System.Single}.Z
    name: Z
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single,system.single-.z
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: " "
  - uid: System.ValueTuple{System.Single,System.Single,System.Single,System.Single}.W
    name: W
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single,system.single-.w
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Single,System.Single,System.Single,System.Single}.X
    name: X
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single,system.single-.x
  - name: " "
  - name: As
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Single,System.Single,System.Single,System.Single}.Y
    name: Y
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single,system.single-.y
  - name: " "
  - name: As
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Single,System.Single,System.Single,System.Single}.Z
    name: Z
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single,system.single-.z
  - name: " "
  - name: As
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Single,System.Single,System.Single,System.Single}.W
    name: W
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single,system.single-.w
  - name: " "
  - name: As
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.ValueTuple`4
  commentId: T:System.ValueTuple`4
  name: (T1, T2, T3, T4)
  nameWithType: (T1, T2, T3, T4)
  fullName: (T1, T2, T3, T4)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: OpenTK.Mathematics.Vector4.ToString*
  commentId: Overload:OpenTK.Mathematics.Vector4.ToString
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.ToString
  name: ToString
  nameWithType: Vector4.ToString
  fullName: OpenTK.Mathematics.Vector4.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  name: ToString(string, IFormatProvider)
  nameWithType: IFormattable.ToString(string, IFormatProvider)
  fullName: System.IFormattable.ToString(string, System.IFormatProvider)
  nameWithType.vb: IFormattable.ToString(String, IFormatProvider)
  fullName.vb: System.IFormattable.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: OpenTK.Mathematics.Vector4.Equals*
  commentId: Overload:OpenTK.Mathematics.Vector4.Equals
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Equals(System.Object)
  name: Equals
  nameWithType: Vector4.Equals
  fullName: OpenTK.Mathematics.Vector4.Equals
- uid: System.IEquatable{OpenTK.Mathematics.Vector4}.Equals(OpenTK.Mathematics.Vector4)
  commentId: M:System.IEquatable{OpenTK.Mathematics.Vector4}.Equals(OpenTK.Mathematics.Vector4)
  parent: System.IEquatable{OpenTK.Mathematics.Vector4}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-opentk.mathematics.vector4-.equals#system-iequatable((opentk-mathematics-vector4))-equals(opentk-mathematics-vector4)
  name: Equals(Vector4)
  nameWithType: IEquatable<Vector4>.Equals(Vector4)
  fullName: System.IEquatable<OpenTK.Mathematics.Vector4>.Equals(OpenTK.Mathematics.Vector4)
  nameWithType.vb: IEquatable(Of Vector4).Equals(Vector4)
  fullName.vb: System.IEquatable(Of OpenTK.Mathematics.Vector4).Equals(OpenTK.Mathematics.Vector4)
  spec.csharp:
  - uid: System.IEquatable{OpenTK.Mathematics.Vector4}.Equals(OpenTK.Mathematics.Vector4)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-opentk.mathematics.vector4-.equals#system-iequatable((opentk-mathematics-vector4))-equals(opentk-mathematics-vector4)
  - name: (
  - uid: OpenTK.Mathematics.Vector4
    name: Vector4
    href: OpenTK.Mathematics.Vector4.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{OpenTK.Mathematics.Vector4}.Equals(OpenTK.Mathematics.Vector4)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-opentk.mathematics.vector4-.equals#system-iequatable((opentk-mathematics-vector4))-equals(opentk-mathematics-vector4)
  - name: (
  - uid: OpenTK.Mathematics.Vector4
    name: Vector4
    href: OpenTK.Mathematics.Vector4.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: OpenTK.Mathematics.Vector4.GetHashCode*
  commentId: Overload:OpenTK.Mathematics.Vector4.GetHashCode
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.GetHashCode
  name: GetHashCode
  nameWithType: Vector4.GetHashCode
  fullName: OpenTK.Mathematics.Vector4.GetHashCode
- uid: OpenTK.Mathematics.Vector4.Deconstruct*
  commentId: Overload:OpenTK.Mathematics.Vector4.Deconstruct
  href: OpenTK.Mathematics.Vector4.html#OpenTK.Mathematics.Vector4.Deconstruct(System.Single@,System.Single@,System.Single@,System.Single@)
  name: Deconstruct
  nameWithType: Vector4.Deconstruct
  fullName: OpenTK.Mathematics.Vector4.Deconstruct
