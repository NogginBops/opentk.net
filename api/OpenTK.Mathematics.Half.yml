### YamlMime:ManagedReference
items:
- uid: OpenTK.Mathematics.Half
  commentId: T:OpenTK.Mathematics.Half
  id: Half
  parent: OpenTK.Mathematics
  children:
  - OpenTK.Mathematics.Half.#ctor(System.Double,System.Boolean)
  - OpenTK.Mathematics.Half.#ctor(System.Double)
  - OpenTK.Mathematics.Half.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - OpenTK.Mathematics.Half.#ctor(System.Single,System.Boolean)
  - OpenTK.Mathematics.Half.#ctor(System.Single)
  - OpenTK.Mathematics.Half.CompareTo(OpenTK.Mathematics.Half)
  - OpenTK.Mathematics.Half.Epsilon
  - OpenTK.Mathematics.Half.Equals(OpenTK.Mathematics.Half)
  - OpenTK.Mathematics.Half.Equals(System.Object)
  - OpenTK.Mathematics.Half.FromBinaryStream(System.IO.BinaryReader)
  - OpenTK.Mathematics.Half.FromBytes(System.Byte[],System.Int32)
  - OpenTK.Mathematics.Half.GetBytes(OpenTK.Mathematics.Half)
  - OpenTK.Mathematics.Half.GetHashCode
  - OpenTK.Mathematics.Half.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - OpenTK.Mathematics.Half.IsNaN
  - OpenTK.Mathematics.Half.IsNegativeInfinity
  - OpenTK.Mathematics.Half.IsPositiveInfinity
  - OpenTK.Mathematics.Half.IsZero
  - OpenTK.Mathematics.Half.MaxValue
  - OpenTK.Mathematics.Half.MinNormalizedValue
  - OpenTK.Mathematics.Half.MinValue
  - OpenTK.Mathematics.Half.op_Equality(OpenTK.Mathematics.Half,OpenTK.Mathematics.Half)
  - OpenTK.Mathematics.Half.op_Explicit(System.Double)~OpenTK.Mathematics.Half
  - OpenTK.Mathematics.Half.op_Explicit(System.Single)~OpenTK.Mathematics.Half
  - OpenTK.Mathematics.Half.op_Implicit(OpenTK.Mathematics.Half)~System.Double
  - OpenTK.Mathematics.Half.op_Implicit(OpenTK.Mathematics.Half)~System.Single
  - OpenTK.Mathematics.Half.op_Inequality(OpenTK.Mathematics.Half,OpenTK.Mathematics.Half)
  - OpenTK.Mathematics.Half.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  - OpenTK.Mathematics.Half.Parse(System.String)
  - OpenTK.Mathematics.Half.SizeInBytes
  - OpenTK.Mathematics.Half.ToBinaryStream(System.IO.BinaryWriter)
  - OpenTK.Mathematics.Half.ToSingle
  - OpenTK.Mathematics.Half.ToString
  - OpenTK.Mathematics.Half.ToString(System.IFormatProvider)
  - OpenTK.Mathematics.Half.ToString(System.String,System.IFormatProvider)
  - OpenTK.Mathematics.Half.ToString(System.String)
  - OpenTK.Mathematics.Half.TryParse(System.String,OpenTK.Mathematics.Half@)
  - OpenTK.Mathematics.Half.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,OpenTK.Mathematics.Half@)
  langs:
  - csharp
  - vb
  name: Half
  nameWithType: Half
  fullName: OpenTK.Mathematics.Half
  type: Struct
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Half
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 79
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    The name Half is derived from half-precision floating-point number.

    It occupies only 16 bits, which are split into 1 Sign bit, 5 Exponent bits and 10 Mantissa bits.
  remarks: >-
    Quote from ARB_half_float_pixel specification:

    Any representable 16-bit floating-point value is legal as input to a GL command that accepts 16-bit floating-point

    data.  The

    result of providing a value that is not a floating-point number (such as infinity or NaN) to such a command is

    unspecified,

    but must not lead to GL interruption or termination. Providing a denormalized number or negative zero to GL must

    yield

    predictable results.
  example: []
  syntax:
    content: >-
      [Serializable]

      public struct Half : ISerializable, IComparable<Half>, IFormattable, IEquatable<Half>
    content.vb: >-
      <Serializable>

      Public Structure Half Implements ISerializable, IComparable(Of Half), IFormattable, IEquatable(Of Half)
  implements:
  - System.Runtime.Serialization.ISerializable
  - System.IComparable{OpenTK.Mathematics.Half}
  - System.IFormattable
  - System.IEquatable{OpenTK.Mathematics.Half}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Half.IsZero
  commentId: P:OpenTK.Mathematics.Half.IsZero
  id: IsZero
  parent: OpenTK.Mathematics.Half
  langs:
  - csharp
  - vb
  name: IsZero
  nameWithType: Half.IsZero
  fullName: OpenTK.Mathematics.Half.IsZero
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: IsZero
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 88
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets a value indicating whether the Half is zero.
  example: []
  syntax:
    content: public readonly bool IsZero { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsZero As Boolean
  overload: OpenTK.Mathematics.Half.IsZero*
- uid: OpenTK.Mathematics.Half.IsNaN
  commentId: P:OpenTK.Mathematics.Half.IsNaN
  id: IsNaN
  parent: OpenTK.Mathematics.Half
  langs:
  - csharp
  - vb
  name: IsNaN
  nameWithType: Half.IsNaN
  fullName: OpenTK.Mathematics.Half.IsNaN
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: IsNaN
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 93
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets a value indicating whether the Half represents Not A Number (NaN).
  example: []
  syntax:
    content: public readonly bool IsNaN { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsNaN As Boolean
  overload: OpenTK.Mathematics.Half.IsNaN*
- uid: OpenTK.Mathematics.Half.IsPositiveInfinity
  commentId: P:OpenTK.Mathematics.Half.IsPositiveInfinity
  id: IsPositiveInfinity
  parent: OpenTK.Mathematics.Half
  langs:
  - csharp
  - vb
  name: IsPositiveInfinity
  nameWithType: Half.IsPositiveInfinity
  fullName: OpenTK.Mathematics.Half.IsPositiveInfinity
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: IsPositiveInfinity
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 98
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets a value indicating whether the Half represents positive infinity.
  example: []
  syntax:
    content: public readonly bool IsPositiveInfinity { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPositiveInfinity As Boolean
  overload: OpenTK.Mathematics.Half.IsPositiveInfinity*
- uid: OpenTK.Mathematics.Half.IsNegativeInfinity
  commentId: P:OpenTK.Mathematics.Half.IsNegativeInfinity
  id: IsNegativeInfinity
  parent: OpenTK.Mathematics.Half
  langs:
  - csharp
  - vb
  name: IsNegativeInfinity
  nameWithType: Half.IsNegativeInfinity
  fullName: OpenTK.Mathematics.Half.IsNegativeInfinity
  type: Property
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: IsNegativeInfinity
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 103
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets a value indicating whether the Half represents negative infinity.
  example: []
  syntax:
    content: public readonly bool IsNegativeInfinity { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsNegativeInfinity As Boolean
  overload: OpenTK.Mathematics.Half.IsNegativeInfinity*
- uid: OpenTK.Mathematics.Half.#ctor(System.Single)
  commentId: M:OpenTK.Mathematics.Half.#ctor(System.Single)
  id: '#ctor(System.Single)'
  parent: OpenTK.Mathematics.Half
  langs:
  - csharp
  - vb
  name: Half(float)
  nameWithType: Half.Half(float)
  fullName: OpenTK.Mathematics.Half.Half(float)
  type: Constructor
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: .ctor
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 110
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Initializes a new instance of the <xref href="OpenTK.Mathematics.Half" data-throw-if-not-resolved="false"></xref> struct with <code class="paramref">f</code> being converted

    into a 16-bit half-precision floating-point number.
  example: []
  syntax:
    content: public Half(float f)
    parameters:
    - id: f
      type: System.Single
      description: 32-bit single-precision floating-point number.
    content.vb: Public Sub New(f As Single)
  overload: OpenTK.Mathematics.Half.#ctor*
  nameWithType.vb: Half.New(Single)
  fullName.vb: OpenTK.Mathematics.Half.New(Single)
  name.vb: New(Single)
- uid: OpenTK.Mathematics.Half.#ctor(System.Single,System.Boolean)
  commentId: M:OpenTK.Mathematics.Half.#ctor(System.Single,System.Boolean)
  id: '#ctor(System.Single,System.Boolean)'
  parent: OpenTK.Mathematics.Half
  langs:
  - csharp
  - vb
  name: Half(float, bool)
  nameWithType: Half.Half(float, bool)
  fullName: OpenTK.Mathematics.Half.Half(float, bool)
  type: Constructor
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: .ctor
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 125
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Initializes a new instance of the <xref href="OpenTK.Mathematics.Half" data-throw-if-not-resolved="false"></xref> struct with <code class="paramref">f</code> being converted

    into a 16-bit half-precision floating-point number.
  example: []
  syntax:
    content: public Half(float f, bool throwOnError)
    parameters:
    - id: f
      type: System.Single
      description: 32-bit single-precision floating-point number.
    - id: throwOnError
      type: System.Boolean
      description: Enable checks that will throw if the conversion result is not meaningful.
    content.vb: Public Sub New(f As Single, throwOnError As Boolean)
  overload: OpenTK.Mathematics.Half.#ctor*
  nameWithType.vb: Half.New(Single, Boolean)
  fullName.vb: OpenTK.Mathematics.Half.New(Single, Boolean)
  name.vb: New(Single, Boolean)
- uid: OpenTK.Mathematics.Half.#ctor(System.Double)
  commentId: M:OpenTK.Mathematics.Half.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: OpenTK.Mathematics.Half
  langs:
  - csharp
  - vb
  name: Half(double)
  nameWithType: Half.Half(double)
  fullName: OpenTK.Mathematics.Half.Half(double)
  type: Constructor
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: .ctor
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 164
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Initializes a new instance of the <xref href="OpenTK.Mathematics.Half" data-throw-if-not-resolved="false"></xref> struct with <code class="paramref">d</code> being converted

    into a 16-bit half-precision floating-point number.
  example: []
  syntax:
    content: public Half(double d)
    parameters:
    - id: d
      type: System.Double
      description: 64-bit double-precision floating-point number.
    content.vb: Public Sub New(d As Double)
  overload: OpenTK.Mathematics.Half.#ctor*
  nameWithType.vb: Half.New(Double)
  fullName.vb: OpenTK.Mathematics.Half.New(Double)
  name.vb: New(Double)
- uid: OpenTK.Mathematics.Half.#ctor(System.Double,System.Boolean)
  commentId: M:OpenTK.Mathematics.Half.#ctor(System.Double,System.Boolean)
  id: '#ctor(System.Double,System.Boolean)'
  parent: OpenTK.Mathematics.Half
  langs:
  - csharp
  - vb
  name: Half(double, bool)
  nameWithType: Half.Half(double, bool)
  fullName: OpenTK.Mathematics.Half.Half(double, bool)
  type: Constructor
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: .ctor
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 175
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Initializes a new instance of the <xref href="OpenTK.Mathematics.Half" data-throw-if-not-resolved="false"></xref> struct with <code class="paramref">d</code> being converted

    into a 16-bit half-precision floating-point number.
  example: []
  syntax:
    content: public Half(double d, bool throwOnError)
    parameters:
    - id: d
      type: System.Double
      description: 64-bit double-precision floating-point number.
    - id: throwOnError
      type: System.Boolean
      description: Enable checks that will throw if the conversion result is not meaningful.
    content.vb: Public Sub New(d As Double, throwOnError As Boolean)
  overload: OpenTK.Mathematics.Half.#ctor*
  nameWithType.vb: Half.New(Double, Boolean)
  fullName.vb: OpenTK.Mathematics.Half.New(Double, Boolean)
  name.vb: New(Double, Boolean)
- uid: OpenTK.Mathematics.Half.ToSingle
  commentId: M:OpenTK.Mathematics.Half.ToSingle
  id: ToSingle
  parent: OpenTK.Mathematics.Half
  langs:
  - csharp
  - vb
  name: ToSingle()
  nameWithType: Half.ToSingle()
  fullName: OpenTK.Mathematics.Half.ToSingle()
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: ToSingle
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 267
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts the 16-bit half to 32-bit floating-point.
  example: []
  syntax:
    content: public float ToSingle()
    return:
      type: System.Single
      description: A single-precision floating-point number.
    content.vb: Public Function ToSingle() As Single
  overload: OpenTK.Mathematics.Half.ToSingle*
- uid: OpenTK.Mathematics.Half.op_Explicit(System.Single)~OpenTK.Mathematics.Half
  commentId: M:OpenTK.Mathematics.Half.op_Explicit(System.Single)~OpenTK.Mathematics.Half
  id: op_Explicit(System.Single)~OpenTK.Mathematics.Half
  parent: OpenTK.Mathematics.Half
  langs:
  - csharp
  - vb
  name: explicit operator Half(float)
  nameWithType: Half.explicit operator Half(float)
  fullName: OpenTK.Mathematics.Half.explicit operator OpenTK.Mathematics.Half(float)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: op_Explicit
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 334
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts a System.Single to a OpenTK.Half.
  example: []
  syntax:
    content: >-
      [Pure]

      public static explicit operator Half(float f)
    parameters:
    - id: f
      type: System.Single
      description: The <xref href="System.Single" data-throw-if-not-resolved="false"></xref> value to convert.
    return:
      type: OpenTK.Mathematics.Half
      description: The <xref href="OpenTK.Mathematics.Half" data-throw-if-not-resolved="false"></xref> result of the conversion.
    content.vb: >-
      <Pure>

      Public Shared Narrowing Operator CType(f As Single) As Half
  overload: OpenTK.Mathematics.Half.op_Explicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Half.CType(Single)
  fullName.vb: OpenTK.Mathematics.Half.CType(Single)
  name.vb: CType(Single)
- uid: OpenTK.Mathematics.Half.op_Explicit(System.Double)~OpenTK.Mathematics.Half
  commentId: M:OpenTK.Mathematics.Half.op_Explicit(System.Double)~OpenTK.Mathematics.Half
  id: op_Explicit(System.Double)~OpenTK.Mathematics.Half
  parent: OpenTK.Mathematics.Half
  langs:
  - csharp
  - vb
  name: explicit operator Half(double)
  nameWithType: Half.explicit operator Half(double)
  fullName: OpenTK.Mathematics.Half.explicit operator OpenTK.Mathematics.Half(double)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: op_Explicit
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 349
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts a System.Double to a OpenTK.Half.
  example: []
  syntax:
    content: >-
      [Pure]

      public static explicit operator Half(double d)
    parameters:
    - id: d
      type: System.Double
      description: The <xref href="System.Double" data-throw-if-not-resolved="false"></xref> value to convert.
    return:
      type: OpenTK.Mathematics.Half
      description: The <xref href="OpenTK.Mathematics.Half" data-throw-if-not-resolved="false"></xref> result of the conversion.
    content.vb: >-
      <Pure>

      Public Shared Narrowing Operator CType(d As Double) As Half
  overload: OpenTK.Mathematics.Half.op_Explicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Half.CType(Double)
  fullName.vb: OpenTK.Mathematics.Half.CType(Double)
  name.vb: CType(Double)
- uid: OpenTK.Mathematics.Half.op_Implicit(OpenTK.Mathematics.Half)~System.Single
  commentId: M:OpenTK.Mathematics.Half.op_Implicit(OpenTK.Mathematics.Half)~System.Single
  id: op_Implicit(OpenTK.Mathematics.Half)~System.Single
  parent: OpenTK.Mathematics.Half
  langs:
  - csharp
  - vb
  name: implicit operator float(Half)
  nameWithType: Half.implicit operator float(Half)
  fullName: OpenTK.Mathematics.Half.implicit operator float(OpenTK.Mathematics.Half)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: op_Implicit
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 364
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts a OpenTK.Half to a System.Single.
  example: []
  syntax:
    content: >-
      [Pure]

      public static implicit operator float(Half h)
    parameters:
    - id: h
      type: OpenTK.Mathematics.Half
      description: The <xref href="OpenTK.Mathematics.Half" data-throw-if-not-resolved="false"></xref> value to convert.
    return:
      type: System.Single
      description: The <xref href="System.Single" data-throw-if-not-resolved="false"></xref> result of the conversion.
    content.vb: >-
      <Pure>

      Public Shared Widening Operator CType(h As Half) As Single
  overload: OpenTK.Mathematics.Half.op_Implicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Half.CType(Half)
  fullName.vb: OpenTK.Mathematics.Half.CType(OpenTK.Mathematics.Half)
  name.vb: CType(Half)
- uid: OpenTK.Mathematics.Half.op_Implicit(OpenTK.Mathematics.Half)~System.Double
  commentId: M:OpenTK.Mathematics.Half.op_Implicit(OpenTK.Mathematics.Half)~System.Double
  id: op_Implicit(OpenTK.Mathematics.Half)~System.Double
  parent: OpenTK.Mathematics.Half
  langs:
  - csharp
  - vb
  name: implicit operator double(Half)
  nameWithType: Half.implicit operator double(Half)
  fullName: OpenTK.Mathematics.Half.implicit operator double(OpenTK.Mathematics.Half)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: op_Implicit
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 379
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts a OpenTK.Half to a System.Double.
  example: []
  syntax:
    content: >-
      [Pure]

      public static implicit operator double(Half h)
    parameters:
    - id: h
      type: OpenTK.Mathematics.Half
      description: The <xref href="OpenTK.Mathematics.Half" data-throw-if-not-resolved="false"></xref> value to convert.
    return:
      type: System.Double
      description: The <xref href="System.Double" data-throw-if-not-resolved="false"></xref> result of the conversion.
    content.vb: >-
      <Pure>

      Public Shared Widening Operator CType(h As Half) As Double
  overload: OpenTK.Mathematics.Half.op_Implicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Half.CType(Half)
  fullName.vb: OpenTK.Mathematics.Half.CType(OpenTK.Mathematics.Half)
  name.vb: CType(Half)
- uid: OpenTK.Mathematics.Half.op_Equality(OpenTK.Mathematics.Half,OpenTK.Mathematics.Half)
  commentId: M:OpenTK.Mathematics.Half.op_Equality(OpenTK.Mathematics.Half,OpenTK.Mathematics.Half)
  id: op_Equality(OpenTK.Mathematics.Half,OpenTK.Mathematics.Half)
  parent: OpenTK.Mathematics.Half
  langs:
  - csharp
  - vb
  name: operator ==(Half, Half)
  nameWithType: Half.operator ==(Half, Half)
  fullName: OpenTK.Mathematics.Half.operator ==(OpenTK.Mathematics.Half, OpenTK.Mathematics.Half)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: op_Equality
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 385
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  syntax:
    content: public static bool operator ==(Half left, Half right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Half
    - id: right
      type: OpenTK.Mathematics.Half
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As Half, right As Half) As Boolean
  overload: OpenTK.Mathematics.Half.op_Equality*
  nameWithType.vb: Half.=(Half, Half)
  fullName.vb: OpenTK.Mathematics.Half.=(OpenTK.Mathematics.Half, OpenTK.Mathematics.Half)
  name.vb: =(Half, Half)
- uid: OpenTK.Mathematics.Half.op_Inequality(OpenTK.Mathematics.Half,OpenTK.Mathematics.Half)
  commentId: M:OpenTK.Mathematics.Half.op_Inequality(OpenTK.Mathematics.Half,OpenTK.Mathematics.Half)
  id: op_Inequality(OpenTK.Mathematics.Half,OpenTK.Mathematics.Half)
  parent: OpenTK.Mathematics.Half
  langs:
  - csharp
  - vb
  name: operator !=(Half, Half)
  nameWithType: Half.operator !=(Half, Half)
  fullName: OpenTK.Mathematics.Half.operator !=(OpenTK.Mathematics.Half, OpenTK.Mathematics.Half)
  type: Operator
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: op_Inequality
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 390
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  syntax:
    content: public static bool operator !=(Half left, Half right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Half
    - id: right
      type: OpenTK.Mathematics.Half
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As Half, right As Half) As Boolean
  overload: OpenTK.Mathematics.Half.op_Inequality*
  nameWithType.vb: Half.<>(Half, Half)
  fullName.vb: OpenTK.Mathematics.Half.<>(OpenTK.Mathematics.Half, OpenTK.Mathematics.Half)
  name.vb: <>(Half, Half)
- uid: OpenTK.Mathematics.Half.SizeInBytes
  commentId: F:OpenTK.Mathematics.Half.SizeInBytes
  id: SizeInBytes
  parent: OpenTK.Mathematics.Half
  langs:
  - csharp
  - vb
  name: SizeInBytes
  nameWithType: Half.SizeInBytes
  fullName: OpenTK.Mathematics.Half.SizeInBytes
  type: Field
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: SizeInBytes
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 398
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: The size in bytes for an instance of the Half struct.
  example: []
  syntax:
    content: public static readonly int SizeInBytes
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly SizeInBytes As Integer
- uid: OpenTK.Mathematics.Half.MinValue
  commentId: F:OpenTK.Mathematics.Half.MinValue
  id: MinValue
  parent: OpenTK.Mathematics.Half
  langs:
  - csharp
  - vb
  name: MinValue
  nameWithType: Half.MinValue
  fullName: OpenTK.Mathematics.Half.MinValue
  type: Field
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: MinValue
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 403
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Smallest positive half.
  example: []
  syntax:
    content: public static readonly float MinValue
    return:
      type: System.Single
    content.vb: Public Shared ReadOnly MinValue As Single
- uid: OpenTK.Mathematics.Half.MinNormalizedValue
  commentId: F:OpenTK.Mathematics.Half.MinNormalizedValue
  id: MinNormalizedValue
  parent: OpenTK.Mathematics.Half
  langs:
  - csharp
  - vb
  name: MinNormalizedValue
  nameWithType: Half.MinNormalizedValue
  fullName: OpenTK.Mathematics.Half.MinNormalizedValue
  type: Field
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: MinNormalizedValue
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 408
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Smallest positive normalized half.
  example: []
  syntax:
    content: public static readonly float MinNormalizedValue
    return:
      type: System.Single
    content.vb: Public Shared ReadOnly MinNormalizedValue As Single
- uid: OpenTK.Mathematics.Half.MaxValue
  commentId: F:OpenTK.Mathematics.Half.MaxValue
  id: MaxValue
  parent: OpenTK.Mathematics.Half
  langs:
  - csharp
  - vb
  name: MaxValue
  nameWithType: Half.MaxValue
  fullName: OpenTK.Mathematics.Half.MaxValue
  type: Field
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: MaxValue
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 413
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Largest positive half.
  example: []
  syntax:
    content: public static readonly float MaxValue
    return:
      type: System.Single
    content.vb: Public Shared ReadOnly MaxValue As Single
- uid: OpenTK.Mathematics.Half.Epsilon
  commentId: F:OpenTK.Mathematics.Half.Epsilon
  id: Epsilon
  parent: OpenTK.Mathematics.Half
  langs:
  - csharp
  - vb
  name: Epsilon
  nameWithType: Half.Epsilon
  fullName: OpenTK.Mathematics.Half.Epsilon
  type: Field
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Epsilon
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 418
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Smallest positive e for which half (1.0 + e) != half (1.0).
  example: []
  syntax:
    content: public static readonly float Epsilon
    return:
      type: System.Single
    content.vb: Public Shared ReadOnly Epsilon As Single
- uid: OpenTK.Mathematics.Half.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:OpenTK.Mathematics.Half.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: OpenTK.Mathematics.Half
  langs:
  - csharp
  - vb
  name: Half(SerializationInfo, StreamingContext)
  nameWithType: Half.Half(SerializationInfo, StreamingContext)
  fullName: OpenTK.Mathematics.Half.Half(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Constructor
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: .ctor
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 427
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Initializes a new instance of the <xref href="OpenTK.Mathematics.Half" data-throw-if-not-resolved="false"></xref> struct.

    Used by <xref href="System.Runtime.Serialization.ISerializable" data-throw-if-not-resolved="false"></xref> to deserialize the object.
  example: []
  syntax:
    content: public Half(SerializationInfo info, StreamingContext context)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The object that contains a serialized <xref href="OpenTK.Mathematics.Half" data-throw-if-not-resolved="false"></xref> struct.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The destination for this serialization. (This parameter is not used; specify null.).
    content.vb: Public Sub New(info As SerializationInfo, context As StreamingContext)
  overload: OpenTK.Mathematics.Half.#ctor*
  nameWithType.vb: Half.New(SerializationInfo, StreamingContext)
  fullName.vb: OpenTK.Mathematics.Half.New(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  name.vb: New(SerializationInfo, StreamingContext)
- uid: OpenTK.Mathematics.Half.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:OpenTK.Mathematics.Half.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: OpenTK.Mathematics.Half
  langs:
  - csharp
  - vb
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: Half.GetObjectData(SerializationInfo, StreamingContext)
  fullName: OpenTK.Mathematics.Half.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: GetObjectData
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 433
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  example: []
  syntax:
    content: public readonly void GetObjectData(SerializationInfo info, StreamingContext context)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
    - id: context
      type: System.Runtime.Serialization.StreamingContext
    content.vb: Public Sub GetObjectData(info As SerializationInfo, context As StreamingContext)
  overload: OpenTK.Mathematics.Half.GetObjectData*
  implements:
  - System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
- uid: OpenTK.Mathematics.Half.FromBinaryStream(System.IO.BinaryReader)
  commentId: M:OpenTK.Mathematics.Half.FromBinaryStream(System.IO.BinaryReader)
  id: FromBinaryStream(System.IO.BinaryReader)
  parent: OpenTK.Mathematics.Half
  langs:
  - csharp
  - vb
  name: FromBinaryStream(BinaryReader)
  nameWithType: Half.FromBinaryStream(BinaryReader)
  fullName: OpenTK.Mathematics.Half.FromBinaryStream(System.IO.BinaryReader)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: FromBinaryStream
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 443
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Updates the Half by reading from a Stream.
  example: []
  syntax:
    content: public void FromBinaryStream(BinaryReader bin)
    parameters:
    - id: bin
      type: System.IO.BinaryReader
      description: A BinaryReader instance associated with an open Stream.
    content.vb: Public Sub FromBinaryStream(bin As BinaryReader)
  overload: OpenTK.Mathematics.Half.FromBinaryStream*
- uid: OpenTK.Mathematics.Half.ToBinaryStream(System.IO.BinaryWriter)
  commentId: M:OpenTK.Mathematics.Half.ToBinaryStream(System.IO.BinaryWriter)
  id: ToBinaryStream(System.IO.BinaryWriter)
  parent: OpenTK.Mathematics.Half
  langs:
  - csharp
  - vb
  name: ToBinaryStream(BinaryWriter)
  nameWithType: Half.ToBinaryStream(BinaryWriter)
  fullName: OpenTK.Mathematics.Half.ToBinaryStream(System.IO.BinaryWriter)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: ToBinaryStream
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 452
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Writes the Half into a Stream.
  example: []
  syntax:
    content: public readonly void ToBinaryStream(BinaryWriter bin)
    parameters:
    - id: bin
      type: System.IO.BinaryWriter
      description: A BinaryWriter instance associated with an open Stream.
    content.vb: Public Sub ToBinaryStream(bin As BinaryWriter)
  overload: OpenTK.Mathematics.Half.ToBinaryStream*
- uid: OpenTK.Mathematics.Half.GetHashCode
  commentId: M:OpenTK.Mathematics.Half.GetHashCode
  id: GetHashCode
  parent: OpenTK.Mathematics.Half
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Half.GetHashCode()
  fullName: OpenTK.Mathematics.Half.GetHashCode()
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: GetHashCode
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 458
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  example: []
  syntax:
    content: public override readonly int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: OpenTK.Mathematics.Half.GetHashCode*
- uid: OpenTK.Mathematics.Half.Equals(System.Object)
  commentId: M:OpenTK.Mathematics.Half.Equals(System.Object)
  id: Equals(System.Object)
  parent: OpenTK.Mathematics.Half
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: Half.Equals(object)
  fullName: OpenTK.Mathematics.Half.Equals(object)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Equals
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 464
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  example: []
  syntax:
    content: public override readonly bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: OpenTK.Mathematics.Half.Equals*
  nameWithType.vb: Half.Equals(Object)
  fullName.vb: OpenTK.Mathematics.Half.Equals(Object)
  name.vb: Equals(Object)
- uid: OpenTK.Mathematics.Half.Equals(OpenTK.Mathematics.Half)
  commentId: M:OpenTK.Mathematics.Half.Equals(OpenTK.Mathematics.Half)
  id: Equals(OpenTK.Mathematics.Half)
  parent: OpenTK.Mathematics.Half
  langs:
  - csharp
  - vb
  name: Equals(Half)
  nameWithType: Half.Equals(Half)
  fullName: OpenTK.Mathematics.Half.Equals(OpenTK.Mathematics.Half)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Equals
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 474
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a value indicating whether this instance is equal to a specified OpenTK.Half value.
  example: []
  syntax:
    content: >-
      [Pure]

      public readonly bool Equals(Half other)
    parameters:
    - id: other
      type: OpenTK.Mathematics.Half
      description: OpenTK.Half object to compare to this instance..
    return:
      type: System.Boolean
      description: True, if other is equal to this instance; false otherwise.
    content.vb: >-
      <Pure>

      Public Function Equals(other As Half) As Boolean
  overload: OpenTK.Mathematics.Half.Equals*
  implements:
  - System.IEquatable{OpenTK.Mathematics.Half}.Equals(OpenTK.Mathematics.Half)
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Half.CompareTo(OpenTK.Mathematics.Half)
  commentId: M:OpenTK.Mathematics.Half.CompareTo(OpenTK.Mathematics.Half)
  id: CompareTo(OpenTK.Mathematics.Half)
  parent: OpenTK.Mathematics.Half
  langs:
  - csharp
  - vb
  name: CompareTo(Half)
  nameWithType: Half.CompareTo(Half)
  fullName: OpenTK.Mathematics.Half.CompareTo(OpenTK.Mathematics.Half)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: CompareTo
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 527
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Compares this instance to a specified half-precision floating-point number

    and returns an integer that indicates whether the value of this instance

    is less than, equal to, or greater than the value of the specified half-precision

    floating-point number.
  example: []
  syntax:
    content: >-
      [Pure]

      public readonly int CompareTo(Half other)
    parameters:
    - id: other
      type: OpenTK.Mathematics.Half
      description: A half-precision floating-point number to compare.
    return:
      type: System.Int32
      description: >-
        A signed number indicating the relative values of this instance and value. If the number is:
         <p>
        Less than zero, then this instance is less than other, or this instance is not a number

        (OpenTK.Half.NaN) and other is a number.
         </p>
         <p>
        Zero: this instance is equal to value, or both this instance and other

        are not a number (OpenTK.Half.NaN), OpenTK.Half.PositiveInfinity, or

        OpenTK.Half.NegativeInfinity.
         </p>
         <p>
        Greater than zero: this instance is greater than othrs, or this instance is a number

        and other is not a number (OpenTK.Half.NaN).
         </p>
    content.vb: >-
      <Pure>

      Public Function CompareTo(other As Half) As Integer
  overload: OpenTK.Mathematics.Half.CompareTo*
  implements:
  - System.IComparable{OpenTK.Mathematics.Half}.CompareTo(OpenTK.Mathematics.Half)
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Half.ToString
  commentId: M:OpenTK.Mathematics.Half.ToString
  id: ToString
  parent: OpenTK.Mathematics.Half
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Half.ToString()
  fullName: OpenTK.Mathematics.Half.ToString()
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: ToString
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 537
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts this Half into a human-legible string representation.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The string representation of this instance.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: OpenTK.Mathematics.Half.ToString*
- uid: OpenTK.Mathematics.Half.ToString(System.String)
  commentId: M:OpenTK.Mathematics.Half.ToString(System.String)
  id: ToString(System.String)
  parent: OpenTK.Mathematics.Half
  langs:
  - csharp
  - vb
  name: ToString(string)
  nameWithType: Half.ToString(string)
  fullName: OpenTK.Mathematics.Half.ToString(string)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: ToString
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 543
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts this Half into a human-legible string representation.
  example: []
  syntax:
    content: public string ToString(string format)
    parameters:
    - id: format
      type: System.String
      description: Formatting for the output string.
    return:
      type: System.String
      description: The string representation of this instance.
    content.vb: Public Function ToString(format As String) As String
  overload: OpenTK.Mathematics.Half.ToString*
  nameWithType.vb: Half.ToString(String)
  fullName.vb: OpenTK.Mathematics.Half.ToString(String)
  name.vb: ToString(String)
- uid: OpenTK.Mathematics.Half.ToString(System.IFormatProvider)
  commentId: M:OpenTK.Mathematics.Half.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: OpenTK.Mathematics.Half
  langs:
  - csharp
  - vb
  name: ToString(IFormatProvider)
  nameWithType: Half.ToString(IFormatProvider)
  fullName: OpenTK.Mathematics.Half.ToString(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: ToString
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 549
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts this Half into a human-legible string representation.
  example: []
  syntax:
    content: public string ToString(IFormatProvider formatProvider)
    parameters:
    - id: formatProvider
      type: System.IFormatProvider
      description: Culture-specific formatting information.
    return:
      type: System.String
      description: The string representation of this instance.
    content.vb: Public Function ToString(formatProvider As IFormatProvider) As String
  overload: OpenTK.Mathematics.Half.ToString*
- uid: OpenTK.Mathematics.Half.ToString(System.String,System.IFormatProvider)
  commentId: M:OpenTK.Mathematics.Half.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: OpenTK.Mathematics.Half
  langs:
  - csharp
  - vb
  name: ToString(string, IFormatProvider)
  nameWithType: Half.ToString(string, IFormatProvider)
  fullName: OpenTK.Mathematics.Half.ToString(string, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: ToString
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 560
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts this Half into a human-legible string representation.
  example: []
  syntax:
    content: >-
      [Pure]

      public string ToString(string format, IFormatProvider formatProvider)
    parameters:
    - id: format
      type: System.String
      description: Formatting for the output string.
    - id: formatProvider
      type: System.IFormatProvider
      description: Culture-specific formatting information.
    return:
      type: System.String
      description: The string representation of this instance.
    content.vb: >-
      <Pure>

      Public Function ToString(format As String, formatProvider As IFormatProvider) As String
  overload: OpenTK.Mathematics.Half.ToString*
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Half.ToString(String, IFormatProvider)
  fullName.vb: OpenTK.Mathematics.Half.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
- uid: OpenTK.Mathematics.Half.Parse(System.String)
  commentId: M:OpenTK.Mathematics.Half.Parse(System.String)
  id: Parse(System.String)
  parent: OpenTK.Mathematics.Half
  langs:
  - csharp
  - vb
  name: Parse(string)
  nameWithType: Half.Parse(string)
  fullName: OpenTK.Mathematics.Half.Parse(string)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Parse
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 571
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts the string representation of a number to a half-precision floating-point equivalent.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Half Parse(string s)
    parameters:
    - id: s
      type: System.String
      description: String representation of the number to convert.
    return:
      type: OpenTK.Mathematics.Half
      description: A new Half instance.
    content.vb: >-
      <Pure>

      Public Shared Function Parse(s As String) As Half
  overload: OpenTK.Mathematics.Half.Parse*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Half.Parse(String)
  fullName.vb: OpenTK.Mathematics.Half.Parse(String)
  name.vb: Parse(String)
- uid: OpenTK.Mathematics.Half.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  commentId: M:OpenTK.Mathematics.Half.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  id: Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  parent: OpenTK.Mathematics.Half
  langs:
  - csharp
  - vb
  name: Parse(string, NumberStyles, IFormatProvider)
  nameWithType: Half.Parse(string, NumberStyles, IFormatProvider)
  fullName: OpenTK.Mathematics.Half.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Parse
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 584
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts the string representation of a number to a half-precision floating-point equivalent.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Half Parse(string s, NumberStyles style, IFormatProvider provider)
    parameters:
    - id: s
      type: System.String
      description: String representation of the number to convert.
    - id: style
      type: System.Globalization.NumberStyles
      description: Specifies the format of s.
    - id: provider
      type: System.IFormatProvider
      description: Culture-specific formatting information.
    return:
      type: OpenTK.Mathematics.Half
      description: A new Half instance.
    content.vb: >-
      <Pure>

      Public Shared Function Parse(s As String, style As NumberStyles, provider As IFormatProvider) As Half
  overload: OpenTK.Mathematics.Half.Parse*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Half.Parse(String, NumberStyles, IFormatProvider)
  fullName.vb: OpenTK.Mathematics.Half.Parse(String, System.Globalization.NumberStyles, System.IFormatProvider)
  name.vb: Parse(String, NumberStyles, IFormatProvider)
- uid: OpenTK.Mathematics.Half.TryParse(System.String,OpenTK.Mathematics.Half@)
  commentId: M:OpenTK.Mathematics.Half.TryParse(System.String,OpenTK.Mathematics.Half@)
  id: TryParse(System.String,OpenTK.Mathematics.Half@)
  parent: OpenTK.Mathematics.Half
  langs:
  - csharp
  - vb
  name: TryParse(string, out Half)
  nameWithType: Half.TryParse(string, out Half)
  fullName: OpenTK.Mathematics.Half.TryParse(string, out OpenTK.Mathematics.Half)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: TryParse
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 596
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts the string representation of a number to a half-precision floating-point equivalent. Returns success.
  example: []
  syntax:
    content: >-
      [Pure]

      public static bool TryParse(string s, out Half result)
    parameters:
    - id: s
      type: System.String
      description: String representation of the number to convert.
    - id: result
      type: OpenTK.Mathematics.Half
      description: The Half instance to write to.
    return:
      type: System.Boolean
      description: Success.
    content.vb: >-
      <Pure>

      Public Shared Function TryParse(s As String, result As Half) As Boolean
  overload: OpenTK.Mathematics.Half.TryParse*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Half.TryParse(String, Half)
  fullName.vb: OpenTK.Mathematics.Half.TryParse(String, OpenTK.Mathematics.Half)
  name.vb: TryParse(String, Half)
- uid: OpenTK.Mathematics.Half.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,OpenTK.Mathematics.Half@)
  commentId: M:OpenTK.Mathematics.Half.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,OpenTK.Mathematics.Half@)
  id: TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,OpenTK.Mathematics.Half@)
  parent: OpenTK.Mathematics.Half
  langs:
  - csharp
  - vb
  name: TryParse(string, NumberStyles, IFormatProvider, out Half)
  nameWithType: Half.TryParse(string, NumberStyles, IFormatProvider, out Half)
  fullName: OpenTK.Mathematics.Half.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out OpenTK.Mathematics.Half)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: TryParse
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 612
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts the string representation of a number to a half-precision floating-point equivalent. Returns success.
  example: []
  syntax:
    content: >-
      [Pure]

      public static bool TryParse(string s, NumberStyles style, IFormatProvider provider, out Half result)
    parameters:
    - id: s
      type: System.String
      description: String representation of the number to convert.
    - id: style
      type: System.Globalization.NumberStyles
      description: Specifies the format of s.
    - id: provider
      type: System.IFormatProvider
      description: Culture-specific formatting information.
    - id: result
      type: OpenTK.Mathematics.Half
      description: The Half instance to write to.
    return:
      type: System.Boolean
      description: Success.
    content.vb: >-
      <Pure>

      Public Shared Function TryParse(s As String, style As NumberStyles, provider As IFormatProvider, result As Half) As Boolean
  overload: OpenTK.Mathematics.Half.TryParse*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Half.TryParse(String, NumberStyles, IFormatProvider, Half)
  fullName.vb: OpenTK.Mathematics.Half.TryParse(String, System.Globalization.NumberStyles, System.IFormatProvider, OpenTK.Mathematics.Half)
  name.vb: TryParse(String, NumberStyles, IFormatProvider, Half)
- uid: OpenTK.Mathematics.Half.GetBytes(OpenTK.Mathematics.Half)
  commentId: M:OpenTK.Mathematics.Half.GetBytes(OpenTK.Mathematics.Half)
  id: GetBytes(OpenTK.Mathematics.Half)
  parent: OpenTK.Mathematics.Half
  langs:
  - csharp
  - vb
  name: GetBytes(Half)
  nameWithType: Half.GetBytes(Half)
  fullName: OpenTK.Mathematics.Half.GetBytes(OpenTK.Mathematics.Half)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: GetBytes
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 625
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns the Half as an array of bytes.
  example: []
  syntax:
    content: >-
      [Pure]

      public static byte[] GetBytes(Half h)
    parameters:
    - id: h
      type: OpenTK.Mathematics.Half
      description: The Half to convert.
    return:
      type: System.Byte[]
      description: The input as byte array.
    content.vb: >-
      <Pure>

      Public Shared Function GetBytes(h As Half) As Byte()
  overload: OpenTK.Mathematics.Half.GetBytes*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Half.FromBytes(System.Byte[],System.Int32)
  commentId: M:OpenTK.Mathematics.Half.FromBytes(System.Byte[],System.Int32)
  id: FromBytes(System.Byte[],System.Int32)
  parent: OpenTK.Mathematics.Half
  langs:
  - csharp
  - vb
  name: FromBytes(byte[], int)
  nameWithType: Half.FromBytes(byte[], int)
  fullName: OpenTK.Mathematics.Half.FromBytes(byte[], int)
  type: Method
  source:
    remote:
      path: src/OpenTK.Mathematics/Data/Half.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: FromBytes
    path: opentk/src/OpenTK.Mathematics/Data/Half.cs
    startLine: 637
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts an array of bytes into Half.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Half FromBytes(byte[] value, int startIndex)
    parameters:
    - id: value
      type: System.Byte[]
      description: A Half in it's byte[] representation.
    - id: startIndex
      type: System.Int32
      description: The starting position within value.
    return:
      type: OpenTK.Mathematics.Half
      description: A new Half instance.
    content.vb: >-
      <Pure>

      Public Shared Function FromBytes(value As Byte(), startIndex As Integer) As Half
  overload: OpenTK.Mathematics.Half.FromBytes*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Half.FromBytes(Byte(), Integer)
  fullName.vb: OpenTK.Mathematics.Half.FromBytes(Byte(), Integer)
  name.vb: FromBytes(Byte(), Integer)
references:
- uid: OpenTK.Mathematics
  commentId: N:OpenTK.Mathematics
  href: OpenTK.html
  name: OpenTK.Mathematics
  nameWithType: OpenTK.Mathematics
  fullName: OpenTK.Mathematics
  spec.csharp:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Mathematics
    name: Mathematics
    href: OpenTK.Mathematics.html
  spec.vb:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Mathematics
    name: Mathematics
    href: OpenTK.Mathematics.html
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.iserializable
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.IComparable{OpenTK.Mathematics.Half}
  commentId: T:System.IComparable{OpenTK.Mathematics.Half}
  parent: System
  definition: System.IComparable`1
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  name: IComparable<Half>
  nameWithType: IComparable<Half>
  fullName: System.IComparable<OpenTK.Mathematics.Half>
  nameWithType.vb: IComparable(Of Half)
  fullName.vb: System.IComparable(Of OpenTK.Mathematics.Half)
  name.vb: IComparable(Of Half)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: <
  - uid: OpenTK.Mathematics.Half
    name: Half
    href: OpenTK.Mathematics.Half.html
  - name: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: (
  - name: Of
  - name: " "
  - uid: OpenTK.Mathematics.Half
    name: Half
    href: OpenTK.Mathematics.Half.html
  - name: )
- uid: System.IFormattable
  commentId: T:System.IFormattable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable
  name: IFormattable
  nameWithType: IFormattable
  fullName: System.IFormattable
- uid: System.IEquatable{OpenTK.Mathematics.Half}
  commentId: T:System.IEquatable{OpenTK.Mathematics.Half}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Half>
  nameWithType: IEquatable<Half>
  fullName: System.IEquatable<OpenTK.Mathematics.Half>
  nameWithType.vb: IEquatable(Of Half)
  fullName.vb: System.IEquatable(Of OpenTK.Mathematics.Half)
  name.vb: IEquatable(Of Half)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: OpenTK.Mathematics.Half
    name: Half
    href: OpenTK.Mathematics.Half.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: OpenTK.Mathematics.Half
    name: Half
    href: OpenTK.Mathematics.Half.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Runtime
    name: Runtime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime
  - name: .
  - uid: System.Runtime.Serialization
    name: Serialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Runtime
    name: Runtime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime
  - name: .
  - uid: System.Runtime.Serialization
    name: Serialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: OpenTK.Mathematics.Half.IsZero*
  commentId: Overload:OpenTK.Mathematics.Half.IsZero
  href: OpenTK.Mathematics.Half.html#OpenTK.Mathematics.Half.IsZero
  name: IsZero
  nameWithType: Half.IsZero
  fullName: OpenTK.Mathematics.Half.IsZero
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: OpenTK.Mathematics.Half.IsNaN*
  commentId: Overload:OpenTK.Mathematics.Half.IsNaN
  href: OpenTK.Mathematics.Half.html#OpenTK.Mathematics.Half.IsNaN
  name: IsNaN
  nameWithType: Half.IsNaN
  fullName: OpenTK.Mathematics.Half.IsNaN
- uid: OpenTK.Mathematics.Half.IsPositiveInfinity*
  commentId: Overload:OpenTK.Mathematics.Half.IsPositiveInfinity
  href: OpenTK.Mathematics.Half.html#OpenTK.Mathematics.Half.IsPositiveInfinity
  name: IsPositiveInfinity
  nameWithType: Half.IsPositiveInfinity
  fullName: OpenTK.Mathematics.Half.IsPositiveInfinity
- uid: OpenTK.Mathematics.Half.IsNegativeInfinity*
  commentId: Overload:OpenTK.Mathematics.Half.IsNegativeInfinity
  href: OpenTK.Mathematics.Half.html#OpenTK.Mathematics.Half.IsNegativeInfinity
  name: IsNegativeInfinity
  nameWithType: Half.IsNegativeInfinity
  fullName: OpenTK.Mathematics.Half.IsNegativeInfinity
- uid: OpenTK.Mathematics.Half
  commentId: T:OpenTK.Mathematics.Half
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Half.html
  name: Half
  nameWithType: Half
  fullName: OpenTK.Mathematics.Half
- uid: OpenTK.Mathematics.Half.#ctor*
  commentId: Overload:OpenTK.Mathematics.Half.#ctor
  href: OpenTK.Mathematics.Half.html#OpenTK.Mathematics.Half.#ctor(System.Single)
  name: Half
  nameWithType: Half.Half
  fullName: OpenTK.Mathematics.Half.Half
  nameWithType.vb: Half.New
  fullName.vb: OpenTK.Mathematics.Half.New
  name.vb: New
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: OpenTK.Mathematics.Half.ToSingle*
  commentId: Overload:OpenTK.Mathematics.Half.ToSingle
  href: OpenTK.Mathematics.Half.html#OpenTK.Mathematics.Half.ToSingle
  name: ToSingle
  nameWithType: Half.ToSingle
  fullName: OpenTK.Mathematics.Half.ToSingle
- uid: OpenTK.Mathematics.Half.op_Explicit*
  commentId: Overload:OpenTK.Mathematics.Half.op_Explicit
  name: explicit operator
  nameWithType: Half.explicit operator
  fullName: OpenTK.Mathematics.Half.explicit operator
  nameWithType.vb: Half.CType
  fullName.vb: OpenTK.Mathematics.Half.CType
  name.vb: CType
  spec.csharp:
  - name: explicit
  - name: " "
  - name: operator
- uid: OpenTK.Mathematics.Half.op_Implicit*
  commentId: Overload:OpenTK.Mathematics.Half.op_Implicit
  name: implicit operator
  nameWithType: Half.implicit operator
  fullName: OpenTK.Mathematics.Half.implicit operator
  nameWithType.vb: Half.CType
  fullName.vb: OpenTK.Mathematics.Half.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: OpenTK.Mathematics.Half.op_Equality*
  commentId: Overload:OpenTK.Mathematics.Half.op_Equality
  href: OpenTK.Mathematics.Half.html#OpenTK.Mathematics.Half.op_Equality(OpenTK.Mathematics.Half,OpenTK.Mathematics.Half)
  name: operator ==
  nameWithType: Half.operator ==
  fullName: OpenTK.Mathematics.Half.operator ==
  nameWithType.vb: Half.=
  fullName.vb: OpenTK.Mathematics.Half.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Half.op_Equality*
    name: ==
    href: OpenTK.Mathematics.Half.html#OpenTK.Mathematics.Half.op_Equality(OpenTK.Mathematics.Half,OpenTK.Mathematics.Half)
- uid: OpenTK.Mathematics.Half.op_Inequality*
  commentId: Overload:OpenTK.Mathematics.Half.op_Inequality
  href: OpenTK.Mathematics.Half.html#OpenTK.Mathematics.Half.op_Inequality(OpenTK.Mathematics.Half,OpenTK.Mathematics.Half)
  name: operator !=
  nameWithType: Half.operator !=
  fullName: OpenTK.Mathematics.Half.operator !=
  nameWithType.vb: Half.<>
  fullName.vb: OpenTK.Mathematics.Half.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Half.op_Inequality*
    name: '!='
    href: OpenTK.Mathematics.Half.html#OpenTK.Mathematics.Half.op_Inequality(OpenTK.Mathematics.Half,OpenTK.Mathematics.Half)
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Runtime.Serialization.SerializationInfo
  commentId: T:System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.serializationinfo
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  commentId: T:System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.streamingcontext
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: OpenTK.Mathematics.Half.GetObjectData*
  commentId: Overload:OpenTK.Mathematics.Half.GetObjectData
  href: OpenTK.Mathematics.Half.html#OpenTK.Mathematics.Half.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: GetObjectData
  nameWithType: Half.GetObjectData
  fullName: OpenTK.Mathematics.Half.GetObjectData
- uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Serialization.ISerializable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.iserializable.getobjectdata
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.iserializable.getobjectdata
  - name: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.serializationinfo
  - name: ','
  - name: " "
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.streamingcontext
  - name: )
  spec.vb:
  - uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.iserializable.getobjectdata
  - name: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.serializationinfo
  - name: ','
  - name: " "
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.streamingcontext
  - name: )
- uid: OpenTK.Mathematics.Half.FromBinaryStream*
  commentId: Overload:OpenTK.Mathematics.Half.FromBinaryStream
  href: OpenTK.Mathematics.Half.html#OpenTK.Mathematics.Half.FromBinaryStream(System.IO.BinaryReader)
  name: FromBinaryStream
  nameWithType: Half.FromBinaryStream
  fullName: OpenTK.Mathematics.Half.FromBinaryStream
- uid: System.IO.BinaryReader
  commentId: T:System.IO.BinaryReader
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binaryreader
  name: BinaryReader
  nameWithType: BinaryReader
  fullName: System.IO.BinaryReader
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: OpenTK.Mathematics.Half.ToBinaryStream*
  commentId: Overload:OpenTK.Mathematics.Half.ToBinaryStream
  href: OpenTK.Mathematics.Half.html#OpenTK.Mathematics.Half.ToBinaryStream(System.IO.BinaryWriter)
  name: ToBinaryStream
  nameWithType: Half.ToBinaryStream
  fullName: OpenTK.Mathematics.Half.ToBinaryStream
- uid: System.IO.BinaryWriter
  commentId: T:System.IO.BinaryWriter
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter
  name: BinaryWriter
  nameWithType: BinaryWriter
  fullName: System.IO.BinaryWriter
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: OpenTK.Mathematics.Half.GetHashCode*
  commentId: Overload:OpenTK.Mathematics.Half.GetHashCode
  href: OpenTK.Mathematics.Half.html#OpenTK.Mathematics.Half.GetHashCode
  name: GetHashCode
  nameWithType: Half.GetHashCode
  fullName: OpenTK.Mathematics.Half.GetHashCode
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: OpenTK.Mathematics.Half.Equals*
  commentId: Overload:OpenTK.Mathematics.Half.Equals
  href: OpenTK.Mathematics.Half.html#OpenTK.Mathematics.Half.Equals(System.Object)
  name: Equals
  nameWithType: Half.Equals
  fullName: OpenTK.Mathematics.Half.Equals
- uid: System.IEquatable{OpenTK.Mathematics.Half}.Equals(OpenTK.Mathematics.Half)
  commentId: M:System.IEquatable{OpenTK.Mathematics.Half}.Equals(OpenTK.Mathematics.Half)
  parent: System.IEquatable{OpenTK.Mathematics.Half}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-opentk.mathematics.half-.equals#system-iequatable((opentk-mathematics-half))-equals(opentk-mathematics-half)
  name: Equals(Half)
  nameWithType: IEquatable<Half>.Equals(Half)
  fullName: System.IEquatable<OpenTK.Mathematics.Half>.Equals(OpenTK.Mathematics.Half)
  nameWithType.vb: IEquatable(Of Half).Equals(Half)
  fullName.vb: System.IEquatable(Of OpenTK.Mathematics.Half).Equals(OpenTK.Mathematics.Half)
  spec.csharp:
  - uid: System.IEquatable{OpenTK.Mathematics.Half}.Equals(OpenTK.Mathematics.Half)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-opentk.mathematics.half-.equals#system-iequatable((opentk-mathematics-half))-equals(opentk-mathematics-half)
  - name: (
  - uid: OpenTK.Mathematics.Half
    name: Half
    href: OpenTK.Mathematics.Half.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{OpenTK.Mathematics.Half}.Equals(OpenTK.Mathematics.Half)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-opentk.mathematics.half-.equals#system-iequatable((opentk-mathematics-half))-equals(opentk-mathematics-half)
  - name: (
  - uid: OpenTK.Mathematics.Half
    name: Half
    href: OpenTK.Mathematics.Half.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: OpenTK.Mathematics.Half.CompareTo*
  commentId: Overload:OpenTK.Mathematics.Half.CompareTo
  href: OpenTK.Mathematics.Half.html#OpenTK.Mathematics.Half.CompareTo(OpenTK.Mathematics.Half)
  name: CompareTo
  nameWithType: Half.CompareTo
  fullName: OpenTK.Mathematics.Half.CompareTo
- uid: System.IComparable{OpenTK.Mathematics.Half}.CompareTo(OpenTK.Mathematics.Half)
  commentId: M:System.IComparable{OpenTK.Mathematics.Half}.CompareTo(OpenTK.Mathematics.Half)
  parent: System.IComparable{OpenTK.Mathematics.Half}
  definition: System.IComparable`1.CompareTo(`0)
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-opentk.mathematics.half-.compareto#system-icomparable((opentk-mathematics-half))-compareto(opentk-mathematics-half)
  name: CompareTo(Half)
  nameWithType: IComparable<Half>.CompareTo(Half)
  fullName: System.IComparable<OpenTK.Mathematics.Half>.CompareTo(OpenTK.Mathematics.Half)
  nameWithType.vb: IComparable(Of Half).CompareTo(Half)
  fullName.vb: System.IComparable(Of OpenTK.Mathematics.Half).CompareTo(OpenTK.Mathematics.Half)
  spec.csharp:
  - uid: System.IComparable{OpenTK.Mathematics.Half}.CompareTo(OpenTK.Mathematics.Half)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-opentk.mathematics.half-.compareto#system-icomparable((opentk-mathematics-half))-compareto(opentk-mathematics-half)
  - name: (
  - uid: OpenTK.Mathematics.Half
    name: Half
    href: OpenTK.Mathematics.Half.html
  - name: )
  spec.vb:
  - uid: System.IComparable{OpenTK.Mathematics.Half}.CompareTo(OpenTK.Mathematics.Half)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-opentk.mathematics.half-.compareto#system-icomparable((opentk-mathematics-half))-compareto(opentk-mathematics-half)
  - name: (
  - uid: OpenTK.Mathematics.Half
    name: Half
    href: OpenTK.Mathematics.Half.html
  - name: )
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: OpenTK.Mathematics.Half.ToString*
  commentId: Overload:OpenTK.Mathematics.Half.ToString
  href: OpenTK.Mathematics.Half.html#OpenTK.Mathematics.Half.ToString
  name: ToString
  nameWithType: Half.ToString
  fullName: OpenTK.Mathematics.Half.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  name: ToString(string, IFormatProvider)
  nameWithType: IFormattable.ToString(string, IFormatProvider)
  fullName: System.IFormattable.ToString(string, System.IFormatProvider)
  nameWithType.vb: IFormattable.ToString(String, IFormatProvider)
  fullName.vb: System.IFormattable.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
- uid: OpenTK.Mathematics.Half.Parse*
  commentId: Overload:OpenTK.Mathematics.Half.Parse
  href: OpenTK.Mathematics.Half.html#OpenTK.Mathematics.Half.Parse(System.String)
  name: Parse
  nameWithType: Half.Parse
  fullName: OpenTK.Mathematics.Half.Parse
- uid: System.Globalization.NumberStyles
  commentId: T:System.Globalization.NumberStyles
  parent: System.Globalization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.globalization.numberstyles
  name: NumberStyles
  nameWithType: NumberStyles
  fullName: System.Globalization.NumberStyles
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Globalization
    name: Globalization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Globalization
    name: Globalization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization
- uid: OpenTK.Mathematics.Half.TryParse*
  commentId: Overload:OpenTK.Mathematics.Half.TryParse
  href: OpenTK.Mathematics.Half.html#OpenTK.Mathematics.Half.TryParse(System.String,OpenTK.Mathematics.Half@)
  name: TryParse
  nameWithType: Half.TryParse
  fullName: OpenTK.Mathematics.Half.TryParse
- uid: OpenTK.Mathematics.Half.GetBytes*
  commentId: Overload:OpenTK.Mathematics.Half.GetBytes
  href: OpenTK.Mathematics.Half.html#OpenTK.Mathematics.Half.GetBytes(OpenTK.Mathematics.Half)
  name: GetBytes
  nameWithType: Half.GetBytes
  fullName: OpenTK.Mathematics.Half.GetBytes
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: OpenTK.Mathematics.Half.FromBytes*
  commentId: Overload:OpenTK.Mathematics.Half.FromBytes
  href: OpenTK.Mathematics.Half.html#OpenTK.Mathematics.Half.FromBytes(System.Byte[],System.Int32)
  name: FromBytes
  nameWithType: Half.FromBytes
  fullName: OpenTK.Mathematics.Half.FromBytes
