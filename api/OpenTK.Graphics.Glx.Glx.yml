### YamlMime:ManagedReference
items:
- uid: OpenTK.Graphics.Glx.Glx
  commentId: T:OpenTK.Graphics.Glx.Glx
  id: Glx
  parent: OpenTK.Graphics.Glx
  children:
  - OpenTK.Graphics.Glx.Glx.ChooseFBConfig(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32*,System.Int32*)
  - OpenTK.Graphics.Glx.Glx.ChooseFBConfig(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32@,System.Int32@)
  - OpenTK.Graphics.Glx.Glx.ChooseFBConfig(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32[],System.Int32[])
  - OpenTK.Graphics.Glx.Glx.ChooseFBConfig(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.ReadOnlySpan{System.Int32},System.Span{System.Int32})
  - OpenTK.Graphics.Glx.Glx.ChooseVisual(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32*)
  - OpenTK.Graphics.Glx.Glx.ChooseVisual(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32@)
  - OpenTK.Graphics.Glx.Glx.ChooseVisual(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32[])
  - OpenTK.Graphics.Glx.Glx.ChooseVisual(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Span{System.Int32})
  - OpenTK.Graphics.Glx.Glx.CopyContext(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXContext,OpenTK.Graphics.Glx.GLXContext,System.UInt64)
  - OpenTK.Graphics.Glx.Glx.CreateContext(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.XVisualInfoPtr,OpenTK.Graphics.Glx.GLXContext,System.Boolean)
  - OpenTK.Graphics.Glx.Glx.CreateGLXPixmap(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.XVisualInfoPtr,OpenTK.Graphics.Glx.Pixmap)
  - OpenTK.Graphics.Glx.Glx.CreateNewContext(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,System.Int32,OpenTK.Graphics.Glx.GLXContext,System.Boolean)
  - OpenTK.Graphics.Glx.Glx.CreatePbuffer(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,System.Int32*)
  - OpenTK.Graphics.Glx.Glx.CreatePbuffer(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,System.Int32@)
  - OpenTK.Graphics.Glx.Glx.CreatePbuffer(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,System.Int32[])
  - OpenTK.Graphics.Glx.Glx.CreatePbuffer(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,System.ReadOnlySpan{System.Int32})
  - OpenTK.Graphics.Glx.Glx.CreatePixmap(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.Pixmap,System.Int32*)
  - OpenTK.Graphics.Glx.Glx.CreatePixmap(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.Pixmap,System.Int32@)
  - OpenTK.Graphics.Glx.Glx.CreatePixmap(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.Pixmap,System.Int32[])
  - OpenTK.Graphics.Glx.Glx.CreatePixmap(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.Pixmap,System.ReadOnlySpan{System.Int32})
  - OpenTK.Graphics.Glx.Glx.CreateWindow(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.Window,System.Int32*)
  - OpenTK.Graphics.Glx.Glx.CreateWindow(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.Window,System.Int32@)
  - OpenTK.Graphics.Glx.Glx.CreateWindow(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.Window,System.Int32[])
  - OpenTK.Graphics.Glx.Glx.CreateWindow(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.Window,System.ReadOnlySpan{System.Int32})
  - OpenTK.Graphics.Glx.Glx.DestroyContext(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXContext)
  - OpenTK.Graphics.Glx.Glx.DestroyGLXPixmap(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXPixmap)
  - OpenTK.Graphics.Glx.Glx.DestroyPbuffer(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXPbuffer)
  - OpenTK.Graphics.Glx.Glx.DestroyPixmap(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXPixmap)
  - OpenTK.Graphics.Glx.Glx.DestroyWindow(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXWindow)
  - OpenTK.Graphics.Glx.Glx.GetClientString(OpenTK.Graphics.Glx.DisplayPtr,System.Int32)
  - OpenTK.Graphics.Glx.Glx.GetClientString_(OpenTK.Graphics.Glx.DisplayPtr,System.Int32)
  - OpenTK.Graphics.Glx.Glx.GetConfig(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.XVisualInfoPtr,System.Int32,System.Int32*)
  - OpenTK.Graphics.Glx.Glx.GetConfig(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.XVisualInfoPtr,System.Int32,System.Int32@)
  - OpenTK.Graphics.Glx.Glx.GetConfig(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.XVisualInfoPtr,System.Int32,System.Int32[])
  - OpenTK.Graphics.Glx.Glx.GetConfig(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.XVisualInfoPtr,System.Int32,System.Span{System.Int32})
  - OpenTK.Graphics.Glx.Glx.GetCurrentContext
  - OpenTK.Graphics.Glx.Glx.GetCurrentDisplay
  - OpenTK.Graphics.Glx.Glx.GetCurrentDrawable
  - OpenTK.Graphics.Glx.Glx.GetCurrentReadDrawable
  - OpenTK.Graphics.Glx.Glx.GetFBConfig(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32@)
  - OpenTK.Graphics.Glx.Glx.GetFBConfig(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32[])
  - OpenTK.Graphics.Glx.Glx.GetFBConfig(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Span{System.Int32})
  - OpenTK.Graphics.Glx.Glx.GetFBConfigAttrib(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,System.Int32,System.Int32*)
  - OpenTK.Graphics.Glx.Glx.GetFBConfigAttrib(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,System.Int32,System.Int32@)
  - OpenTK.Graphics.Glx.Glx.GetFBConfigAttrib(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,System.Int32,System.Int32[])
  - OpenTK.Graphics.Glx.Glx.GetFBConfigAttrib(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,System.Int32,System.Span{System.Int32})
  - OpenTK.Graphics.Glx.Glx.GetFBConfigs(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32*)
  - OpenTK.Graphics.Glx.Glx.GetProcAddress(System.Byte*)
  - OpenTK.Graphics.Glx.Glx.GetProcAddress(System.Byte@)
  - OpenTK.Graphics.Glx.Glx.GetProcAddress(System.Byte[])
  - OpenTK.Graphics.Glx.Glx.GetProcAddress(System.ReadOnlySpan{System.Byte})
  - OpenTK.Graphics.Glx.Glx.GetSelectedEvent(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,System.Span{System.UInt64})
  - OpenTK.Graphics.Glx.Glx.GetSelectedEvent(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,System.UInt64*)
  - OpenTK.Graphics.Glx.Glx.GetSelectedEvent(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,System.UInt64@)
  - OpenTK.Graphics.Glx.Glx.GetSelectedEvent(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,System.UInt64[])
  - OpenTK.Graphics.Glx.Glx.GetVisualFromFBConfig(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig)
  - OpenTK.Graphics.Glx.Glx.IsDirect(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXContext)
  - OpenTK.Graphics.Glx.Glx.MakeContextCurrent(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,OpenTK.Graphics.Glx.GLXDrawable,OpenTK.Graphics.Glx.GLXContext)
  - OpenTK.Graphics.Glx.Glx.MakeCurrent(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,OpenTK.Graphics.Glx.GLXContext)
  - OpenTK.Graphics.Glx.Glx.QueryContext(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXContext,System.Int32,System.Int32*)
  - OpenTK.Graphics.Glx.Glx.QueryContext(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXContext,System.Int32,System.Int32@)
  - OpenTK.Graphics.Glx.Glx.QueryContext(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXContext,System.Int32,System.Int32[])
  - OpenTK.Graphics.Glx.Glx.QueryContext(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXContext,System.Int32,System.Span{System.Int32})
  - OpenTK.Graphics.Glx.Glx.QueryDrawable(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,System.Int32,System.Span{System.UInt32})
  - OpenTK.Graphics.Glx.Glx.QueryDrawable(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,System.Int32,System.UInt32*)
  - OpenTK.Graphics.Glx.Glx.QueryDrawable(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,System.Int32,System.UInt32@)
  - OpenTK.Graphics.Glx.Glx.QueryDrawable(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,System.Int32,System.UInt32[])
  - OpenTK.Graphics.Glx.Glx.QueryExtension(OpenTK.Graphics.Glx.DisplayPtr,System.Int32*,System.Int32*)
  - OpenTK.Graphics.Glx.Glx.QueryExtension(OpenTK.Graphics.Glx.DisplayPtr,System.Int32@,System.Int32@)
  - OpenTK.Graphics.Glx.Glx.QueryExtension(OpenTK.Graphics.Glx.DisplayPtr,System.Int32[],System.Int32[])
  - OpenTK.Graphics.Glx.Glx.QueryExtension(OpenTK.Graphics.Glx.DisplayPtr,System.Span{System.Int32},System.Span{System.Int32})
  - OpenTK.Graphics.Glx.Glx.QueryExtensionsString(OpenTK.Graphics.Glx.DisplayPtr,System.Int32)
  - OpenTK.Graphics.Glx.Glx.QueryExtensionsString_(OpenTK.Graphics.Glx.DisplayPtr,System.Int32)
  - OpenTK.Graphics.Glx.Glx.QueryServerString(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32)
  - OpenTK.Graphics.Glx.Glx.QueryServerString_(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32)
  - OpenTK.Graphics.Glx.Glx.QueryVersion(OpenTK.Graphics.Glx.DisplayPtr,System.Int32*,System.Int32*)
  - OpenTK.Graphics.Glx.Glx.QueryVersion(OpenTK.Graphics.Glx.DisplayPtr,System.Int32@,System.Int32@)
  - OpenTK.Graphics.Glx.Glx.QueryVersion(OpenTK.Graphics.Glx.DisplayPtr,System.Int32[],System.Int32[])
  - OpenTK.Graphics.Glx.Glx.QueryVersion(OpenTK.Graphics.Glx.DisplayPtr,System.Span{System.Int32},System.Span{System.Int32})
  - OpenTK.Graphics.Glx.Glx.SelectEvent(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,System.UInt64)
  - OpenTK.Graphics.Glx.Glx.SwapBuffers(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable)
  - OpenTK.Graphics.Glx.Glx.UseXFont(OpenTK.Graphics.Glx.Font,System.Int32,System.Int32,System.Int32)
  - OpenTK.Graphics.Glx.Glx.WaitGL
  - OpenTK.Graphics.Glx.Glx.WaitX
  langs:
  - csharp
  - vb
  name: Glx
  nameWithType: Glx
  fullName: OpenTK.Graphics.Glx.Glx
  type: Class
  source:
    id: Glx
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 11
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  syntax:
    content: public static class Glx
    content.vb: Public Module Glx
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: OpenTK.Graphics.Glx.Glx.ChooseFBConfig(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32*,System.Int32*)
  commentId: M:OpenTK.Graphics.Glx.Glx.ChooseFBConfig(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32*,System.Int32*)
  id: ChooseFBConfig(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32*,System.Int32*)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: ChooseFBConfig(DisplayPtr, int, int*, int*)
  nameWithType: Glx.ChooseFBConfig(DisplayPtr, int, int*, int*)
  fullName: OpenTK.Graphics.Glx.Glx.ChooseFBConfig(OpenTK.Graphics.Glx.DisplayPtr, int, int*, int*)
  type: Method
  source:
    id: ChooseFBConfig
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 12
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXChooseFBConfig</code>]</b>

    <br />
  example: []
  syntax:
    content: public static GLXFBConfig* ChooseFBConfig(DisplayPtr dpy, int screen, int* attrib_list, int* nelements)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: screen
      type: System.Int32
    - id: attrib_list
      type: System.Int32*
    - id: nelements
      type: System.Int32*
    return:
      type: OpenTK.Graphics.Glx.GLXFBConfig*
    content.vb: Public Shared Function ChooseFBConfig(dpy As DisplayPtr, screen As Integer, attrib_list As Integer*, nelements As Integer*) As GLXFBConfig*
  overload: OpenTK.Graphics.Glx.Glx.ChooseFBConfig*
  nameWithType.vb: Glx.ChooseFBConfig(DisplayPtr, Integer, Integer*, Integer*)
  fullName.vb: OpenTK.Graphics.Glx.Glx.ChooseFBConfig(OpenTK.Graphics.Glx.DisplayPtr, Integer, Integer*, Integer*)
  name.vb: ChooseFBConfig(DisplayPtr, Integer, Integer*, Integer*)
- uid: OpenTK.Graphics.Glx.Glx.ChooseVisual(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32*)
  commentId: M:OpenTK.Graphics.Glx.Glx.ChooseVisual(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32*)
  id: ChooseVisual(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32*)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: ChooseVisual(DisplayPtr, int, int*)
  nameWithType: Glx.ChooseVisual(DisplayPtr, int, int*)
  fullName: OpenTK.Graphics.Glx.Glx.ChooseVisual(OpenTK.Graphics.Glx.DisplayPtr, int, int*)
  type: Method
  source:
    id: ChooseVisual
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 15
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>glXChooseVisual</code>]</b>

    <br />
  example: []
  syntax:
    content: public static XVisualInfoPtr ChooseVisual(DisplayPtr dpy, int screen, int* attribList)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: screen
      type: System.Int32
    - id: attribList
      type: System.Int32*
    return:
      type: OpenTK.Graphics.Glx.XVisualInfoPtr
    content.vb: Public Shared Function ChooseVisual(dpy As DisplayPtr, screen As Integer, attribList As Integer*) As XVisualInfoPtr
  overload: OpenTK.Graphics.Glx.Glx.ChooseVisual*
  nameWithType.vb: Glx.ChooseVisual(DisplayPtr, Integer, Integer*)
  fullName.vb: OpenTK.Graphics.Glx.Glx.ChooseVisual(OpenTK.Graphics.Glx.DisplayPtr, Integer, Integer*)
  name.vb: ChooseVisual(DisplayPtr, Integer, Integer*)
- uid: OpenTK.Graphics.Glx.Glx.CopyContext(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXContext,OpenTK.Graphics.Glx.GLXContext,System.UInt64)
  commentId: M:OpenTK.Graphics.Glx.Glx.CopyContext(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXContext,OpenTK.Graphics.Glx.GLXContext,System.UInt64)
  id: CopyContext(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXContext,OpenTK.Graphics.Glx.GLXContext,System.UInt64)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: CopyContext(DisplayPtr, GLXContext, GLXContext, ulong)
  nameWithType: Glx.CopyContext(DisplayPtr, GLXContext, GLXContext, ulong)
  fullName: OpenTK.Graphics.Glx.Glx.CopyContext(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXContext, OpenTK.Graphics.Glx.GLXContext, ulong)
  type: Method
  source:
    id: CopyContext
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 18
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>glXCopyContext</code>]</b>

    <br />
  example: []
  syntax:
    content: public static void CopyContext(DisplayPtr dpy, GLXContext src, GLXContext dst, ulong mask)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: src
      type: OpenTK.Graphics.Glx.GLXContext
    - id: dst
      type: OpenTK.Graphics.Glx.GLXContext
    - id: mask
      type: System.UInt64
    content.vb: Public Shared Sub CopyContext(dpy As DisplayPtr, src As GLXContext, dst As GLXContext, mask As ULong)
  overload: OpenTK.Graphics.Glx.Glx.CopyContext*
  nameWithType.vb: Glx.CopyContext(DisplayPtr, GLXContext, GLXContext, ULong)
  fullName.vb: OpenTK.Graphics.Glx.Glx.CopyContext(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXContext, OpenTK.Graphics.Glx.GLXContext, ULong)
  name.vb: CopyContext(DisplayPtr, GLXContext, GLXContext, ULong)
- uid: OpenTK.Graphics.Glx.Glx.CreateContext(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.XVisualInfoPtr,OpenTK.Graphics.Glx.GLXContext,System.Boolean)
  commentId: M:OpenTK.Graphics.Glx.Glx.CreateContext(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.XVisualInfoPtr,OpenTK.Graphics.Glx.GLXContext,System.Boolean)
  id: CreateContext(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.XVisualInfoPtr,OpenTK.Graphics.Glx.GLXContext,System.Boolean)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: CreateContext(DisplayPtr, XVisualInfoPtr, GLXContext, bool)
  nameWithType: Glx.CreateContext(DisplayPtr, XVisualInfoPtr, GLXContext, bool)
  fullName: OpenTK.Graphics.Glx.Glx.CreateContext(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.XVisualInfoPtr, OpenTK.Graphics.Glx.GLXContext, bool)
  type: Method
  source:
    id: CreateContext
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 21
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>glXCreateContext</code>]</b>

    <br />
  example: []
  syntax:
    content: public static GLXContext CreateContext(DisplayPtr dpy, XVisualInfoPtr vis, GLXContext shareList, bool direct)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: vis
      type: OpenTK.Graphics.Glx.XVisualInfoPtr
    - id: shareList
      type: OpenTK.Graphics.Glx.GLXContext
    - id: direct
      type: System.Boolean
    return:
      type: OpenTK.Graphics.Glx.GLXContext
    content.vb: Public Shared Function CreateContext(dpy As DisplayPtr, vis As XVisualInfoPtr, shareList As GLXContext, direct As Boolean) As GLXContext
  overload: OpenTK.Graphics.Glx.Glx.CreateContext*
  nameWithType.vb: Glx.CreateContext(DisplayPtr, XVisualInfoPtr, GLXContext, Boolean)
  fullName.vb: OpenTK.Graphics.Glx.Glx.CreateContext(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.XVisualInfoPtr, OpenTK.Graphics.Glx.GLXContext, Boolean)
  name.vb: CreateContext(DisplayPtr, XVisualInfoPtr, GLXContext, Boolean)
- uid: OpenTK.Graphics.Glx.Glx.CreateGLXPixmap(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.XVisualInfoPtr,OpenTK.Graphics.Glx.Pixmap)
  commentId: M:OpenTK.Graphics.Glx.Glx.CreateGLXPixmap(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.XVisualInfoPtr,OpenTK.Graphics.Glx.Pixmap)
  id: CreateGLXPixmap(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.XVisualInfoPtr,OpenTK.Graphics.Glx.Pixmap)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: CreateGLXPixmap(DisplayPtr, XVisualInfoPtr, Pixmap)
  nameWithType: Glx.CreateGLXPixmap(DisplayPtr, XVisualInfoPtr, Pixmap)
  fullName: OpenTK.Graphics.Glx.Glx.CreateGLXPixmap(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.XVisualInfoPtr, OpenTK.Graphics.Glx.Pixmap)
  type: Method
  source:
    id: CreateGLXPixmap
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 24
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>glXCreateGLXPixmap</code>]</b>

    <br />
  example: []
  syntax:
    content: public static GLXPixmap CreateGLXPixmap(DisplayPtr dpy, XVisualInfoPtr visual, Pixmap pixmap)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: visual
      type: OpenTK.Graphics.Glx.XVisualInfoPtr
    - id: pixmap
      type: OpenTK.Graphics.Glx.Pixmap
    return:
      type: OpenTK.Graphics.Glx.GLXPixmap
    content.vb: Public Shared Function CreateGLXPixmap(dpy As DisplayPtr, visual As XVisualInfoPtr, pixmap As Pixmap) As GLXPixmap
  overload: OpenTK.Graphics.Glx.Glx.CreateGLXPixmap*
- uid: OpenTK.Graphics.Glx.Glx.CreateNewContext(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,System.Int32,OpenTK.Graphics.Glx.GLXContext,System.Boolean)
  commentId: M:OpenTK.Graphics.Glx.Glx.CreateNewContext(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,System.Int32,OpenTK.Graphics.Glx.GLXContext,System.Boolean)
  id: CreateNewContext(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,System.Int32,OpenTK.Graphics.Glx.GLXContext,System.Boolean)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: CreateNewContext(DisplayPtr, GLXFBConfig, int, GLXContext, bool)
  nameWithType: Glx.CreateNewContext(DisplayPtr, GLXFBConfig, int, GLXContext, bool)
  fullName: OpenTK.Graphics.Glx.Glx.CreateNewContext(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, int, OpenTK.Graphics.Glx.GLXContext, bool)
  type: Method
  source:
    id: CreateNewContext
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 27
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXCreateNewContext</code>]</b>

    <br />
  example: []
  syntax:
    content: public static GLXContext CreateNewContext(DisplayPtr dpy, GLXFBConfig config, int render_type, GLXContext share_list, bool direct)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: config
      type: OpenTK.Graphics.Glx.GLXFBConfig
    - id: render_type
      type: System.Int32
    - id: share_list
      type: OpenTK.Graphics.Glx.GLXContext
    - id: direct
      type: System.Boolean
    return:
      type: OpenTK.Graphics.Glx.GLXContext
    content.vb: Public Shared Function CreateNewContext(dpy As DisplayPtr, config As GLXFBConfig, render_type As Integer, share_list As GLXContext, direct As Boolean) As GLXContext
  overload: OpenTK.Graphics.Glx.Glx.CreateNewContext*
  nameWithType.vb: Glx.CreateNewContext(DisplayPtr, GLXFBConfig, Integer, GLXContext, Boolean)
  fullName.vb: OpenTK.Graphics.Glx.Glx.CreateNewContext(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, Integer, OpenTK.Graphics.Glx.GLXContext, Boolean)
  name.vb: CreateNewContext(DisplayPtr, GLXFBConfig, Integer, GLXContext, Boolean)
- uid: OpenTK.Graphics.Glx.Glx.CreatePbuffer(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,System.Int32*)
  commentId: M:OpenTK.Graphics.Glx.Glx.CreatePbuffer(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,System.Int32*)
  id: CreatePbuffer(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,System.Int32*)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: CreatePbuffer(DisplayPtr, GLXFBConfig, int*)
  nameWithType: Glx.CreatePbuffer(DisplayPtr, GLXFBConfig, int*)
  fullName: OpenTK.Graphics.Glx.Glx.CreatePbuffer(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, int*)
  type: Method
  source:
    id: CreatePbuffer
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 30
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXCreatePbuffer</code>]</b>

    <br />
  example: []
  syntax:
    content: public static GLXPbuffer CreatePbuffer(DisplayPtr dpy, GLXFBConfig config, int* attrib_list)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: config
      type: OpenTK.Graphics.Glx.GLXFBConfig
    - id: attrib_list
      type: System.Int32*
    return:
      type: OpenTK.Graphics.Glx.GLXPbuffer
    content.vb: Public Shared Function CreatePbuffer(dpy As DisplayPtr, config As GLXFBConfig, attrib_list As Integer*) As GLXPbuffer
  overload: OpenTK.Graphics.Glx.Glx.CreatePbuffer*
  nameWithType.vb: Glx.CreatePbuffer(DisplayPtr, GLXFBConfig, Integer*)
  fullName.vb: OpenTK.Graphics.Glx.Glx.CreatePbuffer(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, Integer*)
  name.vb: CreatePbuffer(DisplayPtr, GLXFBConfig, Integer*)
- uid: OpenTK.Graphics.Glx.Glx.CreatePixmap(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.Pixmap,System.Int32*)
  commentId: M:OpenTK.Graphics.Glx.Glx.CreatePixmap(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.Pixmap,System.Int32*)
  id: CreatePixmap(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.Pixmap,System.Int32*)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: CreatePixmap(DisplayPtr, GLXFBConfig, Pixmap, int*)
  nameWithType: Glx.CreatePixmap(DisplayPtr, GLXFBConfig, Pixmap, int*)
  fullName: OpenTK.Graphics.Glx.Glx.CreatePixmap(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, OpenTK.Graphics.Glx.Pixmap, int*)
  type: Method
  source:
    id: CreatePixmap
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 33
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXCreatePixmap</code>]</b>

    <br />
  example: []
  syntax:
    content: public static GLXPixmap CreatePixmap(DisplayPtr dpy, GLXFBConfig config, Pixmap pixmap, int* attrib_list)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: config
      type: OpenTK.Graphics.Glx.GLXFBConfig
    - id: pixmap
      type: OpenTK.Graphics.Glx.Pixmap
    - id: attrib_list
      type: System.Int32*
    return:
      type: OpenTK.Graphics.Glx.GLXPixmap
    content.vb: Public Shared Function CreatePixmap(dpy As DisplayPtr, config As GLXFBConfig, pixmap As Pixmap, attrib_list As Integer*) As GLXPixmap
  overload: OpenTK.Graphics.Glx.Glx.CreatePixmap*
  nameWithType.vb: Glx.CreatePixmap(DisplayPtr, GLXFBConfig, Pixmap, Integer*)
  fullName.vb: OpenTK.Graphics.Glx.Glx.CreatePixmap(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, OpenTK.Graphics.Glx.Pixmap, Integer*)
  name.vb: CreatePixmap(DisplayPtr, GLXFBConfig, Pixmap, Integer*)
- uid: OpenTK.Graphics.Glx.Glx.CreateWindow(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.Window,System.Int32*)
  commentId: M:OpenTK.Graphics.Glx.Glx.CreateWindow(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.Window,System.Int32*)
  id: CreateWindow(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.Window,System.Int32*)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: CreateWindow(DisplayPtr, GLXFBConfig, Window, int*)
  nameWithType: Glx.CreateWindow(DisplayPtr, GLXFBConfig, Window, int*)
  fullName: OpenTK.Graphics.Glx.Glx.CreateWindow(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, OpenTK.Graphics.Glx.Window, int*)
  type: Method
  source:
    id: CreateWindow
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 36
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXCreateWindow</code>]</b>

    <br />
  example: []
  syntax:
    content: public static GLXWindow CreateWindow(DisplayPtr dpy, GLXFBConfig config, Window win, int* attrib_list)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: config
      type: OpenTK.Graphics.Glx.GLXFBConfig
    - id: win
      type: OpenTK.Graphics.Glx.Window
    - id: attrib_list
      type: System.Int32*
    return:
      type: OpenTK.Graphics.Glx.GLXWindow
    content.vb: Public Shared Function CreateWindow(dpy As DisplayPtr, config As GLXFBConfig, win As Window, attrib_list As Integer*) As GLXWindow
  overload: OpenTK.Graphics.Glx.Glx.CreateWindow*
  nameWithType.vb: Glx.CreateWindow(DisplayPtr, GLXFBConfig, Window, Integer*)
  fullName.vb: OpenTK.Graphics.Glx.Glx.CreateWindow(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, OpenTK.Graphics.Glx.Window, Integer*)
  name.vb: CreateWindow(DisplayPtr, GLXFBConfig, Window, Integer*)
- uid: OpenTK.Graphics.Glx.Glx.DestroyContext(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXContext)
  commentId: M:OpenTK.Graphics.Glx.Glx.DestroyContext(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXContext)
  id: DestroyContext(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXContext)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: DestroyContext(DisplayPtr, GLXContext)
  nameWithType: Glx.DestroyContext(DisplayPtr, GLXContext)
  fullName: OpenTK.Graphics.Glx.Glx.DestroyContext(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXContext)
  type: Method
  source:
    id: DestroyContext
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 39
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>glXDestroyContext</code>]</b>

    <br />
  example: []
  syntax:
    content: public static void DestroyContext(DisplayPtr dpy, GLXContext ctx)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: ctx
      type: OpenTK.Graphics.Glx.GLXContext
    content.vb: Public Shared Sub DestroyContext(dpy As DisplayPtr, ctx As GLXContext)
  overload: OpenTK.Graphics.Glx.Glx.DestroyContext*
- uid: OpenTK.Graphics.Glx.Glx.DestroyGLXPixmap(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXPixmap)
  commentId: M:OpenTK.Graphics.Glx.Glx.DestroyGLXPixmap(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXPixmap)
  id: DestroyGLXPixmap(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXPixmap)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: DestroyGLXPixmap(DisplayPtr, GLXPixmap)
  nameWithType: Glx.DestroyGLXPixmap(DisplayPtr, GLXPixmap)
  fullName: OpenTK.Graphics.Glx.Glx.DestroyGLXPixmap(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXPixmap)
  type: Method
  source:
    id: DestroyGLXPixmap
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 42
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>glXDestroyGLXPixmap</code>]</b>

    <br />
  example: []
  syntax:
    content: public static void DestroyGLXPixmap(DisplayPtr dpy, GLXPixmap pixmap)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: pixmap
      type: OpenTK.Graphics.Glx.GLXPixmap
    content.vb: Public Shared Sub DestroyGLXPixmap(dpy As DisplayPtr, pixmap As GLXPixmap)
  overload: OpenTK.Graphics.Glx.Glx.DestroyGLXPixmap*
- uid: OpenTK.Graphics.Glx.Glx.DestroyPbuffer(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXPbuffer)
  commentId: M:OpenTK.Graphics.Glx.Glx.DestroyPbuffer(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXPbuffer)
  id: DestroyPbuffer(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXPbuffer)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: DestroyPbuffer(DisplayPtr, GLXPbuffer)
  nameWithType: Glx.DestroyPbuffer(DisplayPtr, GLXPbuffer)
  fullName: OpenTK.Graphics.Glx.Glx.DestroyPbuffer(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXPbuffer)
  type: Method
  source:
    id: DestroyPbuffer
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 45
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXDestroyPbuffer</code>]</b>

    <br />
  example: []
  syntax:
    content: public static void DestroyPbuffer(DisplayPtr dpy, GLXPbuffer pbuf)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: pbuf
      type: OpenTK.Graphics.Glx.GLXPbuffer
    content.vb: Public Shared Sub DestroyPbuffer(dpy As DisplayPtr, pbuf As GLXPbuffer)
  overload: OpenTK.Graphics.Glx.Glx.DestroyPbuffer*
- uid: OpenTK.Graphics.Glx.Glx.DestroyPixmap(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXPixmap)
  commentId: M:OpenTK.Graphics.Glx.Glx.DestroyPixmap(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXPixmap)
  id: DestroyPixmap(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXPixmap)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: DestroyPixmap(DisplayPtr, GLXPixmap)
  nameWithType: Glx.DestroyPixmap(DisplayPtr, GLXPixmap)
  fullName: OpenTK.Graphics.Glx.Glx.DestroyPixmap(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXPixmap)
  type: Method
  source:
    id: DestroyPixmap
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 48
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXDestroyPixmap</code>]</b>

    <br />
  example: []
  syntax:
    content: public static void DestroyPixmap(DisplayPtr dpy, GLXPixmap pixmap)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: pixmap
      type: OpenTK.Graphics.Glx.GLXPixmap
    content.vb: Public Shared Sub DestroyPixmap(dpy As DisplayPtr, pixmap As GLXPixmap)
  overload: OpenTK.Graphics.Glx.Glx.DestroyPixmap*
- uid: OpenTK.Graphics.Glx.Glx.DestroyWindow(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXWindow)
  commentId: M:OpenTK.Graphics.Glx.Glx.DestroyWindow(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXWindow)
  id: DestroyWindow(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXWindow)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: DestroyWindow(DisplayPtr, GLXWindow)
  nameWithType: Glx.DestroyWindow(DisplayPtr, GLXWindow)
  fullName: OpenTK.Graphics.Glx.Glx.DestroyWindow(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXWindow)
  type: Method
  source:
    id: DestroyWindow
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 51
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXDestroyWindow</code>]</b>

    <br />
  example: []
  syntax:
    content: public static void DestroyWindow(DisplayPtr dpy, GLXWindow win)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: win
      type: OpenTK.Graphics.Glx.GLXWindow
    content.vb: Public Shared Sub DestroyWindow(dpy As DisplayPtr, win As GLXWindow)
  overload: OpenTK.Graphics.Glx.Glx.DestroyWindow*
- uid: OpenTK.Graphics.Glx.Glx.GetClientString_(OpenTK.Graphics.Glx.DisplayPtr,System.Int32)
  commentId: M:OpenTK.Graphics.Glx.Glx.GetClientString_(OpenTK.Graphics.Glx.DisplayPtr,System.Int32)
  id: GetClientString_(OpenTK.Graphics.Glx.DisplayPtr,System.Int32)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: GetClientString_(DisplayPtr, int)
  nameWithType: Glx.GetClientString_(DisplayPtr, int)
  fullName: OpenTK.Graphics.Glx.Glx.GetClientString_(OpenTK.Graphics.Glx.DisplayPtr, int)
  type: Method
  source:
    id: GetClientString_
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 54
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.1]</b>

    <b>[entry point: <code>glXGetClientString</code>]</b>

    <br />
  example: []
  syntax:
    content: public static byte* GetClientString_(DisplayPtr dpy, int name)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: name
      type: System.Int32
    return:
      type: System.Byte*
    content.vb: Public Shared Function GetClientString_(dpy As DisplayPtr, name As Integer) As Byte*
  overload: OpenTK.Graphics.Glx.Glx.GetClientString_*
  nameWithType.vb: Glx.GetClientString_(DisplayPtr, Integer)
  fullName.vb: OpenTK.Graphics.Glx.Glx.GetClientString_(OpenTK.Graphics.Glx.DisplayPtr, Integer)
  name.vb: GetClientString_(DisplayPtr, Integer)
- uid: OpenTK.Graphics.Glx.Glx.GetConfig(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.XVisualInfoPtr,System.Int32,System.Int32*)
  commentId: M:OpenTK.Graphics.Glx.Glx.GetConfig(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.XVisualInfoPtr,System.Int32,System.Int32*)
  id: GetConfig(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.XVisualInfoPtr,System.Int32,System.Int32*)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: GetConfig(DisplayPtr, XVisualInfoPtr, int, int*)
  nameWithType: Glx.GetConfig(DisplayPtr, XVisualInfoPtr, int, int*)
  fullName: OpenTK.Graphics.Glx.Glx.GetConfig(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.XVisualInfoPtr, int, int*)
  type: Method
  source:
    id: GetConfig
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 57
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>glXGetConfig</code>]</b>

    <br />
  example: []
  syntax:
    content: public static int GetConfig(DisplayPtr dpy, XVisualInfoPtr visual, int attrib, int* value)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: visual
      type: OpenTK.Graphics.Glx.XVisualInfoPtr
    - id: attrib
      type: System.Int32
    - id: value
      type: System.Int32*
    return:
      type: System.Int32
    content.vb: Public Shared Function GetConfig(dpy As DisplayPtr, visual As XVisualInfoPtr, attrib As Integer, value As Integer*) As Integer
  overload: OpenTK.Graphics.Glx.Glx.GetConfig*
  nameWithType.vb: Glx.GetConfig(DisplayPtr, XVisualInfoPtr, Integer, Integer*)
  fullName.vb: OpenTK.Graphics.Glx.Glx.GetConfig(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.XVisualInfoPtr, Integer, Integer*)
  name.vb: GetConfig(DisplayPtr, XVisualInfoPtr, Integer, Integer*)
- uid: OpenTK.Graphics.Glx.Glx.GetCurrentContext
  commentId: M:OpenTK.Graphics.Glx.Glx.GetCurrentContext
  id: GetCurrentContext
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: GetCurrentContext()
  nameWithType: Glx.GetCurrentContext()
  fullName: OpenTK.Graphics.Glx.Glx.GetCurrentContext()
  type: Method
  source:
    id: GetCurrentContext
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 60
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>glXGetCurrentContext</code>]</b>

    <br />
  example: []
  syntax:
    content: public static GLXContext GetCurrentContext()
    return:
      type: OpenTK.Graphics.Glx.GLXContext
    content.vb: Public Shared Function GetCurrentContext() As GLXContext
  overload: OpenTK.Graphics.Glx.Glx.GetCurrentContext*
- uid: OpenTK.Graphics.Glx.Glx.GetCurrentDisplay
  commentId: M:OpenTK.Graphics.Glx.Glx.GetCurrentDisplay
  id: GetCurrentDisplay
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: GetCurrentDisplay()
  nameWithType: Glx.GetCurrentDisplay()
  fullName: OpenTK.Graphics.Glx.Glx.GetCurrentDisplay()
  type: Method
  source:
    id: GetCurrentDisplay
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 63
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.2]</b>

    <b>[entry point: <code>glXGetCurrentDisplay</code>]</b>

    <br />
  example: []
  syntax:
    content: public static DisplayPtr GetCurrentDisplay()
    return:
      type: OpenTK.Graphics.Glx.DisplayPtr
    content.vb: Public Shared Function GetCurrentDisplay() As DisplayPtr
  overload: OpenTK.Graphics.Glx.Glx.GetCurrentDisplay*
- uid: OpenTK.Graphics.Glx.Glx.GetCurrentDrawable
  commentId: M:OpenTK.Graphics.Glx.Glx.GetCurrentDrawable
  id: GetCurrentDrawable
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: GetCurrentDrawable()
  nameWithType: Glx.GetCurrentDrawable()
  fullName: OpenTK.Graphics.Glx.Glx.GetCurrentDrawable()
  type: Method
  source:
    id: GetCurrentDrawable
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 66
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>glXGetCurrentDrawable</code>]</b>

    <br />
  example: []
  syntax:
    content: public static GLXDrawable GetCurrentDrawable()
    return:
      type: OpenTK.Graphics.Glx.GLXDrawable
    content.vb: Public Shared Function GetCurrentDrawable() As GLXDrawable
  overload: OpenTK.Graphics.Glx.Glx.GetCurrentDrawable*
- uid: OpenTK.Graphics.Glx.Glx.GetCurrentReadDrawable
  commentId: M:OpenTK.Graphics.Glx.Glx.GetCurrentReadDrawable
  id: GetCurrentReadDrawable
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: GetCurrentReadDrawable()
  nameWithType: Glx.GetCurrentReadDrawable()
  fullName: OpenTK.Graphics.Glx.Glx.GetCurrentReadDrawable()
  type: Method
  source:
    id: GetCurrentReadDrawable
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 69
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXGetCurrentReadDrawable</code>]</b>

    <br />
  example: []
  syntax:
    content: public static GLXDrawable GetCurrentReadDrawable()
    return:
      type: OpenTK.Graphics.Glx.GLXDrawable
    content.vb: Public Shared Function GetCurrentReadDrawable() As GLXDrawable
  overload: OpenTK.Graphics.Glx.Glx.GetCurrentReadDrawable*
- uid: OpenTK.Graphics.Glx.Glx.GetFBConfigAttrib(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,System.Int32,System.Int32*)
  commentId: M:OpenTK.Graphics.Glx.Glx.GetFBConfigAttrib(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,System.Int32,System.Int32*)
  id: GetFBConfigAttrib(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,System.Int32,System.Int32*)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: GetFBConfigAttrib(DisplayPtr, GLXFBConfig, int, int*)
  nameWithType: Glx.GetFBConfigAttrib(DisplayPtr, GLXFBConfig, int, int*)
  fullName: OpenTK.Graphics.Glx.Glx.GetFBConfigAttrib(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, int, int*)
  type: Method
  source:
    id: GetFBConfigAttrib
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 72
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXGetFBConfigAttrib</code>]</b>

    <br />
  example: []
  syntax:
    content: public static int GetFBConfigAttrib(DisplayPtr dpy, GLXFBConfig config, int attribute, int* value)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: config
      type: OpenTK.Graphics.Glx.GLXFBConfig
    - id: attribute
      type: System.Int32
    - id: value
      type: System.Int32*
    return:
      type: System.Int32
    content.vb: Public Shared Function GetFBConfigAttrib(dpy As DisplayPtr, config As GLXFBConfig, attribute As Integer, value As Integer*) As Integer
  overload: OpenTK.Graphics.Glx.Glx.GetFBConfigAttrib*
  nameWithType.vb: Glx.GetFBConfigAttrib(DisplayPtr, GLXFBConfig, Integer, Integer*)
  fullName.vb: OpenTK.Graphics.Glx.Glx.GetFBConfigAttrib(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, Integer, Integer*)
  name.vb: GetFBConfigAttrib(DisplayPtr, GLXFBConfig, Integer, Integer*)
- uid: OpenTK.Graphics.Glx.Glx.GetFBConfigs(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32*)
  commentId: M:OpenTK.Graphics.Glx.Glx.GetFBConfigs(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32*)
  id: GetFBConfigs(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32*)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: GetFBConfigs(DisplayPtr, int, int*)
  nameWithType: Glx.GetFBConfigs(DisplayPtr, int, int*)
  fullName: OpenTK.Graphics.Glx.Glx.GetFBConfigs(OpenTK.Graphics.Glx.DisplayPtr, int, int*)
  type: Method
  source:
    id: GetFBConfigs
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 75
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXGetFBConfigs</code>]</b>

    <br />
  example: []
  syntax:
    content: public static GLXFBConfig* GetFBConfigs(DisplayPtr dpy, int screen, int* nelements)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: screen
      type: System.Int32
    - id: nelements
      type: System.Int32*
    return:
      type: OpenTK.Graphics.Glx.GLXFBConfig*
    content.vb: Public Shared Function GetFBConfigs(dpy As DisplayPtr, screen As Integer, nelements As Integer*) As GLXFBConfig*
  overload: OpenTK.Graphics.Glx.Glx.GetFBConfigs*
  nameWithType.vb: Glx.GetFBConfigs(DisplayPtr, Integer, Integer*)
  fullName.vb: OpenTK.Graphics.Glx.Glx.GetFBConfigs(OpenTK.Graphics.Glx.DisplayPtr, Integer, Integer*)
  name.vb: GetFBConfigs(DisplayPtr, Integer, Integer*)
- uid: OpenTK.Graphics.Glx.Glx.GetProcAddress(System.Byte*)
  commentId: M:OpenTK.Graphics.Glx.Glx.GetProcAddress(System.Byte*)
  id: GetProcAddress(System.Byte*)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: GetProcAddress(byte*)
  nameWithType: Glx.GetProcAddress(byte*)
  fullName: OpenTK.Graphics.Glx.Glx.GetProcAddress(byte*)
  type: Method
  source:
    id: GetProcAddress
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 78
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.4]</b>

    <b>[entry point: <code>glXGetProcAddress</code>]</b>

    <br />
  example: []
  syntax:
    content: public static nint GetProcAddress(byte* procName)
    parameters:
    - id: procName
      type: System.Byte*
    return:
      type: System.IntPtr
    content.vb: Public Shared Function GetProcAddress(procName As Byte*) As IntPtr
  overload: OpenTK.Graphics.Glx.Glx.GetProcAddress*
  nameWithType.vb: Glx.GetProcAddress(Byte*)
  fullName.vb: OpenTK.Graphics.Glx.Glx.GetProcAddress(Byte*)
  name.vb: GetProcAddress(Byte*)
- uid: OpenTK.Graphics.Glx.Glx.GetSelectedEvent(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,System.UInt64*)
  commentId: M:OpenTK.Graphics.Glx.Glx.GetSelectedEvent(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,System.UInt64*)
  id: GetSelectedEvent(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,System.UInt64*)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: GetSelectedEvent(DisplayPtr, GLXDrawable, ulong*)
  nameWithType: Glx.GetSelectedEvent(DisplayPtr, GLXDrawable, ulong*)
  fullName: OpenTK.Graphics.Glx.Glx.GetSelectedEvent(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXDrawable, ulong*)
  type: Method
  source:
    id: GetSelectedEvent
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 81
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXGetSelectedEvent</code>]</b>

    <br />
  example: []
  syntax:
    content: public static void GetSelectedEvent(DisplayPtr dpy, GLXDrawable draw, ulong* event_mask)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: draw
      type: OpenTK.Graphics.Glx.GLXDrawable
    - id: event_mask
      type: System.UInt64*
    content.vb: Public Shared Sub GetSelectedEvent(dpy As DisplayPtr, draw As GLXDrawable, event_mask As ULong*)
  overload: OpenTK.Graphics.Glx.Glx.GetSelectedEvent*
  nameWithType.vb: Glx.GetSelectedEvent(DisplayPtr, GLXDrawable, ULong*)
  fullName.vb: OpenTK.Graphics.Glx.Glx.GetSelectedEvent(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXDrawable, ULong*)
  name.vb: GetSelectedEvent(DisplayPtr, GLXDrawable, ULong*)
- uid: OpenTK.Graphics.Glx.Glx.GetVisualFromFBConfig(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig)
  commentId: M:OpenTK.Graphics.Glx.Glx.GetVisualFromFBConfig(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig)
  id: GetVisualFromFBConfig(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: GetVisualFromFBConfig(DisplayPtr, GLXFBConfig)
  nameWithType: Glx.GetVisualFromFBConfig(DisplayPtr, GLXFBConfig)
  fullName: OpenTK.Graphics.Glx.Glx.GetVisualFromFBConfig(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig)
  type: Method
  source:
    id: GetVisualFromFBConfig
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 84
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXGetVisualFromFBConfig</code>]</b>

    <br />
  example: []
  syntax:
    content: public static XVisualInfoPtr GetVisualFromFBConfig(DisplayPtr dpy, GLXFBConfig config)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: config
      type: OpenTK.Graphics.Glx.GLXFBConfig
    return:
      type: OpenTK.Graphics.Glx.XVisualInfoPtr
    content.vb: Public Shared Function GetVisualFromFBConfig(dpy As DisplayPtr, config As GLXFBConfig) As XVisualInfoPtr
  overload: OpenTK.Graphics.Glx.Glx.GetVisualFromFBConfig*
- uid: OpenTK.Graphics.Glx.Glx.IsDirect(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXContext)
  commentId: M:OpenTK.Graphics.Glx.Glx.IsDirect(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXContext)
  id: IsDirect(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXContext)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: IsDirect(DisplayPtr, GLXContext)
  nameWithType: Glx.IsDirect(DisplayPtr, GLXContext)
  fullName: OpenTK.Graphics.Glx.Glx.IsDirect(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXContext)
  type: Method
  source:
    id: IsDirect
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 87
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>glXIsDirect</code>]</b>

    <br />
  example: []
  syntax:
    content: public static bool IsDirect(DisplayPtr dpy, GLXContext ctx)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: ctx
      type: OpenTK.Graphics.Glx.GLXContext
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsDirect(dpy As DisplayPtr, ctx As GLXContext) As Boolean
  overload: OpenTK.Graphics.Glx.Glx.IsDirect*
- uid: OpenTK.Graphics.Glx.Glx.MakeContextCurrent(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,OpenTK.Graphics.Glx.GLXDrawable,OpenTK.Graphics.Glx.GLXContext)
  commentId: M:OpenTK.Graphics.Glx.Glx.MakeContextCurrent(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,OpenTK.Graphics.Glx.GLXDrawable,OpenTK.Graphics.Glx.GLXContext)
  id: MakeContextCurrent(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,OpenTK.Graphics.Glx.GLXDrawable,OpenTK.Graphics.Glx.GLXContext)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: MakeContextCurrent(DisplayPtr, GLXDrawable, GLXDrawable, GLXContext)
  nameWithType: Glx.MakeContextCurrent(DisplayPtr, GLXDrawable, GLXDrawable, GLXContext)
  fullName: OpenTK.Graphics.Glx.Glx.MakeContextCurrent(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXDrawable, OpenTK.Graphics.Glx.GLXDrawable, OpenTK.Graphics.Glx.GLXContext)
  type: Method
  source:
    id: MakeContextCurrent
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 90
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXMakeContextCurrent</code>]</b>

    <br />
  example: []
  syntax:
    content: public static bool MakeContextCurrent(DisplayPtr dpy, GLXDrawable draw, GLXDrawable read, GLXContext ctx)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: draw
      type: OpenTK.Graphics.Glx.GLXDrawable
    - id: read
      type: OpenTK.Graphics.Glx.GLXDrawable
    - id: ctx
      type: OpenTK.Graphics.Glx.GLXContext
    return:
      type: System.Boolean
    content.vb: Public Shared Function MakeContextCurrent(dpy As DisplayPtr, draw As GLXDrawable, read As GLXDrawable, ctx As GLXContext) As Boolean
  overload: OpenTK.Graphics.Glx.Glx.MakeContextCurrent*
- uid: OpenTK.Graphics.Glx.Glx.MakeCurrent(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,OpenTK.Graphics.Glx.GLXContext)
  commentId: M:OpenTK.Graphics.Glx.Glx.MakeCurrent(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,OpenTK.Graphics.Glx.GLXContext)
  id: MakeCurrent(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,OpenTK.Graphics.Glx.GLXContext)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: MakeCurrent(DisplayPtr, GLXDrawable, GLXContext)
  nameWithType: Glx.MakeCurrent(DisplayPtr, GLXDrawable, GLXContext)
  fullName: OpenTK.Graphics.Glx.Glx.MakeCurrent(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXDrawable, OpenTK.Graphics.Glx.GLXContext)
  type: Method
  source:
    id: MakeCurrent
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 93
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>glXMakeCurrent</code>]</b>

    <br />
  example: []
  syntax:
    content: public static bool MakeCurrent(DisplayPtr dpy, GLXDrawable drawable, GLXContext ctx)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: drawable
      type: OpenTK.Graphics.Glx.GLXDrawable
    - id: ctx
      type: OpenTK.Graphics.Glx.GLXContext
    return:
      type: System.Boolean
    content.vb: Public Shared Function MakeCurrent(dpy As DisplayPtr, drawable As GLXDrawable, ctx As GLXContext) As Boolean
  overload: OpenTK.Graphics.Glx.Glx.MakeCurrent*
- uid: OpenTK.Graphics.Glx.Glx.QueryContext(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXContext,System.Int32,System.Int32*)
  commentId: M:OpenTK.Graphics.Glx.Glx.QueryContext(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXContext,System.Int32,System.Int32*)
  id: QueryContext(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXContext,System.Int32,System.Int32*)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: QueryContext(DisplayPtr, GLXContext, int, int*)
  nameWithType: Glx.QueryContext(DisplayPtr, GLXContext, int, int*)
  fullName: OpenTK.Graphics.Glx.Glx.QueryContext(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXContext, int, int*)
  type: Method
  source:
    id: QueryContext
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 96
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXQueryContext</code>]</b>

    <br />
  example: []
  syntax:
    content: public static int QueryContext(DisplayPtr dpy, GLXContext ctx, int attribute, int* value)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: ctx
      type: OpenTK.Graphics.Glx.GLXContext
    - id: attribute
      type: System.Int32
    - id: value
      type: System.Int32*
    return:
      type: System.Int32
    content.vb: Public Shared Function QueryContext(dpy As DisplayPtr, ctx As GLXContext, attribute As Integer, value As Integer*) As Integer
  overload: OpenTK.Graphics.Glx.Glx.QueryContext*
  nameWithType.vb: Glx.QueryContext(DisplayPtr, GLXContext, Integer, Integer*)
  fullName.vb: OpenTK.Graphics.Glx.Glx.QueryContext(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXContext, Integer, Integer*)
  name.vb: QueryContext(DisplayPtr, GLXContext, Integer, Integer*)
- uid: OpenTK.Graphics.Glx.Glx.QueryDrawable(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,System.Int32,System.UInt32*)
  commentId: M:OpenTK.Graphics.Glx.Glx.QueryDrawable(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,System.Int32,System.UInt32*)
  id: QueryDrawable(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,System.Int32,System.UInt32*)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: QueryDrawable(DisplayPtr, GLXDrawable, int, uint*)
  nameWithType: Glx.QueryDrawable(DisplayPtr, GLXDrawable, int, uint*)
  fullName: OpenTK.Graphics.Glx.Glx.QueryDrawable(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXDrawable, int, uint*)
  type: Method
  source:
    id: QueryDrawable
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 99
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXQueryDrawable</code>]</b>

    <br />
  example: []
  syntax:
    content: public static void QueryDrawable(DisplayPtr dpy, GLXDrawable draw, int attribute, uint* value)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: draw
      type: OpenTK.Graphics.Glx.GLXDrawable
    - id: attribute
      type: System.Int32
    - id: value
      type: System.UInt32*
    content.vb: Public Shared Sub QueryDrawable(dpy As DisplayPtr, draw As GLXDrawable, attribute As Integer, value As UInteger*)
  overload: OpenTK.Graphics.Glx.Glx.QueryDrawable*
  nameWithType.vb: Glx.QueryDrawable(DisplayPtr, GLXDrawable, Integer, UInteger*)
  fullName.vb: OpenTK.Graphics.Glx.Glx.QueryDrawable(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXDrawable, Integer, UInteger*)
  name.vb: QueryDrawable(DisplayPtr, GLXDrawable, Integer, UInteger*)
- uid: OpenTK.Graphics.Glx.Glx.QueryExtension(OpenTK.Graphics.Glx.DisplayPtr,System.Int32*,System.Int32*)
  commentId: M:OpenTK.Graphics.Glx.Glx.QueryExtension(OpenTK.Graphics.Glx.DisplayPtr,System.Int32*,System.Int32*)
  id: QueryExtension(OpenTK.Graphics.Glx.DisplayPtr,System.Int32*,System.Int32*)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: QueryExtension(DisplayPtr, int*, int*)
  nameWithType: Glx.QueryExtension(DisplayPtr, int*, int*)
  fullName: OpenTK.Graphics.Glx.Glx.QueryExtension(OpenTK.Graphics.Glx.DisplayPtr, int*, int*)
  type: Method
  source:
    id: QueryExtension
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 102
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>glXQueryExtension</code>]</b>

    <br />
  example: []
  syntax:
    content: public static bool QueryExtension(DisplayPtr dpy, int* errorb, int* @event)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: errorb
      type: System.Int32*
    - id: event
      type: System.Int32*
    return:
      type: System.Boolean
    content.vb: Public Shared Function QueryExtension(dpy As DisplayPtr, errorb As Integer*, [event] As Integer*) As Boolean
  overload: OpenTK.Graphics.Glx.Glx.QueryExtension*
  nameWithType.vb: Glx.QueryExtension(DisplayPtr, Integer*, Integer*)
  fullName.vb: OpenTK.Graphics.Glx.Glx.QueryExtension(OpenTK.Graphics.Glx.DisplayPtr, Integer*, Integer*)
  name.vb: QueryExtension(DisplayPtr, Integer*, Integer*)
- uid: OpenTK.Graphics.Glx.Glx.QueryExtensionsString_(OpenTK.Graphics.Glx.DisplayPtr,System.Int32)
  commentId: M:OpenTK.Graphics.Glx.Glx.QueryExtensionsString_(OpenTK.Graphics.Glx.DisplayPtr,System.Int32)
  id: QueryExtensionsString_(OpenTK.Graphics.Glx.DisplayPtr,System.Int32)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: QueryExtensionsString_(DisplayPtr, int)
  nameWithType: Glx.QueryExtensionsString_(DisplayPtr, int)
  fullName: OpenTK.Graphics.Glx.Glx.QueryExtensionsString_(OpenTK.Graphics.Glx.DisplayPtr, int)
  type: Method
  source:
    id: QueryExtensionsString_
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 105
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.1]</b>

    <b>[entry point: <code>glXQueryExtensionsString</code>]</b>

    <br />
  example: []
  syntax:
    content: public static byte* QueryExtensionsString_(DisplayPtr dpy, int screen)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: screen
      type: System.Int32
    return:
      type: System.Byte*
    content.vb: Public Shared Function QueryExtensionsString_(dpy As DisplayPtr, screen As Integer) As Byte*
  overload: OpenTK.Graphics.Glx.Glx.QueryExtensionsString_*
  nameWithType.vb: Glx.QueryExtensionsString_(DisplayPtr, Integer)
  fullName.vb: OpenTK.Graphics.Glx.Glx.QueryExtensionsString_(OpenTK.Graphics.Glx.DisplayPtr, Integer)
  name.vb: QueryExtensionsString_(DisplayPtr, Integer)
- uid: OpenTK.Graphics.Glx.Glx.QueryServerString_(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32)
  commentId: M:OpenTK.Graphics.Glx.Glx.QueryServerString_(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32)
  id: QueryServerString_(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: QueryServerString_(DisplayPtr, int, int)
  nameWithType: Glx.QueryServerString_(DisplayPtr, int, int)
  fullName: OpenTK.Graphics.Glx.Glx.QueryServerString_(OpenTK.Graphics.Glx.DisplayPtr, int, int)
  type: Method
  source:
    id: QueryServerString_
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 108
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.1]</b>

    <b>[entry point: <code>glXQueryServerString</code>]</b>

    <br />
  example: []
  syntax:
    content: public static byte* QueryServerString_(DisplayPtr dpy, int screen, int name)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: screen
      type: System.Int32
    - id: name
      type: System.Int32
    return:
      type: System.Byte*
    content.vb: Public Shared Function QueryServerString_(dpy As DisplayPtr, screen As Integer, name As Integer) As Byte*
  overload: OpenTK.Graphics.Glx.Glx.QueryServerString_*
  nameWithType.vb: Glx.QueryServerString_(DisplayPtr, Integer, Integer)
  fullName.vb: OpenTK.Graphics.Glx.Glx.QueryServerString_(OpenTK.Graphics.Glx.DisplayPtr, Integer, Integer)
  name.vb: QueryServerString_(DisplayPtr, Integer, Integer)
- uid: OpenTK.Graphics.Glx.Glx.QueryVersion(OpenTK.Graphics.Glx.DisplayPtr,System.Int32*,System.Int32*)
  commentId: M:OpenTK.Graphics.Glx.Glx.QueryVersion(OpenTK.Graphics.Glx.DisplayPtr,System.Int32*,System.Int32*)
  id: QueryVersion(OpenTK.Graphics.Glx.DisplayPtr,System.Int32*,System.Int32*)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: QueryVersion(DisplayPtr, int*, int*)
  nameWithType: Glx.QueryVersion(DisplayPtr, int*, int*)
  fullName: OpenTK.Graphics.Glx.Glx.QueryVersion(OpenTK.Graphics.Glx.DisplayPtr, int*, int*)
  type: Method
  source:
    id: QueryVersion
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 111
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>glXQueryVersion</code>]</b>

    <br />
  example: []
  syntax:
    content: public static bool QueryVersion(DisplayPtr dpy, int* maj, int* min)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: maj
      type: System.Int32*
    - id: min
      type: System.Int32*
    return:
      type: System.Boolean
    content.vb: Public Shared Function QueryVersion(dpy As DisplayPtr, maj As Integer*, min As Integer*) As Boolean
  overload: OpenTK.Graphics.Glx.Glx.QueryVersion*
  nameWithType.vb: Glx.QueryVersion(DisplayPtr, Integer*, Integer*)
  fullName.vb: OpenTK.Graphics.Glx.Glx.QueryVersion(OpenTK.Graphics.Glx.DisplayPtr, Integer*, Integer*)
  name.vb: QueryVersion(DisplayPtr, Integer*, Integer*)
- uid: OpenTK.Graphics.Glx.Glx.SelectEvent(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,System.UInt64)
  commentId: M:OpenTK.Graphics.Glx.Glx.SelectEvent(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,System.UInt64)
  id: SelectEvent(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,System.UInt64)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: SelectEvent(DisplayPtr, GLXDrawable, ulong)
  nameWithType: Glx.SelectEvent(DisplayPtr, GLXDrawable, ulong)
  fullName: OpenTK.Graphics.Glx.Glx.SelectEvent(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXDrawable, ulong)
  type: Method
  source:
    id: SelectEvent
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 114
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXSelectEvent</code>]</b>

    <br />
  example: []
  syntax:
    content: public static void SelectEvent(DisplayPtr dpy, GLXDrawable draw, ulong event_mask)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: draw
      type: OpenTK.Graphics.Glx.GLXDrawable
    - id: event_mask
      type: System.UInt64
    content.vb: Public Shared Sub SelectEvent(dpy As DisplayPtr, draw As GLXDrawable, event_mask As ULong)
  overload: OpenTK.Graphics.Glx.Glx.SelectEvent*
  nameWithType.vb: Glx.SelectEvent(DisplayPtr, GLXDrawable, ULong)
  fullName.vb: OpenTK.Graphics.Glx.Glx.SelectEvent(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXDrawable, ULong)
  name.vb: SelectEvent(DisplayPtr, GLXDrawable, ULong)
- uid: OpenTK.Graphics.Glx.Glx.SwapBuffers(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable)
  commentId: M:OpenTK.Graphics.Glx.Glx.SwapBuffers(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable)
  id: SwapBuffers(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: SwapBuffers(DisplayPtr, GLXDrawable)
  nameWithType: Glx.SwapBuffers(DisplayPtr, GLXDrawable)
  fullName: OpenTK.Graphics.Glx.Glx.SwapBuffers(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXDrawable)
  type: Method
  source:
    id: SwapBuffers
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 117
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>glXSwapBuffers</code>]</b>

    <br />
  example: []
  syntax:
    content: public static void SwapBuffers(DisplayPtr dpy, GLXDrawable drawable)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: drawable
      type: OpenTK.Graphics.Glx.GLXDrawable
    content.vb: Public Shared Sub SwapBuffers(dpy As DisplayPtr, drawable As GLXDrawable)
  overload: OpenTK.Graphics.Glx.Glx.SwapBuffers*
- uid: OpenTK.Graphics.Glx.Glx.UseXFont(OpenTK.Graphics.Glx.Font,System.Int32,System.Int32,System.Int32)
  commentId: M:OpenTK.Graphics.Glx.Glx.UseXFont(OpenTK.Graphics.Glx.Font,System.Int32,System.Int32,System.Int32)
  id: UseXFont(OpenTK.Graphics.Glx.Font,System.Int32,System.Int32,System.Int32)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: UseXFont(Font, int, int, int)
  nameWithType: Glx.UseXFont(Font, int, int, int)
  fullName: OpenTK.Graphics.Glx.Glx.UseXFont(OpenTK.Graphics.Glx.Font, int, int, int)
  type: Method
  source:
    id: UseXFont
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 120
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>glXUseXFont</code>]</b>

    <br />
  example: []
  syntax:
    content: public static void UseXFont(Font font, int first, int count, int list)
    parameters:
    - id: font
      type: OpenTK.Graphics.Glx.Font
    - id: first
      type: System.Int32
    - id: count
      type: System.Int32
    - id: list
      type: System.Int32
    content.vb: Public Shared Sub UseXFont(font As Font, first As Integer, count As Integer, list As Integer)
  overload: OpenTK.Graphics.Glx.Glx.UseXFont*
  nameWithType.vb: Glx.UseXFont(Font, Integer, Integer, Integer)
  fullName.vb: OpenTK.Graphics.Glx.Glx.UseXFont(OpenTK.Graphics.Glx.Font, Integer, Integer, Integer)
  name.vb: UseXFont(Font, Integer, Integer, Integer)
- uid: OpenTK.Graphics.Glx.Glx.WaitGL
  commentId: M:OpenTK.Graphics.Glx.Glx.WaitGL
  id: WaitGL
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: WaitGL()
  nameWithType: Glx.WaitGL()
  fullName: OpenTK.Graphics.Glx.Glx.WaitGL()
  type: Method
  source:
    id: WaitGL
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 123
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>glXWaitGL</code>]</b>

    <br />
  example: []
  syntax:
    content: public static void WaitGL()
    content.vb: Public Shared Sub WaitGL()
  overload: OpenTK.Graphics.Glx.Glx.WaitGL*
- uid: OpenTK.Graphics.Glx.Glx.WaitX
  commentId: M:OpenTK.Graphics.Glx.Glx.WaitX
  id: WaitX
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: WaitX()
  nameWithType: Glx.WaitX()
  fullName: OpenTK.Graphics.Glx.Glx.WaitX()
  type: Method
  source:
    id: WaitX
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Native.cs
    startLine: 126
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>glXWaitX</code>]</b>

    <br />
  example: []
  syntax:
    content: public static void WaitX()
    content.vb: Public Shared Sub WaitX()
  overload: OpenTK.Graphics.Glx.Glx.WaitX*
- uid: OpenTK.Graphics.Glx.Glx.ChooseFBConfig(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.ReadOnlySpan{System.Int32},System.Span{System.Int32})
  commentId: M:OpenTK.Graphics.Glx.Glx.ChooseFBConfig(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.ReadOnlySpan{System.Int32},System.Span{System.Int32})
  id: ChooseFBConfig(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.ReadOnlySpan{System.Int32},System.Span{System.Int32})
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: ChooseFBConfig(DisplayPtr, int, ReadOnlySpan<int>, Span<int>)
  nameWithType: Glx.ChooseFBConfig(DisplayPtr, int, ReadOnlySpan<int>, Span<int>)
  fullName: OpenTK.Graphics.Glx.Glx.ChooseFBConfig(OpenTK.Graphics.Glx.DisplayPtr, int, System.ReadOnlySpan<int>, System.Span<int>)
  type: Method
  source:
    id: ChooseFBConfig
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 14
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXChooseFBConfig</code>]</b>

    <br />
  example: []
  syntax:
    content: public static GLXFBConfig* ChooseFBConfig(DisplayPtr dpy, int screen, ReadOnlySpan<int> attrib_list, Span<int> nelements)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: screen
      type: System.Int32
    - id: attrib_list
      type: System.ReadOnlySpan{System.Int32}
    - id: nelements
      type: System.Span{System.Int32}
    return:
      type: OpenTK.Graphics.Glx.GLXFBConfig*
    content.vb: Public Shared Function ChooseFBConfig(dpy As DisplayPtr, screen As Integer, attrib_list As ReadOnlySpan(Of Integer), nelements As Span(Of Integer)) As GLXFBConfig*
  overload: OpenTK.Graphics.Glx.Glx.ChooseFBConfig*
  nameWithType.vb: Glx.ChooseFBConfig(DisplayPtr, Integer, ReadOnlySpan(Of Integer), Span(Of Integer))
  fullName.vb: OpenTK.Graphics.Glx.Glx.ChooseFBConfig(OpenTK.Graphics.Glx.DisplayPtr, Integer, System.ReadOnlySpan(Of Integer), System.Span(Of Integer))
  name.vb: ChooseFBConfig(DisplayPtr, Integer, ReadOnlySpan(Of Integer), Span(Of Integer))
- uid: OpenTK.Graphics.Glx.Glx.ChooseFBConfig(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32[],System.Int32[])
  commentId: M:OpenTK.Graphics.Glx.Glx.ChooseFBConfig(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32[],System.Int32[])
  id: ChooseFBConfig(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32[],System.Int32[])
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: ChooseFBConfig(DisplayPtr, int, int[], int[])
  nameWithType: Glx.ChooseFBConfig(DisplayPtr, int, int[], int[])
  fullName: OpenTK.Graphics.Glx.Glx.ChooseFBConfig(OpenTK.Graphics.Glx.DisplayPtr, int, int[], int[])
  type: Method
  source:
    id: ChooseFBConfig
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 27
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXChooseFBConfig</code>]</b>

    <br />
  example: []
  syntax:
    content: public static GLXFBConfig* ChooseFBConfig(DisplayPtr dpy, int screen, int[] attrib_list, int[] nelements)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: screen
      type: System.Int32
    - id: attrib_list
      type: System.Int32[]
    - id: nelements
      type: System.Int32[]
    return:
      type: OpenTK.Graphics.Glx.GLXFBConfig*
    content.vb: Public Shared Function ChooseFBConfig(dpy As DisplayPtr, screen As Integer, attrib_list As Integer(), nelements As Integer()) As GLXFBConfig*
  overload: OpenTK.Graphics.Glx.Glx.ChooseFBConfig*
  nameWithType.vb: Glx.ChooseFBConfig(DisplayPtr, Integer, Integer(), Integer())
  fullName.vb: OpenTK.Graphics.Glx.Glx.ChooseFBConfig(OpenTK.Graphics.Glx.DisplayPtr, Integer, Integer(), Integer())
  name.vb: ChooseFBConfig(DisplayPtr, Integer, Integer(), Integer())
- uid: OpenTK.Graphics.Glx.Glx.ChooseFBConfig(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32@,System.Int32@)
  commentId: M:OpenTK.Graphics.Glx.Glx.ChooseFBConfig(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32@,System.Int32@)
  id: ChooseFBConfig(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32@,System.Int32@)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: ChooseFBConfig(DisplayPtr, int, in int, ref int)
  nameWithType: Glx.ChooseFBConfig(DisplayPtr, int, in int, ref int)
  fullName: OpenTK.Graphics.Glx.Glx.ChooseFBConfig(OpenTK.Graphics.Glx.DisplayPtr, int, in int, ref int)
  type: Method
  source:
    id: ChooseFBConfig
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 40
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXChooseFBConfig</code>]</b>

    <br />
  example: []
  syntax:
    content: public static GLXFBConfig* ChooseFBConfig(DisplayPtr dpy, int screen, in int attrib_list, ref int nelements)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: screen
      type: System.Int32
    - id: attrib_list
      type: System.Int32
    - id: nelements
      type: System.Int32
    return:
      type: OpenTK.Graphics.Glx.GLXFBConfig*
    content.vb: Public Shared Function ChooseFBConfig(dpy As DisplayPtr, screen As Integer, attrib_list As Integer, nelements As Integer) As GLXFBConfig*
  overload: OpenTK.Graphics.Glx.Glx.ChooseFBConfig*
  nameWithType.vb: Glx.ChooseFBConfig(DisplayPtr, Integer, Integer, Integer)
  fullName.vb: OpenTK.Graphics.Glx.Glx.ChooseFBConfig(OpenTK.Graphics.Glx.DisplayPtr, Integer, Integer, Integer)
  name.vb: ChooseFBConfig(DisplayPtr, Integer, Integer, Integer)
- uid: OpenTK.Graphics.Glx.Glx.ChooseVisual(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Span{System.Int32})
  commentId: M:OpenTK.Graphics.Glx.Glx.ChooseVisual(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Span{System.Int32})
  id: ChooseVisual(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Span{System.Int32})
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: ChooseVisual(DisplayPtr, int, Span<int>)
  nameWithType: Glx.ChooseVisual(DisplayPtr, int, Span<int>)
  fullName: OpenTK.Graphics.Glx.Glx.ChooseVisual(OpenTK.Graphics.Glx.DisplayPtr, int, System.Span<int>)
  type: Method
  source:
    id: ChooseVisual
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 51
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>glXChooseVisual</code>]</b>

    <br />
  example: []
  syntax:
    content: public static XVisualInfoPtr ChooseVisual(DisplayPtr dpy, int screen, Span<int> attribList)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: screen
      type: System.Int32
    - id: attribList
      type: System.Span{System.Int32}
    return:
      type: OpenTK.Graphics.Glx.XVisualInfoPtr
    content.vb: Public Shared Function ChooseVisual(dpy As DisplayPtr, screen As Integer, attribList As Span(Of Integer)) As XVisualInfoPtr
  overload: OpenTK.Graphics.Glx.Glx.ChooseVisual*
  nameWithType.vb: Glx.ChooseVisual(DisplayPtr, Integer, Span(Of Integer))
  fullName.vb: OpenTK.Graphics.Glx.Glx.ChooseVisual(OpenTK.Graphics.Glx.DisplayPtr, Integer, System.Span(Of Integer))
  name.vb: ChooseVisual(DisplayPtr, Integer, Span(Of Integer))
- uid: OpenTK.Graphics.Glx.Glx.ChooseVisual(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32[])
  commentId: M:OpenTK.Graphics.Glx.Glx.ChooseVisual(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32[])
  id: ChooseVisual(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32[])
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: ChooseVisual(DisplayPtr, int, int[])
  nameWithType: Glx.ChooseVisual(DisplayPtr, int, int[])
  fullName: OpenTK.Graphics.Glx.Glx.ChooseVisual(OpenTK.Graphics.Glx.DisplayPtr, int, int[])
  type: Method
  source:
    id: ChooseVisual
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 61
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>glXChooseVisual</code>]</b>

    <br />
  example: []
  syntax:
    content: public static XVisualInfoPtr ChooseVisual(DisplayPtr dpy, int screen, int[] attribList)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: screen
      type: System.Int32
    - id: attribList
      type: System.Int32[]
    return:
      type: OpenTK.Graphics.Glx.XVisualInfoPtr
    content.vb: Public Shared Function ChooseVisual(dpy As DisplayPtr, screen As Integer, attribList As Integer()) As XVisualInfoPtr
  overload: OpenTK.Graphics.Glx.Glx.ChooseVisual*
  nameWithType.vb: Glx.ChooseVisual(DisplayPtr, Integer, Integer())
  fullName.vb: OpenTK.Graphics.Glx.Glx.ChooseVisual(OpenTK.Graphics.Glx.DisplayPtr, Integer, Integer())
  name.vb: ChooseVisual(DisplayPtr, Integer, Integer())
- uid: OpenTK.Graphics.Glx.Glx.ChooseVisual(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32@)
  commentId: M:OpenTK.Graphics.Glx.Glx.ChooseVisual(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32@)
  id: ChooseVisual(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32@)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: ChooseVisual(DisplayPtr, int, ref int)
  nameWithType: Glx.ChooseVisual(DisplayPtr, int, ref int)
  fullName: OpenTK.Graphics.Glx.Glx.ChooseVisual(OpenTK.Graphics.Glx.DisplayPtr, int, ref int)
  type: Method
  source:
    id: ChooseVisual
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 71
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>glXChooseVisual</code>]</b>

    <br />
  example: []
  syntax:
    content: public static XVisualInfoPtr ChooseVisual(DisplayPtr dpy, int screen, ref int attribList)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: screen
      type: System.Int32
    - id: attribList
      type: System.Int32
    return:
      type: OpenTK.Graphics.Glx.XVisualInfoPtr
    content.vb: Public Shared Function ChooseVisual(dpy As DisplayPtr, screen As Integer, attribList As Integer) As XVisualInfoPtr
  overload: OpenTK.Graphics.Glx.Glx.ChooseVisual*
  nameWithType.vb: Glx.ChooseVisual(DisplayPtr, Integer, Integer)
  fullName.vb: OpenTK.Graphics.Glx.Glx.ChooseVisual(OpenTK.Graphics.Glx.DisplayPtr, Integer, Integer)
  name.vb: ChooseVisual(DisplayPtr, Integer, Integer)
- uid: OpenTK.Graphics.Glx.Glx.CreatePbuffer(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,System.ReadOnlySpan{System.Int32})
  commentId: M:OpenTK.Graphics.Glx.Glx.CreatePbuffer(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,System.ReadOnlySpan{System.Int32})
  id: CreatePbuffer(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,System.ReadOnlySpan{System.Int32})
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: CreatePbuffer(DisplayPtr, GLXFBConfig, ReadOnlySpan<int>)
  nameWithType: Glx.CreatePbuffer(DisplayPtr, GLXFBConfig, ReadOnlySpan<int>)
  fullName: OpenTK.Graphics.Glx.Glx.CreatePbuffer(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, System.ReadOnlySpan<int>)
  type: Method
  source:
    id: CreatePbuffer
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 81
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXCreatePbuffer</code>]</b>

    <br />
  example: []
  syntax:
    content: public static GLXPbuffer CreatePbuffer(DisplayPtr dpy, GLXFBConfig config, ReadOnlySpan<int> attrib_list)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: config
      type: OpenTK.Graphics.Glx.GLXFBConfig
    - id: attrib_list
      type: System.ReadOnlySpan{System.Int32}
    return:
      type: OpenTK.Graphics.Glx.GLXPbuffer
    content.vb: Public Shared Function CreatePbuffer(dpy As DisplayPtr, config As GLXFBConfig, attrib_list As ReadOnlySpan(Of Integer)) As GLXPbuffer
  overload: OpenTK.Graphics.Glx.Glx.CreatePbuffer*
  nameWithType.vb: Glx.CreatePbuffer(DisplayPtr, GLXFBConfig, ReadOnlySpan(Of Integer))
  fullName.vb: OpenTK.Graphics.Glx.Glx.CreatePbuffer(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, System.ReadOnlySpan(Of Integer))
  name.vb: CreatePbuffer(DisplayPtr, GLXFBConfig, ReadOnlySpan(Of Integer))
- uid: OpenTK.Graphics.Glx.Glx.CreatePbuffer(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,System.Int32[])
  commentId: M:OpenTK.Graphics.Glx.Glx.CreatePbuffer(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,System.Int32[])
  id: CreatePbuffer(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,System.Int32[])
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: CreatePbuffer(DisplayPtr, GLXFBConfig, int[])
  nameWithType: Glx.CreatePbuffer(DisplayPtr, GLXFBConfig, int[])
  fullName: OpenTK.Graphics.Glx.Glx.CreatePbuffer(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, int[])
  type: Method
  source:
    id: CreatePbuffer
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 91
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXCreatePbuffer</code>]</b>

    <br />
  example: []
  syntax:
    content: public static GLXPbuffer CreatePbuffer(DisplayPtr dpy, GLXFBConfig config, int[] attrib_list)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: config
      type: OpenTK.Graphics.Glx.GLXFBConfig
    - id: attrib_list
      type: System.Int32[]
    return:
      type: OpenTK.Graphics.Glx.GLXPbuffer
    content.vb: Public Shared Function CreatePbuffer(dpy As DisplayPtr, config As GLXFBConfig, attrib_list As Integer()) As GLXPbuffer
  overload: OpenTK.Graphics.Glx.Glx.CreatePbuffer*
  nameWithType.vb: Glx.CreatePbuffer(DisplayPtr, GLXFBConfig, Integer())
  fullName.vb: OpenTK.Graphics.Glx.Glx.CreatePbuffer(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, Integer())
  name.vb: CreatePbuffer(DisplayPtr, GLXFBConfig, Integer())
- uid: OpenTK.Graphics.Glx.Glx.CreatePbuffer(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,System.Int32@)
  commentId: M:OpenTK.Graphics.Glx.Glx.CreatePbuffer(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,System.Int32@)
  id: CreatePbuffer(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,System.Int32@)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: CreatePbuffer(DisplayPtr, GLXFBConfig, in int)
  nameWithType: Glx.CreatePbuffer(DisplayPtr, GLXFBConfig, in int)
  fullName: OpenTK.Graphics.Glx.Glx.CreatePbuffer(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, in int)
  type: Method
  source:
    id: CreatePbuffer
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 101
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXCreatePbuffer</code>]</b>

    <br />
  example: []
  syntax:
    content: public static GLXPbuffer CreatePbuffer(DisplayPtr dpy, GLXFBConfig config, in int attrib_list)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: config
      type: OpenTK.Graphics.Glx.GLXFBConfig
    - id: attrib_list
      type: System.Int32
    return:
      type: OpenTK.Graphics.Glx.GLXPbuffer
    content.vb: Public Shared Function CreatePbuffer(dpy As DisplayPtr, config As GLXFBConfig, attrib_list As Integer) As GLXPbuffer
  overload: OpenTK.Graphics.Glx.Glx.CreatePbuffer*
  nameWithType.vb: Glx.CreatePbuffer(DisplayPtr, GLXFBConfig, Integer)
  fullName.vb: OpenTK.Graphics.Glx.Glx.CreatePbuffer(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, Integer)
  name.vb: CreatePbuffer(DisplayPtr, GLXFBConfig, Integer)
- uid: OpenTK.Graphics.Glx.Glx.CreatePixmap(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.Pixmap,System.ReadOnlySpan{System.Int32})
  commentId: M:OpenTK.Graphics.Glx.Glx.CreatePixmap(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.Pixmap,System.ReadOnlySpan{System.Int32})
  id: CreatePixmap(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.Pixmap,System.ReadOnlySpan{System.Int32})
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: CreatePixmap(DisplayPtr, GLXFBConfig, Pixmap, ReadOnlySpan<int>)
  nameWithType: Glx.CreatePixmap(DisplayPtr, GLXFBConfig, Pixmap, ReadOnlySpan<int>)
  fullName: OpenTK.Graphics.Glx.Glx.CreatePixmap(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, OpenTK.Graphics.Glx.Pixmap, System.ReadOnlySpan<int>)
  type: Method
  source:
    id: CreatePixmap
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 111
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXCreatePixmap</code>]</b>

    <br />
  example: []
  syntax:
    content: public static GLXPixmap CreatePixmap(DisplayPtr dpy, GLXFBConfig config, Pixmap pixmap, ReadOnlySpan<int> attrib_list)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: config
      type: OpenTK.Graphics.Glx.GLXFBConfig
    - id: pixmap
      type: OpenTK.Graphics.Glx.Pixmap
    - id: attrib_list
      type: System.ReadOnlySpan{System.Int32}
    return:
      type: OpenTK.Graphics.Glx.GLXPixmap
    content.vb: Public Shared Function CreatePixmap(dpy As DisplayPtr, config As GLXFBConfig, pixmap As Pixmap, attrib_list As ReadOnlySpan(Of Integer)) As GLXPixmap
  overload: OpenTK.Graphics.Glx.Glx.CreatePixmap*
  nameWithType.vb: Glx.CreatePixmap(DisplayPtr, GLXFBConfig, Pixmap, ReadOnlySpan(Of Integer))
  fullName.vb: OpenTK.Graphics.Glx.Glx.CreatePixmap(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, OpenTK.Graphics.Glx.Pixmap, System.ReadOnlySpan(Of Integer))
  name.vb: CreatePixmap(DisplayPtr, GLXFBConfig, Pixmap, ReadOnlySpan(Of Integer))
- uid: OpenTK.Graphics.Glx.Glx.CreatePixmap(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.Pixmap,System.Int32[])
  commentId: M:OpenTK.Graphics.Glx.Glx.CreatePixmap(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.Pixmap,System.Int32[])
  id: CreatePixmap(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.Pixmap,System.Int32[])
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: CreatePixmap(DisplayPtr, GLXFBConfig, Pixmap, int[])
  nameWithType: Glx.CreatePixmap(DisplayPtr, GLXFBConfig, Pixmap, int[])
  fullName: OpenTK.Graphics.Glx.Glx.CreatePixmap(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, OpenTK.Graphics.Glx.Pixmap, int[])
  type: Method
  source:
    id: CreatePixmap
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 121
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXCreatePixmap</code>]</b>

    <br />
  example: []
  syntax:
    content: public static GLXPixmap CreatePixmap(DisplayPtr dpy, GLXFBConfig config, Pixmap pixmap, int[] attrib_list)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: config
      type: OpenTK.Graphics.Glx.GLXFBConfig
    - id: pixmap
      type: OpenTK.Graphics.Glx.Pixmap
    - id: attrib_list
      type: System.Int32[]
    return:
      type: OpenTK.Graphics.Glx.GLXPixmap
    content.vb: Public Shared Function CreatePixmap(dpy As DisplayPtr, config As GLXFBConfig, pixmap As Pixmap, attrib_list As Integer()) As GLXPixmap
  overload: OpenTK.Graphics.Glx.Glx.CreatePixmap*
  nameWithType.vb: Glx.CreatePixmap(DisplayPtr, GLXFBConfig, Pixmap, Integer())
  fullName.vb: OpenTK.Graphics.Glx.Glx.CreatePixmap(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, OpenTK.Graphics.Glx.Pixmap, Integer())
  name.vb: CreatePixmap(DisplayPtr, GLXFBConfig, Pixmap, Integer())
- uid: OpenTK.Graphics.Glx.Glx.CreatePixmap(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.Pixmap,System.Int32@)
  commentId: M:OpenTK.Graphics.Glx.Glx.CreatePixmap(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.Pixmap,System.Int32@)
  id: CreatePixmap(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.Pixmap,System.Int32@)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: CreatePixmap(DisplayPtr, GLXFBConfig, Pixmap, in int)
  nameWithType: Glx.CreatePixmap(DisplayPtr, GLXFBConfig, Pixmap, in int)
  fullName: OpenTK.Graphics.Glx.Glx.CreatePixmap(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, OpenTK.Graphics.Glx.Pixmap, in int)
  type: Method
  source:
    id: CreatePixmap
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 131
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXCreatePixmap</code>]</b>

    <br />
  example: []
  syntax:
    content: public static GLXPixmap CreatePixmap(DisplayPtr dpy, GLXFBConfig config, Pixmap pixmap, in int attrib_list)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: config
      type: OpenTK.Graphics.Glx.GLXFBConfig
    - id: pixmap
      type: OpenTK.Graphics.Glx.Pixmap
    - id: attrib_list
      type: System.Int32
    return:
      type: OpenTK.Graphics.Glx.GLXPixmap
    content.vb: Public Shared Function CreatePixmap(dpy As DisplayPtr, config As GLXFBConfig, pixmap As Pixmap, attrib_list As Integer) As GLXPixmap
  overload: OpenTK.Graphics.Glx.Glx.CreatePixmap*
  nameWithType.vb: Glx.CreatePixmap(DisplayPtr, GLXFBConfig, Pixmap, Integer)
  fullName.vb: OpenTK.Graphics.Glx.Glx.CreatePixmap(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, OpenTK.Graphics.Glx.Pixmap, Integer)
  name.vb: CreatePixmap(DisplayPtr, GLXFBConfig, Pixmap, Integer)
- uid: OpenTK.Graphics.Glx.Glx.CreateWindow(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.Window,System.ReadOnlySpan{System.Int32})
  commentId: M:OpenTK.Graphics.Glx.Glx.CreateWindow(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.Window,System.ReadOnlySpan{System.Int32})
  id: CreateWindow(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.Window,System.ReadOnlySpan{System.Int32})
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: CreateWindow(DisplayPtr, GLXFBConfig, Window, ReadOnlySpan<int>)
  nameWithType: Glx.CreateWindow(DisplayPtr, GLXFBConfig, Window, ReadOnlySpan<int>)
  fullName: OpenTK.Graphics.Glx.Glx.CreateWindow(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, OpenTK.Graphics.Glx.Window, System.ReadOnlySpan<int>)
  type: Method
  source:
    id: CreateWindow
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 141
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXCreateWindow</code>]</b>

    <br />
  example: []
  syntax:
    content: public static GLXWindow CreateWindow(DisplayPtr dpy, GLXFBConfig config, Window win, ReadOnlySpan<int> attrib_list)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: config
      type: OpenTK.Graphics.Glx.GLXFBConfig
    - id: win
      type: OpenTK.Graphics.Glx.Window
    - id: attrib_list
      type: System.ReadOnlySpan{System.Int32}
    return:
      type: OpenTK.Graphics.Glx.GLXWindow
    content.vb: Public Shared Function CreateWindow(dpy As DisplayPtr, config As GLXFBConfig, win As Window, attrib_list As ReadOnlySpan(Of Integer)) As GLXWindow
  overload: OpenTK.Graphics.Glx.Glx.CreateWindow*
  nameWithType.vb: Glx.CreateWindow(DisplayPtr, GLXFBConfig, Window, ReadOnlySpan(Of Integer))
  fullName.vb: OpenTK.Graphics.Glx.Glx.CreateWindow(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, OpenTK.Graphics.Glx.Window, System.ReadOnlySpan(Of Integer))
  name.vb: CreateWindow(DisplayPtr, GLXFBConfig, Window, ReadOnlySpan(Of Integer))
- uid: OpenTK.Graphics.Glx.Glx.CreateWindow(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.Window,System.Int32[])
  commentId: M:OpenTK.Graphics.Glx.Glx.CreateWindow(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.Window,System.Int32[])
  id: CreateWindow(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.Window,System.Int32[])
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: CreateWindow(DisplayPtr, GLXFBConfig, Window, int[])
  nameWithType: Glx.CreateWindow(DisplayPtr, GLXFBConfig, Window, int[])
  fullName: OpenTK.Graphics.Glx.Glx.CreateWindow(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, OpenTK.Graphics.Glx.Window, int[])
  type: Method
  source:
    id: CreateWindow
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 151
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXCreateWindow</code>]</b>

    <br />
  example: []
  syntax:
    content: public static GLXWindow CreateWindow(DisplayPtr dpy, GLXFBConfig config, Window win, int[] attrib_list)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: config
      type: OpenTK.Graphics.Glx.GLXFBConfig
    - id: win
      type: OpenTK.Graphics.Glx.Window
    - id: attrib_list
      type: System.Int32[]
    return:
      type: OpenTK.Graphics.Glx.GLXWindow
    content.vb: Public Shared Function CreateWindow(dpy As DisplayPtr, config As GLXFBConfig, win As Window, attrib_list As Integer()) As GLXWindow
  overload: OpenTK.Graphics.Glx.Glx.CreateWindow*
  nameWithType.vb: Glx.CreateWindow(DisplayPtr, GLXFBConfig, Window, Integer())
  fullName.vb: OpenTK.Graphics.Glx.Glx.CreateWindow(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, OpenTK.Graphics.Glx.Window, Integer())
  name.vb: CreateWindow(DisplayPtr, GLXFBConfig, Window, Integer())
- uid: OpenTK.Graphics.Glx.Glx.CreateWindow(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.Window,System.Int32@)
  commentId: M:OpenTK.Graphics.Glx.Glx.CreateWindow(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.Window,System.Int32@)
  id: CreateWindow(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,OpenTK.Graphics.Glx.Window,System.Int32@)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: CreateWindow(DisplayPtr, GLXFBConfig, Window, in int)
  nameWithType: Glx.CreateWindow(DisplayPtr, GLXFBConfig, Window, in int)
  fullName: OpenTK.Graphics.Glx.Glx.CreateWindow(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, OpenTK.Graphics.Glx.Window, in int)
  type: Method
  source:
    id: CreateWindow
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 161
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXCreateWindow</code>]</b>

    <br />
  example: []
  syntax:
    content: public static GLXWindow CreateWindow(DisplayPtr dpy, GLXFBConfig config, Window win, in int attrib_list)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: config
      type: OpenTK.Graphics.Glx.GLXFBConfig
    - id: win
      type: OpenTK.Graphics.Glx.Window
    - id: attrib_list
      type: System.Int32
    return:
      type: OpenTK.Graphics.Glx.GLXWindow
    content.vb: Public Shared Function CreateWindow(dpy As DisplayPtr, config As GLXFBConfig, win As Window, attrib_list As Integer) As GLXWindow
  overload: OpenTK.Graphics.Glx.Glx.CreateWindow*
  nameWithType.vb: Glx.CreateWindow(DisplayPtr, GLXFBConfig, Window, Integer)
  fullName.vb: OpenTK.Graphics.Glx.Glx.CreateWindow(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, OpenTK.Graphics.Glx.Window, Integer)
  name.vb: CreateWindow(DisplayPtr, GLXFBConfig, Window, Integer)
- uid: OpenTK.Graphics.Glx.Glx.GetClientString(OpenTK.Graphics.Glx.DisplayPtr,System.Int32)
  commentId: M:OpenTK.Graphics.Glx.Glx.GetClientString(OpenTK.Graphics.Glx.DisplayPtr,System.Int32)
  id: GetClientString(OpenTK.Graphics.Glx.DisplayPtr,System.Int32)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: GetClientString(DisplayPtr, int)
  nameWithType: Glx.GetClientString(DisplayPtr, int)
  fullName: OpenTK.Graphics.Glx.Glx.GetClientString(OpenTK.Graphics.Glx.DisplayPtr, int)
  type: Method
  source:
    id: GetClientString
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 171
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  example: []
  syntax:
    content: public static string? GetClientString(DisplayPtr dpy, int name)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: name
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Shared Function GetClientString(dpy As DisplayPtr, name As Integer) As String
  overload: OpenTK.Graphics.Glx.Glx.GetClientString*
  nameWithType.vb: Glx.GetClientString(DisplayPtr, Integer)
  fullName.vb: OpenTK.Graphics.Glx.Glx.GetClientString(OpenTK.Graphics.Glx.DisplayPtr, Integer)
  name.vb: GetClientString(DisplayPtr, Integer)
- uid: OpenTK.Graphics.Glx.Glx.GetConfig(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.XVisualInfoPtr,System.Int32,System.Span{System.Int32})
  commentId: M:OpenTK.Graphics.Glx.Glx.GetConfig(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.XVisualInfoPtr,System.Int32,System.Span{System.Int32})
  id: GetConfig(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.XVisualInfoPtr,System.Int32,System.Span{System.Int32})
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: GetConfig(DisplayPtr, XVisualInfoPtr, int, Span<int>)
  nameWithType: Glx.GetConfig(DisplayPtr, XVisualInfoPtr, int, Span<int>)
  fullName: OpenTK.Graphics.Glx.Glx.GetConfig(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.XVisualInfoPtr, int, System.Span<int>)
  type: Method
  source:
    id: GetConfig
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 180
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>glXGetConfig</code>]</b>

    <br />
  example: []
  syntax:
    content: public static int GetConfig(DisplayPtr dpy, XVisualInfoPtr visual, int attrib, Span<int> value)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: visual
      type: OpenTK.Graphics.Glx.XVisualInfoPtr
    - id: attrib
      type: System.Int32
    - id: value
      type: System.Span{System.Int32}
    return:
      type: System.Int32
    content.vb: Public Shared Function GetConfig(dpy As DisplayPtr, visual As XVisualInfoPtr, attrib As Integer, value As Span(Of Integer)) As Integer
  overload: OpenTK.Graphics.Glx.Glx.GetConfig*
  nameWithType.vb: Glx.GetConfig(DisplayPtr, XVisualInfoPtr, Integer, Span(Of Integer))
  fullName.vb: OpenTK.Graphics.Glx.Glx.GetConfig(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.XVisualInfoPtr, Integer, System.Span(Of Integer))
  name.vb: GetConfig(DisplayPtr, XVisualInfoPtr, Integer, Span(Of Integer))
- uid: OpenTK.Graphics.Glx.Glx.GetConfig(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.XVisualInfoPtr,System.Int32,System.Int32[])
  commentId: M:OpenTK.Graphics.Glx.Glx.GetConfig(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.XVisualInfoPtr,System.Int32,System.Int32[])
  id: GetConfig(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.XVisualInfoPtr,System.Int32,System.Int32[])
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: GetConfig(DisplayPtr, XVisualInfoPtr, int, int[])
  nameWithType: Glx.GetConfig(DisplayPtr, XVisualInfoPtr, int, int[])
  fullName: OpenTK.Graphics.Glx.Glx.GetConfig(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.XVisualInfoPtr, int, int[])
  type: Method
  source:
    id: GetConfig
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 190
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>glXGetConfig</code>]</b>

    <br />
  example: []
  syntax:
    content: public static int GetConfig(DisplayPtr dpy, XVisualInfoPtr visual, int attrib, int[] value)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: visual
      type: OpenTK.Graphics.Glx.XVisualInfoPtr
    - id: attrib
      type: System.Int32
    - id: value
      type: System.Int32[]
    return:
      type: System.Int32
    content.vb: Public Shared Function GetConfig(dpy As DisplayPtr, visual As XVisualInfoPtr, attrib As Integer, value As Integer()) As Integer
  overload: OpenTK.Graphics.Glx.Glx.GetConfig*
  nameWithType.vb: Glx.GetConfig(DisplayPtr, XVisualInfoPtr, Integer, Integer())
  fullName.vb: OpenTK.Graphics.Glx.Glx.GetConfig(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.XVisualInfoPtr, Integer, Integer())
  name.vb: GetConfig(DisplayPtr, XVisualInfoPtr, Integer, Integer())
- uid: OpenTK.Graphics.Glx.Glx.GetConfig(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.XVisualInfoPtr,System.Int32,System.Int32@)
  commentId: M:OpenTK.Graphics.Glx.Glx.GetConfig(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.XVisualInfoPtr,System.Int32,System.Int32@)
  id: GetConfig(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.XVisualInfoPtr,System.Int32,System.Int32@)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: GetConfig(DisplayPtr, XVisualInfoPtr, int, ref int)
  nameWithType: Glx.GetConfig(DisplayPtr, XVisualInfoPtr, int, ref int)
  fullName: OpenTK.Graphics.Glx.Glx.GetConfig(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.XVisualInfoPtr, int, ref int)
  type: Method
  source:
    id: GetConfig
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 200
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>glXGetConfig</code>]</b>

    <br />
  example: []
  syntax:
    content: public static int GetConfig(DisplayPtr dpy, XVisualInfoPtr visual, int attrib, ref int value)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: visual
      type: OpenTK.Graphics.Glx.XVisualInfoPtr
    - id: attrib
      type: System.Int32
    - id: value
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function GetConfig(dpy As DisplayPtr, visual As XVisualInfoPtr, attrib As Integer, value As Integer) As Integer
  overload: OpenTK.Graphics.Glx.Glx.GetConfig*
  nameWithType.vb: Glx.GetConfig(DisplayPtr, XVisualInfoPtr, Integer, Integer)
  fullName.vb: OpenTK.Graphics.Glx.Glx.GetConfig(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.XVisualInfoPtr, Integer, Integer)
  name.vb: GetConfig(DisplayPtr, XVisualInfoPtr, Integer, Integer)
- uid: OpenTK.Graphics.Glx.Glx.GetFBConfigAttrib(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,System.Int32,System.Span{System.Int32})
  commentId: M:OpenTK.Graphics.Glx.Glx.GetFBConfigAttrib(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,System.Int32,System.Span{System.Int32})
  id: GetFBConfigAttrib(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,System.Int32,System.Span{System.Int32})
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: GetFBConfigAttrib(DisplayPtr, GLXFBConfig, int, Span<int>)
  nameWithType: Glx.GetFBConfigAttrib(DisplayPtr, GLXFBConfig, int, Span<int>)
  fullName: OpenTK.Graphics.Glx.Glx.GetFBConfigAttrib(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, int, System.Span<int>)
  type: Method
  source:
    id: GetFBConfigAttrib
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 210
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXGetFBConfigAttrib</code>]</b>

    <br />
  example: []
  syntax:
    content: public static int GetFBConfigAttrib(DisplayPtr dpy, GLXFBConfig config, int attribute, Span<int> value)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: config
      type: OpenTK.Graphics.Glx.GLXFBConfig
    - id: attribute
      type: System.Int32
    - id: value
      type: System.Span{System.Int32}
    return:
      type: System.Int32
    content.vb: Public Shared Function GetFBConfigAttrib(dpy As DisplayPtr, config As GLXFBConfig, attribute As Integer, value As Span(Of Integer)) As Integer
  overload: OpenTK.Graphics.Glx.Glx.GetFBConfigAttrib*
  nameWithType.vb: Glx.GetFBConfigAttrib(DisplayPtr, GLXFBConfig, Integer, Span(Of Integer))
  fullName.vb: OpenTK.Graphics.Glx.Glx.GetFBConfigAttrib(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, Integer, System.Span(Of Integer))
  name.vb: GetFBConfigAttrib(DisplayPtr, GLXFBConfig, Integer, Span(Of Integer))
- uid: OpenTK.Graphics.Glx.Glx.GetFBConfigAttrib(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,System.Int32,System.Int32[])
  commentId: M:OpenTK.Graphics.Glx.Glx.GetFBConfigAttrib(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,System.Int32,System.Int32[])
  id: GetFBConfigAttrib(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,System.Int32,System.Int32[])
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: GetFBConfigAttrib(DisplayPtr, GLXFBConfig, int, int[])
  nameWithType: Glx.GetFBConfigAttrib(DisplayPtr, GLXFBConfig, int, int[])
  fullName: OpenTK.Graphics.Glx.Glx.GetFBConfigAttrib(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, int, int[])
  type: Method
  source:
    id: GetFBConfigAttrib
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 220
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXGetFBConfigAttrib</code>]</b>

    <br />
  example: []
  syntax:
    content: public static int GetFBConfigAttrib(DisplayPtr dpy, GLXFBConfig config, int attribute, int[] value)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: config
      type: OpenTK.Graphics.Glx.GLXFBConfig
    - id: attribute
      type: System.Int32
    - id: value
      type: System.Int32[]
    return:
      type: System.Int32
    content.vb: Public Shared Function GetFBConfigAttrib(dpy As DisplayPtr, config As GLXFBConfig, attribute As Integer, value As Integer()) As Integer
  overload: OpenTK.Graphics.Glx.Glx.GetFBConfigAttrib*
  nameWithType.vb: Glx.GetFBConfigAttrib(DisplayPtr, GLXFBConfig, Integer, Integer())
  fullName.vb: OpenTK.Graphics.Glx.Glx.GetFBConfigAttrib(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, Integer, Integer())
  name.vb: GetFBConfigAttrib(DisplayPtr, GLXFBConfig, Integer, Integer())
- uid: OpenTK.Graphics.Glx.Glx.GetFBConfigAttrib(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,System.Int32,System.Int32@)
  commentId: M:OpenTK.Graphics.Glx.Glx.GetFBConfigAttrib(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,System.Int32,System.Int32@)
  id: GetFBConfigAttrib(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXFBConfig,System.Int32,System.Int32@)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: GetFBConfigAttrib(DisplayPtr, GLXFBConfig, int, ref int)
  nameWithType: Glx.GetFBConfigAttrib(DisplayPtr, GLXFBConfig, int, ref int)
  fullName: OpenTK.Graphics.Glx.Glx.GetFBConfigAttrib(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, int, ref int)
  type: Method
  source:
    id: GetFBConfigAttrib
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 230
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXGetFBConfigAttrib</code>]</b>

    <br />
  example: []
  syntax:
    content: public static int GetFBConfigAttrib(DisplayPtr dpy, GLXFBConfig config, int attribute, ref int value)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: config
      type: OpenTK.Graphics.Glx.GLXFBConfig
    - id: attribute
      type: System.Int32
    - id: value
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function GetFBConfigAttrib(dpy As DisplayPtr, config As GLXFBConfig, attribute As Integer, value As Integer) As Integer
  overload: OpenTK.Graphics.Glx.Glx.GetFBConfigAttrib*
  nameWithType.vb: Glx.GetFBConfigAttrib(DisplayPtr, GLXFBConfig, Integer, Integer)
  fullName.vb: OpenTK.Graphics.Glx.Glx.GetFBConfigAttrib(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXFBConfig, Integer, Integer)
  name.vb: GetFBConfigAttrib(DisplayPtr, GLXFBConfig, Integer, Integer)
- uid: OpenTK.Graphics.Glx.Glx.GetFBConfig(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Span{System.Int32})
  commentId: M:OpenTK.Graphics.Glx.Glx.GetFBConfig(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Span{System.Int32})
  id: GetFBConfig(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Span{System.Int32})
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: GetFBConfig(DisplayPtr, int, Span<int>)
  nameWithType: Glx.GetFBConfig(DisplayPtr, int, Span<int>)
  fullName: OpenTK.Graphics.Glx.Glx.GetFBConfig(OpenTK.Graphics.Glx.DisplayPtr, int, System.Span<int>)
  type: Method
  source:
    id: GetFBConfig
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 240
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXGetFBConfigs</code>]</b>

    <br />
  example: []
  syntax:
    content: public static GLXFBConfig* GetFBConfig(DisplayPtr dpy, int screen, Span<int> nelements)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: screen
      type: System.Int32
    - id: nelements
      type: System.Span{System.Int32}
    return:
      type: OpenTK.Graphics.Glx.GLXFBConfig*
    content.vb: Public Shared Function GetFBConfig(dpy As DisplayPtr, screen As Integer, nelements As Span(Of Integer)) As GLXFBConfig*
  overload: OpenTK.Graphics.Glx.Glx.GetFBConfig*
  nameWithType.vb: Glx.GetFBConfig(DisplayPtr, Integer, Span(Of Integer))
  fullName.vb: OpenTK.Graphics.Glx.Glx.GetFBConfig(OpenTK.Graphics.Glx.DisplayPtr, Integer, System.Span(Of Integer))
  name.vb: GetFBConfig(DisplayPtr, Integer, Span(Of Integer))
- uid: OpenTK.Graphics.Glx.Glx.GetFBConfig(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32[])
  commentId: M:OpenTK.Graphics.Glx.Glx.GetFBConfig(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32[])
  id: GetFBConfig(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32[])
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: GetFBConfig(DisplayPtr, int, int[])
  nameWithType: Glx.GetFBConfig(DisplayPtr, int, int[])
  fullName: OpenTK.Graphics.Glx.Glx.GetFBConfig(OpenTK.Graphics.Glx.DisplayPtr, int, int[])
  type: Method
  source:
    id: GetFBConfig
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 250
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXGetFBConfigs</code>]</b>

    <br />
  example: []
  syntax:
    content: public static GLXFBConfig* GetFBConfig(DisplayPtr dpy, int screen, int[] nelements)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: screen
      type: System.Int32
    - id: nelements
      type: System.Int32[]
    return:
      type: OpenTK.Graphics.Glx.GLXFBConfig*
    content.vb: Public Shared Function GetFBConfig(dpy As DisplayPtr, screen As Integer, nelements As Integer()) As GLXFBConfig*
  overload: OpenTK.Graphics.Glx.Glx.GetFBConfig*
  nameWithType.vb: Glx.GetFBConfig(DisplayPtr, Integer, Integer())
  fullName.vb: OpenTK.Graphics.Glx.Glx.GetFBConfig(OpenTK.Graphics.Glx.DisplayPtr, Integer, Integer())
  name.vb: GetFBConfig(DisplayPtr, Integer, Integer())
- uid: OpenTK.Graphics.Glx.Glx.GetFBConfig(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32@)
  commentId: M:OpenTK.Graphics.Glx.Glx.GetFBConfig(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32@)
  id: GetFBConfig(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32@)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: GetFBConfig(DisplayPtr, int, ref int)
  nameWithType: Glx.GetFBConfig(DisplayPtr, int, ref int)
  fullName: OpenTK.Graphics.Glx.Glx.GetFBConfig(OpenTK.Graphics.Glx.DisplayPtr, int, ref int)
  type: Method
  source:
    id: GetFBConfig
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 260
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXGetFBConfigs</code>]</b>

    <br />
  example: []
  syntax:
    content: public static GLXFBConfig* GetFBConfig(DisplayPtr dpy, int screen, ref int nelements)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: screen
      type: System.Int32
    - id: nelements
      type: System.Int32
    return:
      type: OpenTK.Graphics.Glx.GLXFBConfig*
    content.vb: Public Shared Function GetFBConfig(dpy As DisplayPtr, screen As Integer, nelements As Integer) As GLXFBConfig*
  overload: OpenTK.Graphics.Glx.Glx.GetFBConfig*
  nameWithType.vb: Glx.GetFBConfig(DisplayPtr, Integer, Integer)
  fullName.vb: OpenTK.Graphics.Glx.Glx.GetFBConfig(OpenTK.Graphics.Glx.DisplayPtr, Integer, Integer)
  name.vb: GetFBConfig(DisplayPtr, Integer, Integer)
- uid: OpenTK.Graphics.Glx.Glx.GetProcAddress(System.ReadOnlySpan{System.Byte})
  commentId: M:OpenTK.Graphics.Glx.Glx.GetProcAddress(System.ReadOnlySpan{System.Byte})
  id: GetProcAddress(System.ReadOnlySpan{System.Byte})
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: GetProcAddress(ReadOnlySpan<byte>)
  nameWithType: Glx.GetProcAddress(ReadOnlySpan<byte>)
  fullName: OpenTK.Graphics.Glx.Glx.GetProcAddress(System.ReadOnlySpan<byte>)
  type: Method
  source:
    id: GetProcAddress
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 270
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.4]</b>

    <b>[entry point: <code>glXGetProcAddress</code>]</b>

    <br />
  example: []
  syntax:
    content: public static nint GetProcAddress(ReadOnlySpan<byte> procName)
    parameters:
    - id: procName
      type: System.ReadOnlySpan{System.Byte}
    return:
      type: System.IntPtr
    content.vb: Public Shared Function GetProcAddress(procName As ReadOnlySpan(Of Byte)) As IntPtr
  overload: OpenTK.Graphics.Glx.Glx.GetProcAddress*
  nameWithType.vb: Glx.GetProcAddress(ReadOnlySpan(Of Byte))
  fullName.vb: OpenTK.Graphics.Glx.Glx.GetProcAddress(System.ReadOnlySpan(Of Byte))
  name.vb: GetProcAddress(ReadOnlySpan(Of Byte))
- uid: OpenTK.Graphics.Glx.Glx.GetProcAddress(System.Byte[])
  commentId: M:OpenTK.Graphics.Glx.Glx.GetProcAddress(System.Byte[])
  id: GetProcAddress(System.Byte[])
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: GetProcAddress(byte[])
  nameWithType: Glx.GetProcAddress(byte[])
  fullName: OpenTK.Graphics.Glx.Glx.GetProcAddress(byte[])
  type: Method
  source:
    id: GetProcAddress
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 280
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.4]</b>

    <b>[entry point: <code>glXGetProcAddress</code>]</b>

    <br />
  example: []
  syntax:
    content: public static nint GetProcAddress(byte[] procName)
    parameters:
    - id: procName
      type: System.Byte[]
    return:
      type: System.IntPtr
    content.vb: Public Shared Function GetProcAddress(procName As Byte()) As IntPtr
  overload: OpenTK.Graphics.Glx.Glx.GetProcAddress*
  nameWithType.vb: Glx.GetProcAddress(Byte())
  fullName.vb: OpenTK.Graphics.Glx.Glx.GetProcAddress(Byte())
  name.vb: GetProcAddress(Byte())
- uid: OpenTK.Graphics.Glx.Glx.GetProcAddress(System.Byte@)
  commentId: M:OpenTK.Graphics.Glx.Glx.GetProcAddress(System.Byte@)
  id: GetProcAddress(System.Byte@)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: GetProcAddress(in byte)
  nameWithType: Glx.GetProcAddress(in byte)
  fullName: OpenTK.Graphics.Glx.Glx.GetProcAddress(in byte)
  type: Method
  source:
    id: GetProcAddress
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 290
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.4]</b>

    <b>[entry point: <code>glXGetProcAddress</code>]</b>

    <br />
  example: []
  syntax:
    content: public static nint GetProcAddress(in byte procName)
    parameters:
    - id: procName
      type: System.Byte
    return:
      type: System.IntPtr
    content.vb: Public Shared Function GetProcAddress(procName As Byte) As IntPtr
  overload: OpenTK.Graphics.Glx.Glx.GetProcAddress*
  nameWithType.vb: Glx.GetProcAddress(Byte)
  fullName.vb: OpenTK.Graphics.Glx.Glx.GetProcAddress(Byte)
  name.vb: GetProcAddress(Byte)
- uid: OpenTK.Graphics.Glx.Glx.GetSelectedEvent(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,System.Span{System.UInt64})
  commentId: M:OpenTK.Graphics.Glx.Glx.GetSelectedEvent(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,System.Span{System.UInt64})
  id: GetSelectedEvent(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,System.Span{System.UInt64})
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: GetSelectedEvent(DisplayPtr, GLXDrawable, Span<ulong>)
  nameWithType: Glx.GetSelectedEvent(DisplayPtr, GLXDrawable, Span<ulong>)
  fullName: OpenTK.Graphics.Glx.Glx.GetSelectedEvent(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXDrawable, System.Span<ulong>)
  type: Method
  source:
    id: GetSelectedEvent
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 300
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXGetSelectedEvent</code>]</b>

    <br />
  example: []
  syntax:
    content: public static void GetSelectedEvent(DisplayPtr dpy, GLXDrawable draw, Span<ulong> event_mask)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: draw
      type: OpenTK.Graphics.Glx.GLXDrawable
    - id: event_mask
      type: System.Span{System.UInt64}
    content.vb: Public Shared Sub GetSelectedEvent(dpy As DisplayPtr, draw As GLXDrawable, event_mask As Span(Of ULong))
  overload: OpenTK.Graphics.Glx.Glx.GetSelectedEvent*
  nameWithType.vb: Glx.GetSelectedEvent(DisplayPtr, GLXDrawable, Span(Of ULong))
  fullName.vb: OpenTK.Graphics.Glx.Glx.GetSelectedEvent(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXDrawable, System.Span(Of ULong))
  name.vb: GetSelectedEvent(DisplayPtr, GLXDrawable, Span(Of ULong))
- uid: OpenTK.Graphics.Glx.Glx.GetSelectedEvent(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,System.UInt64[])
  commentId: M:OpenTK.Graphics.Glx.Glx.GetSelectedEvent(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,System.UInt64[])
  id: GetSelectedEvent(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,System.UInt64[])
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: GetSelectedEvent(DisplayPtr, GLXDrawable, ulong[])
  nameWithType: Glx.GetSelectedEvent(DisplayPtr, GLXDrawable, ulong[])
  fullName: OpenTK.Graphics.Glx.Glx.GetSelectedEvent(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXDrawable, ulong[])
  type: Method
  source:
    id: GetSelectedEvent
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 308
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXGetSelectedEvent</code>]</b>

    <br />
  example: []
  syntax:
    content: public static void GetSelectedEvent(DisplayPtr dpy, GLXDrawable draw, ulong[] event_mask)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: draw
      type: OpenTK.Graphics.Glx.GLXDrawable
    - id: event_mask
      type: System.UInt64[]
    content.vb: Public Shared Sub GetSelectedEvent(dpy As DisplayPtr, draw As GLXDrawable, event_mask As ULong())
  overload: OpenTK.Graphics.Glx.Glx.GetSelectedEvent*
  nameWithType.vb: Glx.GetSelectedEvent(DisplayPtr, GLXDrawable, ULong())
  fullName.vb: OpenTK.Graphics.Glx.Glx.GetSelectedEvent(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXDrawable, ULong())
  name.vb: GetSelectedEvent(DisplayPtr, GLXDrawable, ULong())
- uid: OpenTK.Graphics.Glx.Glx.GetSelectedEvent(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,System.UInt64@)
  commentId: M:OpenTK.Graphics.Glx.Glx.GetSelectedEvent(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,System.UInt64@)
  id: GetSelectedEvent(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,System.UInt64@)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: GetSelectedEvent(DisplayPtr, GLXDrawable, ref ulong)
  nameWithType: Glx.GetSelectedEvent(DisplayPtr, GLXDrawable, ref ulong)
  fullName: OpenTK.Graphics.Glx.Glx.GetSelectedEvent(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXDrawable, ref ulong)
  type: Method
  source:
    id: GetSelectedEvent
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 316
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXGetSelectedEvent</code>]</b>

    <br />
  example: []
  syntax:
    content: public static void GetSelectedEvent(DisplayPtr dpy, GLXDrawable draw, ref ulong event_mask)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: draw
      type: OpenTK.Graphics.Glx.GLXDrawable
    - id: event_mask
      type: System.UInt64
    content.vb: Public Shared Sub GetSelectedEvent(dpy As DisplayPtr, draw As GLXDrawable, event_mask As ULong)
  overload: OpenTK.Graphics.Glx.Glx.GetSelectedEvent*
  nameWithType.vb: Glx.GetSelectedEvent(DisplayPtr, GLXDrawable, ULong)
  fullName.vb: OpenTK.Graphics.Glx.Glx.GetSelectedEvent(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXDrawable, ULong)
  name.vb: GetSelectedEvent(DisplayPtr, GLXDrawable, ULong)
- uid: OpenTK.Graphics.Glx.Glx.QueryContext(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXContext,System.Int32,System.Span{System.Int32})
  commentId: M:OpenTK.Graphics.Glx.Glx.QueryContext(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXContext,System.Int32,System.Span{System.Int32})
  id: QueryContext(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXContext,System.Int32,System.Span{System.Int32})
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: QueryContext(DisplayPtr, GLXContext, int, Span<int>)
  nameWithType: Glx.QueryContext(DisplayPtr, GLXContext, int, Span<int>)
  fullName: OpenTK.Graphics.Glx.Glx.QueryContext(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXContext, int, System.Span<int>)
  type: Method
  source:
    id: QueryContext
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 324
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXQueryContext</code>]</b>

    <br />
  example: []
  syntax:
    content: public static int QueryContext(DisplayPtr dpy, GLXContext ctx, int attribute, Span<int> value)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: ctx
      type: OpenTK.Graphics.Glx.GLXContext
    - id: attribute
      type: System.Int32
    - id: value
      type: System.Span{System.Int32}
    return:
      type: System.Int32
    content.vb: Public Shared Function QueryContext(dpy As DisplayPtr, ctx As GLXContext, attribute As Integer, value As Span(Of Integer)) As Integer
  overload: OpenTK.Graphics.Glx.Glx.QueryContext*
  nameWithType.vb: Glx.QueryContext(DisplayPtr, GLXContext, Integer, Span(Of Integer))
  fullName.vb: OpenTK.Graphics.Glx.Glx.QueryContext(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXContext, Integer, System.Span(Of Integer))
  name.vb: QueryContext(DisplayPtr, GLXContext, Integer, Span(Of Integer))
- uid: OpenTK.Graphics.Glx.Glx.QueryContext(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXContext,System.Int32,System.Int32[])
  commentId: M:OpenTK.Graphics.Glx.Glx.QueryContext(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXContext,System.Int32,System.Int32[])
  id: QueryContext(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXContext,System.Int32,System.Int32[])
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: QueryContext(DisplayPtr, GLXContext, int, int[])
  nameWithType: Glx.QueryContext(DisplayPtr, GLXContext, int, int[])
  fullName: OpenTK.Graphics.Glx.Glx.QueryContext(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXContext, int, int[])
  type: Method
  source:
    id: QueryContext
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 334
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXQueryContext</code>]</b>

    <br />
  example: []
  syntax:
    content: public static int QueryContext(DisplayPtr dpy, GLXContext ctx, int attribute, int[] value)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: ctx
      type: OpenTK.Graphics.Glx.GLXContext
    - id: attribute
      type: System.Int32
    - id: value
      type: System.Int32[]
    return:
      type: System.Int32
    content.vb: Public Shared Function QueryContext(dpy As DisplayPtr, ctx As GLXContext, attribute As Integer, value As Integer()) As Integer
  overload: OpenTK.Graphics.Glx.Glx.QueryContext*
  nameWithType.vb: Glx.QueryContext(DisplayPtr, GLXContext, Integer, Integer())
  fullName.vb: OpenTK.Graphics.Glx.Glx.QueryContext(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXContext, Integer, Integer())
  name.vb: QueryContext(DisplayPtr, GLXContext, Integer, Integer())
- uid: OpenTK.Graphics.Glx.Glx.QueryContext(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXContext,System.Int32,System.Int32@)
  commentId: M:OpenTK.Graphics.Glx.Glx.QueryContext(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXContext,System.Int32,System.Int32@)
  id: QueryContext(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXContext,System.Int32,System.Int32@)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: QueryContext(DisplayPtr, GLXContext, int, ref int)
  nameWithType: Glx.QueryContext(DisplayPtr, GLXContext, int, ref int)
  fullName: OpenTK.Graphics.Glx.Glx.QueryContext(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXContext, int, ref int)
  type: Method
  source:
    id: QueryContext
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 344
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXQueryContext</code>]</b>

    <br />
  example: []
  syntax:
    content: public static int QueryContext(DisplayPtr dpy, GLXContext ctx, int attribute, ref int value)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: ctx
      type: OpenTK.Graphics.Glx.GLXContext
    - id: attribute
      type: System.Int32
    - id: value
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function QueryContext(dpy As DisplayPtr, ctx As GLXContext, attribute As Integer, value As Integer) As Integer
  overload: OpenTK.Graphics.Glx.Glx.QueryContext*
  nameWithType.vb: Glx.QueryContext(DisplayPtr, GLXContext, Integer, Integer)
  fullName.vb: OpenTK.Graphics.Glx.Glx.QueryContext(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXContext, Integer, Integer)
  name.vb: QueryContext(DisplayPtr, GLXContext, Integer, Integer)
- uid: OpenTK.Graphics.Glx.Glx.QueryDrawable(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,System.Int32,System.Span{System.UInt32})
  commentId: M:OpenTK.Graphics.Glx.Glx.QueryDrawable(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,System.Int32,System.Span{System.UInt32})
  id: QueryDrawable(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,System.Int32,System.Span{System.UInt32})
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: QueryDrawable(DisplayPtr, GLXDrawable, int, Span<uint>)
  nameWithType: Glx.QueryDrawable(DisplayPtr, GLXDrawable, int, Span<uint>)
  fullName: OpenTK.Graphics.Glx.Glx.QueryDrawable(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXDrawable, int, System.Span<uint>)
  type: Method
  source:
    id: QueryDrawable
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 354
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXQueryDrawable</code>]</b>

    <br />
  example: []
  syntax:
    content: public static void QueryDrawable(DisplayPtr dpy, GLXDrawable draw, int attribute, Span<uint> value)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: draw
      type: OpenTK.Graphics.Glx.GLXDrawable
    - id: attribute
      type: System.Int32
    - id: value
      type: System.Span{System.UInt32}
    content.vb: Public Shared Sub QueryDrawable(dpy As DisplayPtr, draw As GLXDrawable, attribute As Integer, value As Span(Of UInteger))
  overload: OpenTK.Graphics.Glx.Glx.QueryDrawable*
  nameWithType.vb: Glx.QueryDrawable(DisplayPtr, GLXDrawable, Integer, Span(Of UInteger))
  fullName.vb: OpenTK.Graphics.Glx.Glx.QueryDrawable(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXDrawable, Integer, System.Span(Of UInteger))
  name.vb: QueryDrawable(DisplayPtr, GLXDrawable, Integer, Span(Of UInteger))
- uid: OpenTK.Graphics.Glx.Glx.QueryDrawable(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,System.Int32,System.UInt32[])
  commentId: M:OpenTK.Graphics.Glx.Glx.QueryDrawable(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,System.Int32,System.UInt32[])
  id: QueryDrawable(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,System.Int32,System.UInt32[])
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: QueryDrawable(DisplayPtr, GLXDrawable, int, uint[])
  nameWithType: Glx.QueryDrawable(DisplayPtr, GLXDrawable, int, uint[])
  fullName: OpenTK.Graphics.Glx.Glx.QueryDrawable(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXDrawable, int, uint[])
  type: Method
  source:
    id: QueryDrawable
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 362
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXQueryDrawable</code>]</b>

    <br />
  example: []
  syntax:
    content: public static void QueryDrawable(DisplayPtr dpy, GLXDrawable draw, int attribute, uint[] value)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: draw
      type: OpenTK.Graphics.Glx.GLXDrawable
    - id: attribute
      type: System.Int32
    - id: value
      type: System.UInt32[]
    content.vb: Public Shared Sub QueryDrawable(dpy As DisplayPtr, draw As GLXDrawable, attribute As Integer, value As UInteger())
  overload: OpenTK.Graphics.Glx.Glx.QueryDrawable*
  nameWithType.vb: Glx.QueryDrawable(DisplayPtr, GLXDrawable, Integer, UInteger())
  fullName.vb: OpenTK.Graphics.Glx.Glx.QueryDrawable(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXDrawable, Integer, UInteger())
  name.vb: QueryDrawable(DisplayPtr, GLXDrawable, Integer, UInteger())
- uid: OpenTK.Graphics.Glx.Glx.QueryDrawable(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,System.Int32,System.UInt32@)
  commentId: M:OpenTK.Graphics.Glx.Glx.QueryDrawable(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,System.Int32,System.UInt32@)
  id: QueryDrawable(OpenTK.Graphics.Glx.DisplayPtr,OpenTK.Graphics.Glx.GLXDrawable,System.Int32,System.UInt32@)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: QueryDrawable(DisplayPtr, GLXDrawable, int, ref uint)
  nameWithType: Glx.QueryDrawable(DisplayPtr, GLXDrawable, int, ref uint)
  fullName: OpenTK.Graphics.Glx.Glx.QueryDrawable(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXDrawable, int, ref uint)
  type: Method
  source:
    id: QueryDrawable
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 370
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.3]</b>

    <b>[entry point: <code>glXQueryDrawable</code>]</b>

    <br />
  example: []
  syntax:
    content: public static void QueryDrawable(DisplayPtr dpy, GLXDrawable draw, int attribute, ref uint value)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: draw
      type: OpenTK.Graphics.Glx.GLXDrawable
    - id: attribute
      type: System.Int32
    - id: value
      type: System.UInt32
    content.vb: Public Shared Sub QueryDrawable(dpy As DisplayPtr, draw As GLXDrawable, attribute As Integer, value As UInteger)
  overload: OpenTK.Graphics.Glx.Glx.QueryDrawable*
  nameWithType.vb: Glx.QueryDrawable(DisplayPtr, GLXDrawable, Integer, UInteger)
  fullName.vb: OpenTK.Graphics.Glx.Glx.QueryDrawable(OpenTK.Graphics.Glx.DisplayPtr, OpenTK.Graphics.Glx.GLXDrawable, Integer, UInteger)
  name.vb: QueryDrawable(DisplayPtr, GLXDrawable, Integer, UInteger)
- uid: OpenTK.Graphics.Glx.Glx.QueryExtension(OpenTK.Graphics.Glx.DisplayPtr,System.Span{System.Int32},System.Span{System.Int32})
  commentId: M:OpenTK.Graphics.Glx.Glx.QueryExtension(OpenTK.Graphics.Glx.DisplayPtr,System.Span{System.Int32},System.Span{System.Int32})
  id: QueryExtension(OpenTK.Graphics.Glx.DisplayPtr,System.Span{System.Int32},System.Span{System.Int32})
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: QueryExtension(DisplayPtr, Span<int>, Span<int>)
  nameWithType: Glx.QueryExtension(DisplayPtr, Span<int>, Span<int>)
  fullName: OpenTK.Graphics.Glx.Glx.QueryExtension(OpenTK.Graphics.Glx.DisplayPtr, System.Span<int>, System.Span<int>)
  type: Method
  source:
    id: QueryExtension
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 378
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>glXQueryExtension</code>]</b>

    <br />
  example: []
  syntax:
    content: public static bool QueryExtension(DisplayPtr dpy, Span<int> errorb, Span<int> @event)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: errorb
      type: System.Span{System.Int32}
    - id: event
      type: System.Span{System.Int32}
    return:
      type: System.Boolean
    content.vb: Public Shared Function QueryExtension(dpy As DisplayPtr, errorb As Span(Of Integer), [event] As Span(Of Integer)) As Boolean
  overload: OpenTK.Graphics.Glx.Glx.QueryExtension*
  nameWithType.vb: Glx.QueryExtension(DisplayPtr, Span(Of Integer), Span(Of Integer))
  fullName.vb: OpenTK.Graphics.Glx.Glx.QueryExtension(OpenTK.Graphics.Glx.DisplayPtr, System.Span(Of Integer), System.Span(Of Integer))
  name.vb: QueryExtension(DisplayPtr, Span(Of Integer), Span(Of Integer))
- uid: OpenTK.Graphics.Glx.Glx.QueryExtension(OpenTK.Graphics.Glx.DisplayPtr,System.Int32[],System.Int32[])
  commentId: M:OpenTK.Graphics.Glx.Glx.QueryExtension(OpenTK.Graphics.Glx.DisplayPtr,System.Int32[],System.Int32[])
  id: QueryExtension(OpenTK.Graphics.Glx.DisplayPtr,System.Int32[],System.Int32[])
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: QueryExtension(DisplayPtr, int[], int[])
  nameWithType: Glx.QueryExtension(DisplayPtr, int[], int[])
  fullName: OpenTK.Graphics.Glx.Glx.QueryExtension(OpenTK.Graphics.Glx.DisplayPtr, int[], int[])
  type: Method
  source:
    id: QueryExtension
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 391
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>glXQueryExtension</code>]</b>

    <br />
  example: []
  syntax:
    content: public static bool QueryExtension(DisplayPtr dpy, int[] errorb, int[] @event)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: errorb
      type: System.Int32[]
    - id: event
      type: System.Int32[]
    return:
      type: System.Boolean
    content.vb: Public Shared Function QueryExtension(dpy As DisplayPtr, errorb As Integer(), [event] As Integer()) As Boolean
  overload: OpenTK.Graphics.Glx.Glx.QueryExtension*
  nameWithType.vb: Glx.QueryExtension(DisplayPtr, Integer(), Integer())
  fullName.vb: OpenTK.Graphics.Glx.Glx.QueryExtension(OpenTK.Graphics.Glx.DisplayPtr, Integer(), Integer())
  name.vb: QueryExtension(DisplayPtr, Integer(), Integer())
- uid: OpenTK.Graphics.Glx.Glx.QueryExtension(OpenTK.Graphics.Glx.DisplayPtr,System.Int32@,System.Int32@)
  commentId: M:OpenTK.Graphics.Glx.Glx.QueryExtension(OpenTK.Graphics.Glx.DisplayPtr,System.Int32@,System.Int32@)
  id: QueryExtension(OpenTK.Graphics.Glx.DisplayPtr,System.Int32@,System.Int32@)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: QueryExtension(DisplayPtr, ref int, ref int)
  nameWithType: Glx.QueryExtension(DisplayPtr, ref int, ref int)
  fullName: OpenTK.Graphics.Glx.Glx.QueryExtension(OpenTK.Graphics.Glx.DisplayPtr, ref int, ref int)
  type: Method
  source:
    id: QueryExtension
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 404
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>glXQueryExtension</code>]</b>

    <br />
  example: []
  syntax:
    content: public static bool QueryExtension(DisplayPtr dpy, ref int errorb, ref int @event)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: errorb
      type: System.Int32
    - id: event
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function QueryExtension(dpy As DisplayPtr, errorb As Integer, [event] As Integer) As Boolean
  overload: OpenTK.Graphics.Glx.Glx.QueryExtension*
  nameWithType.vb: Glx.QueryExtension(DisplayPtr, Integer, Integer)
  fullName.vb: OpenTK.Graphics.Glx.Glx.QueryExtension(OpenTK.Graphics.Glx.DisplayPtr, Integer, Integer)
  name.vb: QueryExtension(DisplayPtr, Integer, Integer)
- uid: OpenTK.Graphics.Glx.Glx.QueryExtensionsString(OpenTK.Graphics.Glx.DisplayPtr,System.Int32)
  commentId: M:OpenTK.Graphics.Glx.Glx.QueryExtensionsString(OpenTK.Graphics.Glx.DisplayPtr,System.Int32)
  id: QueryExtensionsString(OpenTK.Graphics.Glx.DisplayPtr,System.Int32)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: QueryExtensionsString(DisplayPtr, int)
  nameWithType: Glx.QueryExtensionsString(DisplayPtr, int)
  fullName: OpenTK.Graphics.Glx.Glx.QueryExtensionsString(OpenTK.Graphics.Glx.DisplayPtr, int)
  type: Method
  source:
    id: QueryExtensionsString
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 415
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  example: []
  syntax:
    content: public static string? QueryExtensionsString(DisplayPtr dpy, int screen)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: screen
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Shared Function QueryExtensionsString(dpy As DisplayPtr, screen As Integer) As String
  overload: OpenTK.Graphics.Glx.Glx.QueryExtensionsString*
  nameWithType.vb: Glx.QueryExtensionsString(DisplayPtr, Integer)
  fullName.vb: OpenTK.Graphics.Glx.Glx.QueryExtensionsString(OpenTK.Graphics.Glx.DisplayPtr, Integer)
  name.vb: QueryExtensionsString(DisplayPtr, Integer)
- uid: OpenTK.Graphics.Glx.Glx.QueryServerString(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32)
  commentId: M:OpenTK.Graphics.Glx.Glx.QueryServerString(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32)
  id: QueryServerString(OpenTK.Graphics.Glx.DisplayPtr,System.Int32,System.Int32)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: QueryServerString(DisplayPtr, int, int)
  nameWithType: Glx.QueryServerString(DisplayPtr, int, int)
  fullName: OpenTK.Graphics.Glx.Glx.QueryServerString(OpenTK.Graphics.Glx.DisplayPtr, int, int)
  type: Method
  source:
    id: QueryServerString
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 424
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  example: []
  syntax:
    content: public static string? QueryServerString(DisplayPtr dpy, int screen, int name)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: screen
      type: System.Int32
    - id: name
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Shared Function QueryServerString(dpy As DisplayPtr, screen As Integer, name As Integer) As String
  overload: OpenTK.Graphics.Glx.Glx.QueryServerString*
  nameWithType.vb: Glx.QueryServerString(DisplayPtr, Integer, Integer)
  fullName.vb: OpenTK.Graphics.Glx.Glx.QueryServerString(OpenTK.Graphics.Glx.DisplayPtr, Integer, Integer)
  name.vb: QueryServerString(DisplayPtr, Integer, Integer)
- uid: OpenTK.Graphics.Glx.Glx.QueryVersion(OpenTK.Graphics.Glx.DisplayPtr,System.Span{System.Int32},System.Span{System.Int32})
  commentId: M:OpenTK.Graphics.Glx.Glx.QueryVersion(OpenTK.Graphics.Glx.DisplayPtr,System.Span{System.Int32},System.Span{System.Int32})
  id: QueryVersion(OpenTK.Graphics.Glx.DisplayPtr,System.Span{System.Int32},System.Span{System.Int32})
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: QueryVersion(DisplayPtr, Span<int>, Span<int>)
  nameWithType: Glx.QueryVersion(DisplayPtr, Span<int>, Span<int>)
  fullName: OpenTK.Graphics.Glx.Glx.QueryVersion(OpenTK.Graphics.Glx.DisplayPtr, System.Span<int>, System.Span<int>)
  type: Method
  source:
    id: QueryVersion
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 433
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>glXQueryVersion</code>]</b>

    <br />
  example: []
  syntax:
    content: public static bool QueryVersion(DisplayPtr dpy, Span<int> maj, Span<int> min)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: maj
      type: System.Span{System.Int32}
    - id: min
      type: System.Span{System.Int32}
    return:
      type: System.Boolean
    content.vb: Public Shared Function QueryVersion(dpy As DisplayPtr, maj As Span(Of Integer), min As Span(Of Integer)) As Boolean
  overload: OpenTK.Graphics.Glx.Glx.QueryVersion*
  nameWithType.vb: Glx.QueryVersion(DisplayPtr, Span(Of Integer), Span(Of Integer))
  fullName.vb: OpenTK.Graphics.Glx.Glx.QueryVersion(OpenTK.Graphics.Glx.DisplayPtr, System.Span(Of Integer), System.Span(Of Integer))
  name.vb: QueryVersion(DisplayPtr, Span(Of Integer), Span(Of Integer))
- uid: OpenTK.Graphics.Glx.Glx.QueryVersion(OpenTK.Graphics.Glx.DisplayPtr,System.Int32[],System.Int32[])
  commentId: M:OpenTK.Graphics.Glx.Glx.QueryVersion(OpenTK.Graphics.Glx.DisplayPtr,System.Int32[],System.Int32[])
  id: QueryVersion(OpenTK.Graphics.Glx.DisplayPtr,System.Int32[],System.Int32[])
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: QueryVersion(DisplayPtr, int[], int[])
  nameWithType: Glx.QueryVersion(DisplayPtr, int[], int[])
  fullName: OpenTK.Graphics.Glx.Glx.QueryVersion(OpenTK.Graphics.Glx.DisplayPtr, int[], int[])
  type: Method
  source:
    id: QueryVersion
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 446
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>glXQueryVersion</code>]</b>

    <br />
  example: []
  syntax:
    content: public static bool QueryVersion(DisplayPtr dpy, int[] maj, int[] min)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: maj
      type: System.Int32[]
    - id: min
      type: System.Int32[]
    return:
      type: System.Boolean
    content.vb: Public Shared Function QueryVersion(dpy As DisplayPtr, maj As Integer(), min As Integer()) As Boolean
  overload: OpenTK.Graphics.Glx.Glx.QueryVersion*
  nameWithType.vb: Glx.QueryVersion(DisplayPtr, Integer(), Integer())
  fullName.vb: OpenTK.Graphics.Glx.Glx.QueryVersion(OpenTK.Graphics.Glx.DisplayPtr, Integer(), Integer())
  name.vb: QueryVersion(DisplayPtr, Integer(), Integer())
- uid: OpenTK.Graphics.Glx.Glx.QueryVersion(OpenTK.Graphics.Glx.DisplayPtr,System.Int32@,System.Int32@)
  commentId: M:OpenTK.Graphics.Glx.Glx.QueryVersion(OpenTK.Graphics.Glx.DisplayPtr,System.Int32@,System.Int32@)
  id: QueryVersion(OpenTK.Graphics.Glx.DisplayPtr,System.Int32@,System.Int32@)
  parent: OpenTK.Graphics.Glx.Glx
  langs:
  - csharp
  - vb
  name: QueryVersion(DisplayPtr, ref int, ref int)
  nameWithType: Glx.QueryVersion(DisplayPtr, ref int, ref int)
  fullName: OpenTK.Graphics.Glx.Glx.QueryVersion(OpenTK.Graphics.Glx.DisplayPtr, ref int, ref int)
  type: Method
  source:
    id: QueryVersion
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Graphics\Glx\GLX.Overloads.cs
    startLine: 459
  assemblies:
  - OpenTK.Graphics
  namespace: OpenTK.Graphics.Glx
  summary: >-
    <b>[requires: v1.0]</b>

    <b>[entry point: <code>glXQueryVersion</code>]</b>

    <br />
  example: []
  syntax:
    content: public static bool QueryVersion(DisplayPtr dpy, ref int maj, ref int min)
    parameters:
    - id: dpy
      type: OpenTK.Graphics.Glx.DisplayPtr
    - id: maj
      type: System.Int32
    - id: min
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function QueryVersion(dpy As DisplayPtr, maj As Integer, min As Integer) As Boolean
  overload: OpenTK.Graphics.Glx.Glx.QueryVersion*
  nameWithType.vb: Glx.QueryVersion(DisplayPtr, Integer, Integer)
  fullName.vb: OpenTK.Graphics.Glx.Glx.QueryVersion(OpenTK.Graphics.Glx.DisplayPtr, Integer, Integer)
  name.vb: QueryVersion(DisplayPtr, Integer, Integer)
references:
- uid: OpenTK.Graphics.Glx
  commentId: N:OpenTK.Graphics.Glx
  href: OpenTK.html
  name: OpenTK.Graphics.Glx
  nameWithType: OpenTK.Graphics.Glx
  fullName: OpenTK.Graphics.Glx
  spec.csharp:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Graphics
    name: Graphics
    href: OpenTK.Graphics.html
  - name: .
  - uid: OpenTK.Graphics.Glx
    name: Glx
    href: OpenTK.Graphics.Glx.html
  spec.vb:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Graphics
    name: Graphics
    href: OpenTK.Graphics.html
  - name: .
  - uid: OpenTK.Graphics.Glx
    name: Glx
    href: OpenTK.Graphics.Glx.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: OpenTK.Graphics.Glx.Glx.ChooseFBConfig*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.ChooseFBConfig
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_ChooseFBConfig_OpenTK_Graphics_Glx_DisplayPtr_System_Int32_System_Int32__System_Int32__
  name: ChooseFBConfig
  nameWithType: Glx.ChooseFBConfig
  fullName: OpenTK.Graphics.Glx.Glx.ChooseFBConfig
- uid: OpenTK.Graphics.Glx.DisplayPtr
  commentId: T:OpenTK.Graphics.Glx.DisplayPtr
  parent: OpenTK.Graphics.Glx
  href: OpenTK.Graphics.Glx.DisplayPtr.html
  name: DisplayPtr
  nameWithType: DisplayPtr
  fullName: OpenTK.Graphics.Glx.DisplayPtr
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Int32*
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int*
  nameWithType: int*
  fullName: int*
  nameWithType.vb: Integer*
  fullName.vb: Integer*
  name.vb: Integer*
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '*'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '*'
- uid: OpenTK.Graphics.Glx.GLXFBConfig*
  isExternal: true
  href: OpenTK.Graphics.Glx.GLXFBConfig.html
  name: GLXFBConfig*
  nameWithType: GLXFBConfig*
  fullName: OpenTK.Graphics.Glx.GLXFBConfig*
  spec.csharp:
  - uid: OpenTK.Graphics.Glx.GLXFBConfig
    name: GLXFBConfig
    href: OpenTK.Graphics.Glx.GLXFBConfig.html
  - name: '*'
  spec.vb:
  - uid: OpenTK.Graphics.Glx.GLXFBConfig
    name: GLXFBConfig
    href: OpenTK.Graphics.Glx.GLXFBConfig.html
  - name: '*'
- uid: OpenTK.Graphics.Glx.Glx.ChooseVisual*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.ChooseVisual
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_ChooseVisual_OpenTK_Graphics_Glx_DisplayPtr_System_Int32_System_Int32__
  name: ChooseVisual
  nameWithType: Glx.ChooseVisual
  fullName: OpenTK.Graphics.Glx.Glx.ChooseVisual
- uid: OpenTK.Graphics.Glx.XVisualInfoPtr
  commentId: T:OpenTK.Graphics.Glx.XVisualInfoPtr
  parent: OpenTK.Graphics.Glx
  href: OpenTK.Graphics.Glx.XVisualInfoPtr.html
  name: XVisualInfoPtr
  nameWithType: XVisualInfoPtr
  fullName: OpenTK.Graphics.Glx.XVisualInfoPtr
- uid: OpenTK.Graphics.Glx.Glx.CopyContext*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.CopyContext
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_CopyContext_OpenTK_Graphics_Glx_DisplayPtr_OpenTK_Graphics_Glx_GLXContext_OpenTK_Graphics_Glx_GLXContext_System_UInt64_
  name: CopyContext
  nameWithType: Glx.CopyContext
  fullName: OpenTK.Graphics.Glx.Glx.CopyContext
- uid: OpenTK.Graphics.Glx.GLXContext
  commentId: T:OpenTK.Graphics.Glx.GLXContext
  parent: OpenTK.Graphics.Glx
  href: OpenTK.Graphics.Glx.GLXContext.html
  name: GLXContext
  nameWithType: GLXContext
  fullName: OpenTK.Graphics.Glx.GLXContext
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: OpenTK.Graphics.Glx.Glx.CreateContext*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.CreateContext
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_CreateContext_OpenTK_Graphics_Glx_DisplayPtr_OpenTK_Graphics_Glx_XVisualInfoPtr_OpenTK_Graphics_Glx_GLXContext_System_Boolean_
  name: CreateContext
  nameWithType: Glx.CreateContext
  fullName: OpenTK.Graphics.Glx.Glx.CreateContext
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: OpenTK.Graphics.Glx.Glx.CreateGLXPixmap*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.CreateGLXPixmap
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_CreateGLXPixmap_OpenTK_Graphics_Glx_DisplayPtr_OpenTK_Graphics_Glx_XVisualInfoPtr_OpenTK_Graphics_Glx_Pixmap_
  name: CreateGLXPixmap
  nameWithType: Glx.CreateGLXPixmap
  fullName: OpenTK.Graphics.Glx.Glx.CreateGLXPixmap
- uid: OpenTK.Graphics.Glx.Pixmap
  commentId: T:OpenTK.Graphics.Glx.Pixmap
  parent: OpenTK.Graphics.Glx
  href: OpenTK.Graphics.Glx.Pixmap.html
  name: Pixmap
  nameWithType: Pixmap
  fullName: OpenTK.Graphics.Glx.Pixmap
- uid: OpenTK.Graphics.Glx.GLXPixmap
  commentId: T:OpenTK.Graphics.Glx.GLXPixmap
  parent: OpenTK.Graphics.Glx
  href: OpenTK.Graphics.Glx.GLXPixmap.html
  name: GLXPixmap
  nameWithType: GLXPixmap
  fullName: OpenTK.Graphics.Glx.GLXPixmap
- uid: OpenTK.Graphics.Glx.Glx.CreateNewContext*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.CreateNewContext
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_CreateNewContext_OpenTK_Graphics_Glx_DisplayPtr_OpenTK_Graphics_Glx_GLXFBConfig_System_Int32_OpenTK_Graphics_Glx_GLXContext_System_Boolean_
  name: CreateNewContext
  nameWithType: Glx.CreateNewContext
  fullName: OpenTK.Graphics.Glx.Glx.CreateNewContext
- uid: OpenTK.Graphics.Glx.GLXFBConfig
  commentId: T:OpenTK.Graphics.Glx.GLXFBConfig
  parent: OpenTK.Graphics.Glx
  href: OpenTK.Graphics.Glx.GLXFBConfig.html
  name: GLXFBConfig
  nameWithType: GLXFBConfig
  fullName: OpenTK.Graphics.Glx.GLXFBConfig
- uid: OpenTK.Graphics.Glx.Glx.CreatePbuffer*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.CreatePbuffer
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_CreatePbuffer_OpenTK_Graphics_Glx_DisplayPtr_OpenTK_Graphics_Glx_GLXFBConfig_System_Int32__
  name: CreatePbuffer
  nameWithType: Glx.CreatePbuffer
  fullName: OpenTK.Graphics.Glx.Glx.CreatePbuffer
- uid: OpenTK.Graphics.Glx.GLXPbuffer
  commentId: T:OpenTK.Graphics.Glx.GLXPbuffer
  parent: OpenTK.Graphics.Glx
  href: OpenTK.Graphics.Glx.GLXPbuffer.html
  name: GLXPbuffer
  nameWithType: GLXPbuffer
  fullName: OpenTK.Graphics.Glx.GLXPbuffer
- uid: OpenTK.Graphics.Glx.Glx.CreatePixmap*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.CreatePixmap
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_CreatePixmap_OpenTK_Graphics_Glx_DisplayPtr_OpenTK_Graphics_Glx_GLXFBConfig_OpenTK_Graphics_Glx_Pixmap_System_Int32__
  name: CreatePixmap
  nameWithType: Glx.CreatePixmap
  fullName: OpenTK.Graphics.Glx.Glx.CreatePixmap
- uid: OpenTK.Graphics.Glx.Glx.CreateWindow*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.CreateWindow
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_CreateWindow_OpenTK_Graphics_Glx_DisplayPtr_OpenTK_Graphics_Glx_GLXFBConfig_OpenTK_Graphics_Glx_Window_System_Int32__
  name: CreateWindow
  nameWithType: Glx.CreateWindow
  fullName: OpenTK.Graphics.Glx.Glx.CreateWindow
- uid: OpenTK.Graphics.Glx.Window
  commentId: T:OpenTK.Graphics.Glx.Window
  parent: OpenTK.Graphics.Glx
  href: OpenTK.Graphics.Glx.Window.html
  name: Window
  nameWithType: Window
  fullName: OpenTK.Graphics.Glx.Window
- uid: OpenTK.Graphics.Glx.GLXWindow
  commentId: T:OpenTK.Graphics.Glx.GLXWindow
  parent: OpenTK.Graphics.Glx
  href: OpenTK.Graphics.Glx.GLXWindow.html
  name: GLXWindow
  nameWithType: GLXWindow
  fullName: OpenTK.Graphics.Glx.GLXWindow
- uid: OpenTK.Graphics.Glx.Glx.DestroyContext*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.DestroyContext
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_DestroyContext_OpenTK_Graphics_Glx_DisplayPtr_OpenTK_Graphics_Glx_GLXContext_
  name: DestroyContext
  nameWithType: Glx.DestroyContext
  fullName: OpenTK.Graphics.Glx.Glx.DestroyContext
- uid: OpenTK.Graphics.Glx.Glx.DestroyGLXPixmap*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.DestroyGLXPixmap
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_DestroyGLXPixmap_OpenTK_Graphics_Glx_DisplayPtr_OpenTK_Graphics_Glx_GLXPixmap_
  name: DestroyGLXPixmap
  nameWithType: Glx.DestroyGLXPixmap
  fullName: OpenTK.Graphics.Glx.Glx.DestroyGLXPixmap
- uid: OpenTK.Graphics.Glx.Glx.DestroyPbuffer*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.DestroyPbuffer
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_DestroyPbuffer_OpenTK_Graphics_Glx_DisplayPtr_OpenTK_Graphics_Glx_GLXPbuffer_
  name: DestroyPbuffer
  nameWithType: Glx.DestroyPbuffer
  fullName: OpenTK.Graphics.Glx.Glx.DestroyPbuffer
- uid: OpenTK.Graphics.Glx.Glx.DestroyPixmap*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.DestroyPixmap
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_DestroyPixmap_OpenTK_Graphics_Glx_DisplayPtr_OpenTK_Graphics_Glx_GLXPixmap_
  name: DestroyPixmap
  nameWithType: Glx.DestroyPixmap
  fullName: OpenTK.Graphics.Glx.Glx.DestroyPixmap
- uid: OpenTK.Graphics.Glx.Glx.DestroyWindow*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.DestroyWindow
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_DestroyWindow_OpenTK_Graphics_Glx_DisplayPtr_OpenTK_Graphics_Glx_GLXWindow_
  name: DestroyWindow
  nameWithType: Glx.DestroyWindow
  fullName: OpenTK.Graphics.Glx.Glx.DestroyWindow
- uid: OpenTK.Graphics.Glx.Glx.GetClientString_*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.GetClientString_
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_GetClientString__OpenTK_Graphics_Glx_DisplayPtr_System_Int32_
  name: GetClientString_
  nameWithType: Glx.GetClientString_
  fullName: OpenTK.Graphics.Glx.Glx.GetClientString_
- uid: System.Byte*
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte*
  nameWithType: byte*
  fullName: byte*
  nameWithType.vb: Byte*
  fullName.vb: Byte*
  name.vb: Byte*
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '*'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '*'
- uid: OpenTK.Graphics.Glx.Glx.GetConfig*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.GetConfig
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_GetConfig_OpenTK_Graphics_Glx_DisplayPtr_OpenTK_Graphics_Glx_XVisualInfoPtr_System_Int32_System_Int32__
  name: GetConfig
  nameWithType: Glx.GetConfig
  fullName: OpenTK.Graphics.Glx.Glx.GetConfig
- uid: OpenTK.Graphics.Glx.Glx.GetCurrentContext*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.GetCurrentContext
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_GetCurrentContext
  name: GetCurrentContext
  nameWithType: Glx.GetCurrentContext
  fullName: OpenTK.Graphics.Glx.Glx.GetCurrentContext
- uid: OpenTK.Graphics.Glx.Glx.GetCurrentDisplay*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.GetCurrentDisplay
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_GetCurrentDisplay
  name: GetCurrentDisplay
  nameWithType: Glx.GetCurrentDisplay
  fullName: OpenTK.Graphics.Glx.Glx.GetCurrentDisplay
- uid: OpenTK.Graphics.Glx.Glx.GetCurrentDrawable*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.GetCurrentDrawable
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_GetCurrentDrawable
  name: GetCurrentDrawable
  nameWithType: Glx.GetCurrentDrawable
  fullName: OpenTK.Graphics.Glx.Glx.GetCurrentDrawable
- uid: OpenTK.Graphics.Glx.GLXDrawable
  commentId: T:OpenTK.Graphics.Glx.GLXDrawable
  parent: OpenTK.Graphics.Glx
  href: OpenTK.Graphics.Glx.GLXDrawable.html
  name: GLXDrawable
  nameWithType: GLXDrawable
  fullName: OpenTK.Graphics.Glx.GLXDrawable
- uid: OpenTK.Graphics.Glx.Glx.GetCurrentReadDrawable*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.GetCurrentReadDrawable
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_GetCurrentReadDrawable
  name: GetCurrentReadDrawable
  nameWithType: Glx.GetCurrentReadDrawable
  fullName: OpenTK.Graphics.Glx.Glx.GetCurrentReadDrawable
- uid: OpenTK.Graphics.Glx.Glx.GetFBConfigAttrib*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.GetFBConfigAttrib
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_GetFBConfigAttrib_OpenTK_Graphics_Glx_DisplayPtr_OpenTK_Graphics_Glx_GLXFBConfig_System_Int32_System_Int32__
  name: GetFBConfigAttrib
  nameWithType: Glx.GetFBConfigAttrib
  fullName: OpenTK.Graphics.Glx.Glx.GetFBConfigAttrib
- uid: OpenTK.Graphics.Glx.Glx.GetFBConfigs*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.GetFBConfigs
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_GetFBConfigs_OpenTK_Graphics_Glx_DisplayPtr_System_Int32_System_Int32__
  name: GetFBConfigs
  nameWithType: Glx.GetFBConfigs
  fullName: OpenTK.Graphics.Glx.Glx.GetFBConfigs
- uid: OpenTK.Graphics.Glx.Glx.GetProcAddress*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.GetProcAddress
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_GetProcAddress_System_Byte__
  name: GetProcAddress
  nameWithType: Glx.GetProcAddress
  fullName: OpenTK.Graphics.Glx.Glx.GetProcAddress
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.intptr
  name: nint
  nameWithType: nint
  fullName: nint
  nameWithType.vb: IntPtr
  fullName.vb: System.IntPtr
  name.vb: IntPtr
- uid: OpenTK.Graphics.Glx.Glx.GetSelectedEvent*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.GetSelectedEvent
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_GetSelectedEvent_OpenTK_Graphics_Glx_DisplayPtr_OpenTK_Graphics_Glx_GLXDrawable_System_UInt64__
  name: GetSelectedEvent
  nameWithType: Glx.GetSelectedEvent
  fullName: OpenTK.Graphics.Glx.Glx.GetSelectedEvent
- uid: System.UInt64*
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong*
  nameWithType: ulong*
  fullName: ulong*
  nameWithType.vb: ULong*
  fullName.vb: ULong*
  name.vb: ULong*
  spec.csharp:
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '*'
  spec.vb:
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '*'
- uid: OpenTK.Graphics.Glx.Glx.GetVisualFromFBConfig*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.GetVisualFromFBConfig
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_GetVisualFromFBConfig_OpenTK_Graphics_Glx_DisplayPtr_OpenTK_Graphics_Glx_GLXFBConfig_
  name: GetVisualFromFBConfig
  nameWithType: Glx.GetVisualFromFBConfig
  fullName: OpenTK.Graphics.Glx.Glx.GetVisualFromFBConfig
- uid: OpenTK.Graphics.Glx.Glx.IsDirect*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.IsDirect
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_IsDirect_OpenTK_Graphics_Glx_DisplayPtr_OpenTK_Graphics_Glx_GLXContext_
  name: IsDirect
  nameWithType: Glx.IsDirect
  fullName: OpenTK.Graphics.Glx.Glx.IsDirect
- uid: OpenTK.Graphics.Glx.Glx.MakeContextCurrent*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.MakeContextCurrent
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_MakeContextCurrent_OpenTK_Graphics_Glx_DisplayPtr_OpenTK_Graphics_Glx_GLXDrawable_OpenTK_Graphics_Glx_GLXDrawable_OpenTK_Graphics_Glx_GLXContext_
  name: MakeContextCurrent
  nameWithType: Glx.MakeContextCurrent
  fullName: OpenTK.Graphics.Glx.Glx.MakeContextCurrent
- uid: OpenTK.Graphics.Glx.Glx.MakeCurrent*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.MakeCurrent
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_MakeCurrent_OpenTK_Graphics_Glx_DisplayPtr_OpenTK_Graphics_Glx_GLXDrawable_OpenTK_Graphics_Glx_GLXContext_
  name: MakeCurrent
  nameWithType: Glx.MakeCurrent
  fullName: OpenTK.Graphics.Glx.Glx.MakeCurrent
- uid: OpenTK.Graphics.Glx.Glx.QueryContext*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.QueryContext
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_QueryContext_OpenTK_Graphics_Glx_DisplayPtr_OpenTK_Graphics_Glx_GLXContext_System_Int32_System_Int32__
  name: QueryContext
  nameWithType: Glx.QueryContext
  fullName: OpenTK.Graphics.Glx.Glx.QueryContext
- uid: OpenTK.Graphics.Glx.Glx.QueryDrawable*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.QueryDrawable
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_QueryDrawable_OpenTK_Graphics_Glx_DisplayPtr_OpenTK_Graphics_Glx_GLXDrawable_System_Int32_System_UInt32__
  name: QueryDrawable
  nameWithType: Glx.QueryDrawable
  fullName: OpenTK.Graphics.Glx.Glx.QueryDrawable
- uid: System.UInt32*
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint*
  nameWithType: uint*
  fullName: uint*
  nameWithType.vb: UInteger*
  fullName.vb: UInteger*
  name.vb: UInteger*
  spec.csharp:
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: '*'
  spec.vb:
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: '*'
- uid: OpenTK.Graphics.Glx.Glx.QueryExtension*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.QueryExtension
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_QueryExtension_OpenTK_Graphics_Glx_DisplayPtr_System_Int32__System_Int32__
  name: QueryExtension
  nameWithType: Glx.QueryExtension
  fullName: OpenTK.Graphics.Glx.Glx.QueryExtension
- uid: OpenTK.Graphics.Glx.Glx.QueryExtensionsString_*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.QueryExtensionsString_
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_QueryExtensionsString__OpenTK_Graphics_Glx_DisplayPtr_System_Int32_
  name: QueryExtensionsString_
  nameWithType: Glx.QueryExtensionsString_
  fullName: OpenTK.Graphics.Glx.Glx.QueryExtensionsString_
- uid: OpenTK.Graphics.Glx.Glx.QueryServerString_*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.QueryServerString_
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_QueryServerString__OpenTK_Graphics_Glx_DisplayPtr_System_Int32_System_Int32_
  name: QueryServerString_
  nameWithType: Glx.QueryServerString_
  fullName: OpenTK.Graphics.Glx.Glx.QueryServerString_
- uid: OpenTK.Graphics.Glx.Glx.QueryVersion*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.QueryVersion
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_QueryVersion_OpenTK_Graphics_Glx_DisplayPtr_System_Int32__System_Int32__
  name: QueryVersion
  nameWithType: Glx.QueryVersion
  fullName: OpenTK.Graphics.Glx.Glx.QueryVersion
- uid: OpenTK.Graphics.Glx.Glx.SelectEvent*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.SelectEvent
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_SelectEvent_OpenTK_Graphics_Glx_DisplayPtr_OpenTK_Graphics_Glx_GLXDrawable_System_UInt64_
  name: SelectEvent
  nameWithType: Glx.SelectEvent
  fullName: OpenTK.Graphics.Glx.Glx.SelectEvent
- uid: OpenTK.Graphics.Glx.Glx.SwapBuffers*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.SwapBuffers
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_SwapBuffers_OpenTK_Graphics_Glx_DisplayPtr_OpenTK_Graphics_Glx_GLXDrawable_
  name: SwapBuffers
  nameWithType: Glx.SwapBuffers
  fullName: OpenTK.Graphics.Glx.Glx.SwapBuffers
- uid: OpenTK.Graphics.Glx.Glx.UseXFont*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.UseXFont
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_UseXFont_OpenTK_Graphics_Glx_Font_System_Int32_System_Int32_System_Int32_
  name: UseXFont
  nameWithType: Glx.UseXFont
  fullName: OpenTK.Graphics.Glx.Glx.UseXFont
- uid: OpenTK.Graphics.Glx.Font
  commentId: T:OpenTK.Graphics.Glx.Font
  parent: OpenTK.Graphics.Glx
  href: OpenTK.Graphics.Glx.Font.html
  name: Font
  nameWithType: Font
  fullName: OpenTK.Graphics.Glx.Font
- uid: OpenTK.Graphics.Glx.Glx.WaitGL*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.WaitGL
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_WaitGL
  name: WaitGL
  nameWithType: Glx.WaitGL
  fullName: OpenTK.Graphics.Glx.Glx.WaitGL
- uid: OpenTK.Graphics.Glx.Glx.WaitX*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.WaitX
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_WaitX
  name: WaitX
  nameWithType: Glx.WaitX
  fullName: OpenTK.Graphics.Glx.Glx.WaitX
- uid: System.ReadOnlySpan{System.Int32}
  commentId: T:System.ReadOnlySpan{System.Int32}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<int>
  nameWithType: ReadOnlySpan<int>
  fullName: System.ReadOnlySpan<int>
  nameWithType.vb: ReadOnlySpan(Of Integer)
  fullName.vb: System.ReadOnlySpan(Of Integer)
  name.vb: ReadOnlySpan(Of Integer)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Span{System.Int32}
  commentId: T:System.Span{System.Int32}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<int>
  nameWithType: Span<int>
  fullName: System.Span<int>
  nameWithType.vb: Span(Of Integer)
  fullName.vb: System.Span(Of Integer)
  name.vb: Span(Of Integer)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Span`1
  commentId: T:System.Span`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<T>
  nameWithType: Span<T>
  fullName: System.Span<T>
  nameWithType.vb: Span(Of T)
  fullName.vb: System.Span(Of T)
  name.vb: Span(Of T)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: OpenTK.Graphics.Glx.Glx.GetClientString*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.GetClientString
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_GetClientString_OpenTK_Graphics_Glx_DisplayPtr_System_Int32_
  name: GetClientString
  nameWithType: Glx.GetClientString
  fullName: OpenTK.Graphics.Glx.Glx.GetClientString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: OpenTK.Graphics.Glx.Glx.GetFBConfig*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.GetFBConfig
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_GetFBConfig_OpenTK_Graphics_Glx_DisplayPtr_System_Int32_System_Span_System_Int32__
  name: GetFBConfig
  nameWithType: Glx.GetFBConfig
  fullName: OpenTK.Graphics.Glx.Glx.GetFBConfig
- uid: System.ReadOnlySpan{System.Byte}
  commentId: T:System.ReadOnlySpan{System.Byte}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<byte>
  nameWithType: ReadOnlySpan<byte>
  fullName: System.ReadOnlySpan<byte>
  nameWithType.vb: ReadOnlySpan(Of Byte)
  fullName.vb: System.ReadOnlySpan(Of Byte)
  name.vb: ReadOnlySpan(Of Byte)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: System.Span{System.UInt64}
  commentId: T:System.Span{System.UInt64}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<ulong>
  nameWithType: Span<ulong>
  fullName: System.Span<ulong>
  nameWithType.vb: Span(Of ULong)
  fullName.vb: System.Span(Of ULong)
  name.vb: Span(Of ULong)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: System.UInt64[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong[]
  nameWithType: ulong[]
  fullName: ulong[]
  nameWithType.vb: ULong()
  fullName.vb: ULong()
  name.vb: ULong()
  spec.csharp:
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: (
  - name: )
- uid: System.Span{System.UInt32}
  commentId: T:System.Span{System.UInt32}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<uint>
  nameWithType: Span<uint>
  fullName: System.Span<uint>
  nameWithType.vb: Span(Of UInteger)
  fullName.vb: System.Span(Of UInteger)
  name.vb: Span(Of UInteger)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: System.UInt32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint[]
  nameWithType: uint[]
  fullName: uint[]
  nameWithType.vb: UInteger()
  fullName.vb: UInteger()
  name.vb: UInteger()
  spec.csharp:
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: (
  - name: )
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: OpenTK.Graphics.Glx.Glx.QueryExtensionsString*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.QueryExtensionsString
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_QueryExtensionsString_OpenTK_Graphics_Glx_DisplayPtr_System_Int32_
  name: QueryExtensionsString
  nameWithType: Glx.QueryExtensionsString
  fullName: OpenTK.Graphics.Glx.Glx.QueryExtensionsString
- uid: OpenTK.Graphics.Glx.Glx.QueryServerString*
  commentId: Overload:OpenTK.Graphics.Glx.Glx.QueryServerString
  href: OpenTK.Graphics.Glx.Glx.html#OpenTK_Graphics_Glx_Glx_QueryServerString_OpenTK_Graphics_Glx_DisplayPtr_System_Int32_System_Int32_
  name: QueryServerString
  nameWithType: Glx.QueryServerString
  fullName: OpenTK.Graphics.Glx.Glx.QueryServerString
