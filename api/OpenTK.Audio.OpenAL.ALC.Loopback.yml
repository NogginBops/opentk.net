### YamlMime:ManagedReference
items:
- uid: OpenTK.Audio.OpenAL.ALC.Loopback
  commentId: T:OpenTK.Audio.OpenAL.ALC.Loopback
  id: ALC.Loopback
  parent: OpenTK.Audio.OpenAL
  children:
  - OpenTK.Audio.OpenAL.ALC.Loopback.ExtensionName
  - OpenTK.Audio.OpenAL.ALC.Loopback.IsExtensionPresent(OpenTK.Audio.OpenAL.ALDevice)
  - OpenTK.Audio.OpenAL.ALC.Loopback.IsRenderFormatSupportedSOFT(OpenTK.Audio.OpenAL.ALDevice,System.Int32,OpenTK.Audio.OpenAL.Channels,OpenTK.Audio.OpenAL.RenderFormat)
  - OpenTK.Audio.OpenAL.ALC.Loopback.LoopbackOpenDeviceSOFT(System.String)
  - OpenTK.Audio.OpenAL.ALC.Loopback.RenderSamplesSOFT(OpenTK.Audio.OpenAL.ALDevice,System.Byte[],System.Int32)
  - OpenTK.Audio.OpenAL.ALC.Loopback.RenderSamplesSOFT(OpenTK.Audio.OpenAL.ALDevice,System.Byte@,System.Int32)
  - OpenTK.Audio.OpenAL.ALC.Loopback.RenderSamplesSOFT(OpenTK.Audio.OpenAL.ALDevice,System.Byte*,System.Int32)
  - OpenTK.Audio.OpenAL.ALC.Loopback.RenderSamplesSOFT``1(OpenTK.Audio.OpenAL.ALDevice,``0[],System.Int32)
  langs:
  - csharp
  - vb
  name: ALC.Loopback
  nameWithType: ALC.Loopback
  fullName: OpenTK.Audio.OpenAL.ALC.Loopback
  type: Class
  source:
    remote:
      path: src/OpenAL/OpenTK.Audio.OpenAL/Extensions/SOFT.Loopback/Loopback.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: Loopback
    path: opentk/src/OpenAL/OpenTK.Audio.OpenAL/Extensions/SOFT.Loopback/Loopback.cs
    startLine: 11
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  syntax:
    content: public class ALC.Loopback
    content.vb: Public Class ALC.Loopback
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: OpenTK.Audio.OpenAL.ALC.Loopback.ExtensionName
  commentId: F:OpenTK.Audio.OpenAL.ALC.Loopback.ExtensionName
  id: ExtensionName
  parent: OpenTK.Audio.OpenAL.ALC.Loopback
  langs:
  - csharp
  - vb
  name: ExtensionName
  nameWithType: ALC.Loopback.ExtensionName
  fullName: OpenTK.Audio.OpenAL.ALC.Loopback.ExtensionName
  type: Field
  source:
    remote:
      path: src/OpenAL/OpenTK.Audio.OpenAL/Extensions/SOFT.Loopback/Loopback.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: ExtensionName
    path: opentk/src/OpenAL/OpenTK.Audio.OpenAL/Extensions/SOFT.Loopback/Loopback.cs
    startLine: 16
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: The name of this AL extension.
  example: []
  syntax:
    content: public const string ExtensionName = "ALC_SOFT_loopback"
    return:
      type: System.String
    content.vb: Public Const ExtensionName As String = "ALC_SOFT_loopback"
- uid: OpenTK.Audio.OpenAL.ALC.Loopback.IsExtensionPresent(OpenTK.Audio.OpenAL.ALDevice)
  commentId: M:OpenTK.Audio.OpenAL.ALC.Loopback.IsExtensionPresent(OpenTK.Audio.OpenAL.ALDevice)
  id: IsExtensionPresent(OpenTK.Audio.OpenAL.ALDevice)
  parent: OpenTK.Audio.OpenAL.ALC.Loopback
  langs:
  - csharp
  - vb
  name: IsExtensionPresent(ALDevice)
  nameWithType: ALC.Loopback.IsExtensionPresent(ALDevice)
  fullName: OpenTK.Audio.OpenAL.ALC.Loopback.IsExtensionPresent(OpenTK.Audio.OpenAL.ALDevice)
  type: Method
  source:
    remote:
      path: src/OpenAL/OpenTK.Audio.OpenAL/Extensions/SOFT.Loopback/Loopback.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: IsExtensionPresent
    path: opentk/src/OpenAL/OpenTK.Audio.OpenAL/Extensions/SOFT.Loopback/Loopback.cs
    startLine: 33
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: Checks if this extension is present.
  example: []
  syntax:
    content: public static bool IsExtensionPresent(ALDevice device)
    parameters:
    - id: device
      type: OpenTK.Audio.OpenAL.ALDevice
      description: The device to query.
    return:
      type: System.Boolean
      description: Whether the extension was present or not.
    content.vb: Public Shared Function IsExtensionPresent(device As ALDevice) As Boolean
  overload: OpenTK.Audio.OpenAL.ALC.Loopback.IsExtensionPresent*
- uid: OpenTK.Audio.OpenAL.ALC.Loopback.LoopbackOpenDeviceSOFT(System.String)
  commentId: M:OpenTK.Audio.OpenAL.ALC.Loopback.LoopbackOpenDeviceSOFT(System.String)
  id: LoopbackOpenDeviceSOFT(System.String)
  parent: OpenTK.Audio.OpenAL.ALC.Loopback
  langs:
  - csharp
  - vb
  name: LoopbackOpenDeviceSOFT(string)
  nameWithType: ALC.Loopback.LoopbackOpenDeviceSOFT(string)
  fullName: OpenTK.Audio.OpenAL.ALC.Loopback.LoopbackOpenDeviceSOFT(string)
  type: Method
  source:
    remote:
      path: src/OpenAL/OpenTK.Audio.OpenAL/Extensions/SOFT.Loopback/Loopback.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: LoopbackOpenDeviceSOFT
    path: opentk/src/OpenAL/OpenTK.Audio.OpenAL/Extensions/SOFT.Loopback/Loopback.cs
    startLine: 39
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  syntax:
    content: public static ALDevice LoopbackOpenDeviceSOFT(string device)
    parameters:
    - id: device
      type: System.String
    return:
      type: OpenTK.Audio.OpenAL.ALDevice
    content.vb: Public Shared Function LoopbackOpenDeviceSOFT(device As String) As ALDevice
  overload: OpenTK.Audio.OpenAL.ALC.Loopback.LoopbackOpenDeviceSOFT*
  nameWithType.vb: ALC.Loopback.LoopbackOpenDeviceSOFT(String)
  fullName.vb: OpenTK.Audio.OpenAL.ALC.Loopback.LoopbackOpenDeviceSOFT(String)
  name.vb: LoopbackOpenDeviceSOFT(String)
- uid: OpenTK.Audio.OpenAL.ALC.Loopback.IsRenderFormatSupportedSOFT(OpenTK.Audio.OpenAL.ALDevice,System.Int32,OpenTK.Audio.OpenAL.Channels,OpenTK.Audio.OpenAL.RenderFormat)
  commentId: M:OpenTK.Audio.OpenAL.ALC.Loopback.IsRenderFormatSupportedSOFT(OpenTK.Audio.OpenAL.ALDevice,System.Int32,OpenTK.Audio.OpenAL.Channels,OpenTK.Audio.OpenAL.RenderFormat)
  id: IsRenderFormatSupportedSOFT(OpenTK.Audio.OpenAL.ALDevice,System.Int32,OpenTK.Audio.OpenAL.Channels,OpenTK.Audio.OpenAL.RenderFormat)
  parent: OpenTK.Audio.OpenAL.ALC.Loopback
  langs:
  - csharp
  - vb
  name: IsRenderFormatSupportedSOFT(ALDevice, int, Channels, RenderFormat)
  nameWithType: ALC.Loopback.IsRenderFormatSupportedSOFT(ALDevice, int, Channels, RenderFormat)
  fullName: OpenTK.Audio.OpenAL.ALC.Loopback.IsRenderFormatSupportedSOFT(OpenTK.Audio.OpenAL.ALDevice, int, OpenTK.Audio.OpenAL.Channels, OpenTK.Audio.OpenAL.RenderFormat)
  type: Method
  source:
    remote:
      path: src/OpenAL/OpenTK.Audio.OpenAL/Extensions/SOFT.Loopback/Loopback.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: IsRenderFormatSupportedSOFT
    path: opentk/src/OpenAL/OpenTK.Audio.OpenAL/Extensions/SOFT.Loopback/Loopback.cs
    startLine: 44
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  syntax:
    content: public static bool IsRenderFormatSupportedSOFT(ALDevice device, int frequency, Channels channels, RenderFormat type)
    parameters:
    - id: device
      type: OpenTK.Audio.OpenAL.ALDevice
    - id: frequency
      type: System.Int32
    - id: channels
      type: OpenTK.Audio.OpenAL.Channels
    - id: type
      type: OpenTK.Audio.OpenAL.RenderFormat
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsRenderFormatSupportedSOFT(device As ALDevice, frequency As Integer, channels As Channels, type As RenderFormat) As Boolean
  overload: OpenTK.Audio.OpenAL.ALC.Loopback.IsRenderFormatSupportedSOFT*
  nameWithType.vb: ALC.Loopback.IsRenderFormatSupportedSOFT(ALDevice, Integer, Channels, RenderFormat)
  fullName.vb: OpenTK.Audio.OpenAL.ALC.Loopback.IsRenderFormatSupportedSOFT(OpenTK.Audio.OpenAL.ALDevice, Integer, OpenTK.Audio.OpenAL.Channels, OpenTK.Audio.OpenAL.RenderFormat)
  name.vb: IsRenderFormatSupportedSOFT(ALDevice, Integer, Channels, RenderFormat)
- uid: OpenTK.Audio.OpenAL.ALC.Loopback.RenderSamplesSOFT(OpenTK.Audio.OpenAL.ALDevice,System.Byte*,System.Int32)
  commentId: M:OpenTK.Audio.OpenAL.ALC.Loopback.RenderSamplesSOFT(OpenTK.Audio.OpenAL.ALDevice,System.Byte*,System.Int32)
  id: RenderSamplesSOFT(OpenTK.Audio.OpenAL.ALDevice,System.Byte*,System.Int32)
  parent: OpenTK.Audio.OpenAL.ALC.Loopback
  langs:
  - csharp
  - vb
  name: RenderSamplesSOFT(ALDevice, byte*, int)
  nameWithType: ALC.Loopback.RenderSamplesSOFT(ALDevice, byte*, int)
  fullName: OpenTK.Audio.OpenAL.ALC.Loopback.RenderSamplesSOFT(OpenTK.Audio.OpenAL.ALDevice, byte*, int)
  type: Method
  source:
    remote:
      path: src/OpenAL/OpenTK.Audio.OpenAL/Extensions/SOFT.Loopback/Loopback.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: RenderSamplesSOFT
    path: opentk/src/OpenAL/OpenTK.Audio.OpenAL/Extensions/SOFT.Loopback/Loopback.cs
    startLine: 49
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  syntax:
    content: public static void RenderSamplesSOFT(ALDevice device, byte* buffer, int samples)
    parameters:
    - id: device
      type: OpenTK.Audio.OpenAL.ALDevice
    - id: buffer
      type: System.Byte*
    - id: samples
      type: System.Int32
    content.vb: Public Shared Sub RenderSamplesSOFT(device As ALDevice, buffer As Byte*, samples As Integer)
  overload: OpenTK.Audio.OpenAL.ALC.Loopback.RenderSamplesSOFT*
  nameWithType.vb: ALC.Loopback.RenderSamplesSOFT(ALDevice, Byte*, Integer)
  fullName.vb: OpenTK.Audio.OpenAL.ALC.Loopback.RenderSamplesSOFT(OpenTK.Audio.OpenAL.ALDevice, Byte*, Integer)
  name.vb: RenderSamplesSOFT(ALDevice, Byte*, Integer)
- uid: OpenTK.Audio.OpenAL.ALC.Loopback.RenderSamplesSOFT(OpenTK.Audio.OpenAL.ALDevice,System.Byte@,System.Int32)
  commentId: M:OpenTK.Audio.OpenAL.ALC.Loopback.RenderSamplesSOFT(OpenTK.Audio.OpenAL.ALDevice,System.Byte@,System.Int32)
  id: RenderSamplesSOFT(OpenTK.Audio.OpenAL.ALDevice,System.Byte@,System.Int32)
  parent: OpenTK.Audio.OpenAL.ALC.Loopback
  langs:
  - csharp
  - vb
  name: RenderSamplesSOFT(ALDevice, ref byte, int)
  nameWithType: ALC.Loopback.RenderSamplesSOFT(ALDevice, ref byte, int)
  fullName: OpenTK.Audio.OpenAL.ALC.Loopback.RenderSamplesSOFT(OpenTK.Audio.OpenAL.ALDevice, ref byte, int)
  type: Method
  source:
    remote:
      path: src/OpenAL/OpenTK.Audio.OpenAL/Extensions/SOFT.Loopback/Loopback.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: RenderSamplesSOFT
    path: opentk/src/OpenAL/OpenTK.Audio.OpenAL/Extensions/SOFT.Loopback/Loopback.cs
    startLine: 54
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  syntax:
    content: public static void RenderSamplesSOFT(ALDevice device, ref byte buffer, int samples)
    parameters:
    - id: device
      type: OpenTK.Audio.OpenAL.ALDevice
    - id: buffer
      type: System.Byte
    - id: samples
      type: System.Int32
    content.vb: Public Shared Sub RenderSamplesSOFT(device As ALDevice, buffer As Byte, samples As Integer)
  overload: OpenTK.Audio.OpenAL.ALC.Loopback.RenderSamplesSOFT*
  nameWithType.vb: ALC.Loopback.RenderSamplesSOFT(ALDevice, Byte, Integer)
  fullName.vb: OpenTK.Audio.OpenAL.ALC.Loopback.RenderSamplesSOFT(OpenTK.Audio.OpenAL.ALDevice, Byte, Integer)
  name.vb: RenderSamplesSOFT(ALDevice, Byte, Integer)
- uid: OpenTK.Audio.OpenAL.ALC.Loopback.RenderSamplesSOFT(OpenTK.Audio.OpenAL.ALDevice,System.Byte[],System.Int32)
  commentId: M:OpenTK.Audio.OpenAL.ALC.Loopback.RenderSamplesSOFT(OpenTK.Audio.OpenAL.ALDevice,System.Byte[],System.Int32)
  id: RenderSamplesSOFT(OpenTK.Audio.OpenAL.ALDevice,System.Byte[],System.Int32)
  parent: OpenTK.Audio.OpenAL.ALC.Loopback
  langs:
  - csharp
  - vb
  name: RenderSamplesSOFT(ALDevice, byte[], int)
  nameWithType: ALC.Loopback.RenderSamplesSOFT(ALDevice, byte[], int)
  fullName: OpenTK.Audio.OpenAL.ALC.Loopback.RenderSamplesSOFT(OpenTK.Audio.OpenAL.ALDevice, byte[], int)
  type: Method
  source:
    remote:
      path: src/OpenAL/OpenTK.Audio.OpenAL/Extensions/SOFT.Loopback/Loopback.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: RenderSamplesSOFT
    path: opentk/src/OpenAL/OpenTK.Audio.OpenAL/Extensions/SOFT.Loopback/Loopback.cs
    startLine: 59
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  syntax:
    content: public static void RenderSamplesSOFT(ALDevice device, byte[] buffer, int samples)
    parameters:
    - id: device
      type: OpenTK.Audio.OpenAL.ALDevice
    - id: buffer
      type: System.Byte[]
    - id: samples
      type: System.Int32
    content.vb: Public Shared Sub RenderSamplesSOFT(device As ALDevice, buffer As Byte(), samples As Integer)
  overload: OpenTK.Audio.OpenAL.ALC.Loopback.RenderSamplesSOFT*
  nameWithType.vb: ALC.Loopback.RenderSamplesSOFT(ALDevice, Byte(), Integer)
  fullName.vb: OpenTK.Audio.OpenAL.ALC.Loopback.RenderSamplesSOFT(OpenTK.Audio.OpenAL.ALDevice, Byte(), Integer)
  name.vb: RenderSamplesSOFT(ALDevice, Byte(), Integer)
- uid: OpenTK.Audio.OpenAL.ALC.Loopback.RenderSamplesSOFT``1(OpenTK.Audio.OpenAL.ALDevice,``0[],System.Int32)
  commentId: M:OpenTK.Audio.OpenAL.ALC.Loopback.RenderSamplesSOFT``1(OpenTK.Audio.OpenAL.ALDevice,``0[],System.Int32)
  id: RenderSamplesSOFT``1(OpenTK.Audio.OpenAL.ALDevice,``0[],System.Int32)
  parent: OpenTK.Audio.OpenAL.ALC.Loopback
  langs:
  - csharp
  - vb
  name: RenderSamplesSOFT<TBuffer>(ALDevice, TBuffer[], int)
  nameWithType: ALC.Loopback.RenderSamplesSOFT<TBuffer>(ALDevice, TBuffer[], int)
  fullName: OpenTK.Audio.OpenAL.ALC.Loopback.RenderSamplesSOFT<TBuffer>(OpenTK.Audio.OpenAL.ALDevice, TBuffer[], int)
  type: Method
  source:
    remote:
      path: src/OpenAL/OpenTK.Audio.OpenAL/Extensions/SOFT.Loopback/Loopback.cs
      branch: master
      repo: git@github.com:opentk/opentk.git
    id: RenderSamplesSOFT
    path: opentk/src/OpenAL/OpenTK.Audio.OpenAL/Extensions/SOFT.Loopback/Loopback.cs
    startLine: 65
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  syntax:
    content: 'public static void RenderSamplesSOFT<TBuffer>(ALDevice device, TBuffer[] buffer, int samples) where TBuffer : unmanaged'
    parameters:
    - id: device
      type: OpenTK.Audio.OpenAL.ALDevice
    - id: buffer
      type: '{TBuffer}[]'
    - id: samples
      type: System.Int32
    typeParameters:
    - id: TBuffer
    content.vb: Public Shared Sub RenderSamplesSOFT(Of TBuffer As Structure)(device As ALDevice, buffer As TBuffer(), samples As Integer)
  overload: OpenTK.Audio.OpenAL.ALC.Loopback.RenderSamplesSOFT*
  nameWithType.vb: ALC.Loopback.RenderSamplesSOFT(Of TBuffer)(ALDevice, TBuffer(), Integer)
  fullName.vb: OpenTK.Audio.OpenAL.ALC.Loopback.RenderSamplesSOFT(Of TBuffer)(OpenTK.Audio.OpenAL.ALDevice, TBuffer(), Integer)
  name.vb: RenderSamplesSOFT(Of TBuffer)(ALDevice, TBuffer(), Integer)
references:
- uid: OpenTK.Audio.OpenAL
  commentId: N:OpenTK.Audio.OpenAL
  href: OpenTK.html
  name: OpenTK.Audio.OpenAL
  nameWithType: OpenTK.Audio.OpenAL
  fullName: OpenTK.Audio.OpenAL
  spec.csharp:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Audio
    name: Audio
    href: OpenTK.Audio.html
  - name: .
  - uid: OpenTK.Audio.OpenAL
    name: OpenAL
    href: OpenTK.Audio.OpenAL.html
  spec.vb:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Audio
    name: Audio
    href: OpenTK.Audio.html
  - name: .
  - uid: OpenTK.Audio.OpenAL
    name: OpenAL
    href: OpenTK.Audio.OpenAL.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: OpenTK.Audio.OpenAL.ALC.Loopback.IsExtensionPresent*
  commentId: Overload:OpenTK.Audio.OpenAL.ALC.Loopback.IsExtensionPresent
  href: OpenTK.Audio.OpenAL.ALC.Loopback.html#OpenTK.Audio.OpenAL.ALC.Loopback.IsExtensionPresent(OpenTK.Audio.OpenAL.ALDevice)
  name: IsExtensionPresent
  nameWithType: ALC.Loopback.IsExtensionPresent
  fullName: OpenTK.Audio.OpenAL.ALC.Loopback.IsExtensionPresent
- uid: OpenTK.Audio.OpenAL.ALDevice
  commentId: T:OpenTK.Audio.OpenAL.ALDevice
  parent: OpenTK.Audio.OpenAL
  href: OpenTK.Audio.OpenAL.ALDevice.html
  name: ALDevice
  nameWithType: ALDevice
  fullName: OpenTK.Audio.OpenAL.ALDevice
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: OpenTK.Audio.OpenAL.ALC.Loopback.LoopbackOpenDeviceSOFT*
  commentId: Overload:OpenTK.Audio.OpenAL.ALC.Loopback.LoopbackOpenDeviceSOFT
  href: OpenTK.Audio.OpenAL.ALC.Loopback.html#OpenTK.Audio.OpenAL.ALC.Loopback.LoopbackOpenDeviceSOFT(System.String)
  name: LoopbackOpenDeviceSOFT
  nameWithType: ALC.Loopback.LoopbackOpenDeviceSOFT
  fullName: OpenTK.Audio.OpenAL.ALC.Loopback.LoopbackOpenDeviceSOFT
- uid: OpenTK.Audio.OpenAL.ALC.Loopback.IsRenderFormatSupportedSOFT*
  commentId: Overload:OpenTK.Audio.OpenAL.ALC.Loopback.IsRenderFormatSupportedSOFT
  href: OpenTK.Audio.OpenAL.ALC.Loopback.html#OpenTK.Audio.OpenAL.ALC.Loopback.IsRenderFormatSupportedSOFT(OpenTK.Audio.OpenAL.ALDevice,System.Int32,OpenTK.Audio.OpenAL.Channels,OpenTK.Audio.OpenAL.RenderFormat)
  name: IsRenderFormatSupportedSOFT
  nameWithType: ALC.Loopback.IsRenderFormatSupportedSOFT
  fullName: OpenTK.Audio.OpenAL.ALC.Loopback.IsRenderFormatSupportedSOFT
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: OpenTK.Audio.OpenAL.Channels
  commentId: T:OpenTK.Audio.OpenAL.Channels
  parent: OpenTK.Audio.OpenAL
  href: OpenTK.Audio.OpenAL.Channels.html
  name: Channels
  nameWithType: Channels
  fullName: OpenTK.Audio.OpenAL.Channels
- uid: OpenTK.Audio.OpenAL.RenderFormat
  commentId: T:OpenTK.Audio.OpenAL.RenderFormat
  parent: OpenTK.Audio.OpenAL
  href: OpenTK.Audio.OpenAL.RenderFormat.html
  name: RenderFormat
  nameWithType: RenderFormat
  fullName: OpenTK.Audio.OpenAL.RenderFormat
- uid: OpenTK.Audio.OpenAL.ALC.Loopback.RenderSamplesSOFT*
  commentId: Overload:OpenTK.Audio.OpenAL.ALC.Loopback.RenderSamplesSOFT
  href: OpenTK.Audio.OpenAL.ALC.Loopback.html#OpenTK.Audio.OpenAL.ALC.Loopback.RenderSamplesSOFT(OpenTK.Audio.OpenAL.ALDevice,System.Byte*,System.Int32)
  name: RenderSamplesSOFT
  nameWithType: ALC.Loopback.RenderSamplesSOFT
  fullName: OpenTK.Audio.OpenAL.ALC.Loopback.RenderSamplesSOFT
- uid: System.Byte*
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte*
  nameWithType: byte*
  fullName: byte*
  nameWithType.vb: Byte*
  fullName.vb: Byte*
  name.vb: Byte*
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '*'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '*'
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: '{TBuffer}[]'
  isExternal: true
  name: TBuffer[]
  nameWithType: TBuffer[]
  fullName: TBuffer[]
  nameWithType.vb: TBuffer()
  fullName.vb: TBuffer()
  name.vb: TBuffer()
  spec.csharp:
  - name: TBuffer
  - name: '['
  - name: ']'
  spec.vb:
  - name: TBuffer
  - name: (
  - name: )
